using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using System.Data.SqlClient;
using MySql.Data.MySqlClient;

using CoFAS_MES.UI.MM.Entity;

using CoFAS_MES.CORE.Entity;
using CoFAS_MES.CORE.Function;

namespace CoFAS_MES.UI.MM.Data
{
    public class MaterialOrderRegisterProvider : EntityManager<MaterialOrderRegisterEntity>
    {
        public MaterialOrderRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #region 개체 구하기 - GetEntity(pDataRow)

        public override MaterialOrderRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegisterEntity pMaterialOrderRegisterEntity = new MaterialOrderRegisterEntity();

                pMaterialOrderRegisterEntity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        public DataTable MaterialOrderRegister_R10(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_REFERENCE_ID".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code   ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_REFERENCE_ID".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_vend_part_code   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderRegisterEntity.ORDER_ID;
                pDataParameters[4].Value = pMaterialOrderRegisterEntity.REFERENCE_ID;
                pDataParameters[5].Value = pMaterialOrderRegisterEntity.USE_YN;
                pDataParameters[6].Value = pMaterialOrderRegisterEntity.VEND_CODE;
                pDataParameters[7].Value = pMaterialOrderRegisterEntity.VEND_NAME;
                pDataParameters[8].Value = pMaterialOrderRegisterEntity.PART_CODE;
                pDataParameters[9].Value = pMaterialOrderRegisterEntity.PART_NAME;
                pDataParameters[10].Value = pMaterialOrderRegisterEntity.VEND_PART_CDOE;
                pDataParameters[11].Value = pMaterialOrderRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_R10(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)",
                    pException
                );
            }
        }
        public DataTable MaterialOrderRegister_R20(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_R20(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity.VEND_CODE;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R30", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_Sheet_Data(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity.VEND_CODE;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity.ORDER_ID;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(MaterialOrderRegisterEntity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_Info_Save(MaterialOrderRegisterEntity pMaterialOrderRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_contract_id           ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),
                            
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_contract_id           ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),
                                
                        };
                        break;
                }
                pDataParametersA[0].Value =  pMaterialOrderRegisterEntity.CRUD;
                pDataParametersA[1].Value =  pMaterialOrderRegisterEntity.USER_CODE;
                pDataParametersA[2].Value =  pMaterialOrderRegisterEntity.ORDER_ID;
                pDataParametersA[3].Value =  pMaterialOrderRegisterEntity.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value =  pMaterialOrderRegisterEntity.ORDER_SEQ;
                pDataParametersA[5].Value =  pMaterialOrderRegisterEntity.VEND_CODE;
                pDataParametersA[6].Value =  pMaterialOrderRegisterEntity.PART_CODE;
                pDataParametersA[7].Value =  Convert.ToDecimal(pMaterialOrderRegisterEntity.ORDER_QTY);
                pDataParametersA[8].Value =  pMaterialOrderRegisterEntity.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value =  pMaterialOrderRegisterEntity.REQUEST_LOCATION;
                pDataParametersA[10].Value = pMaterialOrderRegisterEntity.UNIT_CODE;
                pDataParametersA[11].Value = pMaterialOrderRegisterEntity.UNITCODT_CURRENCY_CODE; 
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialOrderRegisterEntity.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pMaterialOrderRegisterEntity.COST);
                pDataParametersA[14].Value = pMaterialOrderRegisterEntity.CONTRACT_ID;
                pDataParametersA[15].Value = pMaterialOrderRegisterEntity.REMARK;
                pDataParametersA[16].Value = pMaterialOrderRegisterEntity.USE_YN;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pMaterialOrderRegisterEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialOrderRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialOrderRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialOrderRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialOrderRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity, DataTable dt)",
                    pException
                );
            }finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }
    public class MaterialOrderRegister_T02Provider : EntityManager<MaterialOrderRegister_T02Entity>
    {
        public MaterialOrderRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        public DataTable MaterialOrderRegister_T02_Sub_Return(string pCRUD, string pCONTRACT_ID, string pPART_CODE, string pPART_TYPE, string pLANGUAGE_TYPE, decimal pQTY)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,15),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                            new SqlParameter("@v_contract_id", SqlDbType.NVarChar,15),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_qty", SqlDbType.Decimal),
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pCONTRACT_ID;
                pDataParameters[2].Value = pPART_TYPE;
                pDataParameters[3].Value = pPART_CODE;
                pDataParameters[4].Value = pLANGUAGE_TYPE;
                pDataParameters[5].Value = pQTY;

                //18.06.21
                //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                //BOM조회
                DataTable pDataTableSet = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        #region 개체 구하기 - GetEntity(pDataRow)
        public DataTable MaterialOrderRegister_T02_Sub_Return(MaterialOrderRegister_T02Entity _MaterialOrderRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            DataTable dt_tmp = new DataTable { TableName = "temp" };
            dt_tmp.Columns.AddRange(new DataColumn[] {
                            new DataColumn { ColumnName = "CRUD"            ,Caption = "*",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_TYPE"       ,Caption = "품목구분",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_CODE"       ,Caption = "품목코드",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "ORDER_ID"     ,Caption = "수주번호",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "VEND_PART_CODE"  ,Caption = "업체품번",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_NAME"       ,Caption = "품목명",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNIT_CODE"       ,Caption = "단위구분",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNIT_NAME"       ,Caption = "단위",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNITCOST"        ,Caption = "단가",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "VEND_CODE"       ,Caption = "업체명",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_QTY"        ,Caption = "수량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "SPEND_QTY"       ,Caption = "소요량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_UNIT_NAME"  ,Caption = "단위2",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "STOCK"           ,Caption = "재고",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "LACK_QTY"        ,Caption = "부족수량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "ORDER_QTY"      ,Caption = "발주수량",DataType = typeof(string)   }

                            });

            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            IDataParameter[] pDataParameters = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,15),
                                        //new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                                        //new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                                    };
                                    break;

                                case "SQLServer":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,15),
                                        //new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                                        //new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                                        //new SqlParameter("@v_qty", SqlDbType.Decimal),
                                    };
                                    break;
                            }

                            pDataParameters[0].Value = _MaterialOrderRegister_T02Entity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                            pDataParameters[1].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();//pCONTRACT_ID;
                            //pDataParameters[2].Value = dt.Rows[a]["PART_TYPE"].ToString().ToUpper();//pPART_TYPE;
                            //pDataParameters[2].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pPART_CODE;
                            pDataParameters[2].Value = _MaterialOrderRegister_T02Entity.LANGUAGE_TYPE;//pLANGUAGE_TYPE;
                            //pDataParameters[4].Value = dt.Rows[a]["CONTRACT_QTY"].ToString().ToUpper();// pQTY;

                            //18.06.21
                            //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                            //BOM조회
                            DataTable pDataTable;
                            pDataTable = new DataTable();


                            pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T02_R20", pDataParameters);
                            pDataTable.TableName = "tmp";


                            //DataTable 생성



                            //Columns 생성

                            //합계-통합
                            if (_MaterialOrderRegister_T02Entity.check_yn)
                            {

                                //쿼리받은 테이블
                                for (int i = 0; i < pDataTable.Rows.Count; i++)
                                {
                                    bool find_yn = false;
                                    //리턴할 테이블
                                    for (int j = 0; j < dt_tmp.Rows.Count; j++)
                                    {
                                        //기존에 품목코드가 있다면 수량 더하기
                                        /*if (pDataTable.Rows[i]["PART_CODE"].ToString() == dt_tmp.Rows[j]["PART_CODE"].ToString())
                                        {
                                            find_yn = true;

                                            decimal p_spend_qty = 0;
                                            decimal rtn_spend_qty = 0;

                                            decimal p_now_stock = 0;

                                            decimal p_lack_qty = 0;
                                            decimal rtn_lack_qty = 0;


                                            rtn_spend_qty = Convert.ToDecimal(dt_tmp.Rows[j]["SPEND_QTY"]);
                                            p_spend_qty = Convert.ToDecimal(pDataTable.Rows[i]["SPEND_QTY"]);

                                            //현재 재고
                                            p_now_stock = Convert.ToDecimal(pDataTable.Rows[i]["STOCK"]);

                                            //현재재고 - sum(소요량)

                                            p_lack_qty = Convert.ToDecimal(dt_tmp.Rows[j]["LACK_QTY"]);
                                            rtn_lack_qty = Convert.ToDecimal(pDataTable.Rows[i]["LACK_QTY"]);


                                            //더하기
                                            dt_tmp.Rows[j]["SPEND_QTY"] = Convert.ToString(rtn_spend_qty + p_spend_qty);
                                            //dt_tmp.Rows[j]["LACK_QTY"] = Convert.ToString(p_lack_qty + rtn_lack_qty);\
                                            dt_tmp.Rows[j]["LACK_QTY"] = Convert.ToString(p_now_stock - (rtn_spend_qty + p_spend_qty));

                                        }
                                        */

                                    }
                                    if (!find_yn)
                                    {

                                        //없다면 신규로 추가
                                        DataRow dr = dt_tmp.NewRow();
                                        // DataRow 생성 및 Column Name을 기준으로 Row 추가하기 (추천)
                                        dr = dt_tmp.NewRow();
                                        //dr["CRUD"] = pDataTable.Rows[i]["CRUD"].ToString();
                                        //dr["PART_TYPE"] = pDataTable.Rows[i]["PART_TYPE"].ToString();
                                        dr["PART_CODE"] = pDataTable.Rows[i]["PART_CODE"].ToString();
                                        //dr["CONTRACT_ID"] = "";// pDataTable.Rows[i]["CONTRACT_ID"].ToString();
                                        //dr["VEND_PART_CODE"] = pDataTable.Rows[i]["VEND_PART_CODE"].ToString();
                                        //dr["PART_NAME"] = pDataTable.Rows[i]["PART_NAME"].ToString();
                                        dr["UNIT_CODE"] = pDataTable.Rows[i]["UNIT_CODE"].ToString();
                                        //dr["UNIT_NAME"] = pDataTable.Rows[i]["UNIT_NAME"].ToString();
                                        dr["UNITCOST"] = pDataTable.Rows[i]["UNITCOST"].ToString();
                                        dr["VEND_CODE"] = pDataTable.Rows[i]["VEND_CODE"].ToString();
                                        //dr["PART_QTY"] = pDataTable.Rows[i]["PART_QTY"].ToString();
                                        //dr["SPEND_QTY"] = pDataTable.Rows[i]["SPEND_QTY"].ToString();
                                        //dr["PART_UNIT_NAME"] = pDataTable.Rows[i]["PART_UNIT_NAME"].ToString();
                                        //dr["STOCK"] = pDataTable.Rows[i]["STOCK"].ToString();
                                        //dr["LACK_QTY"] = pDataTable.Rows[i]["LACK_QTY"].ToString();
                                        dr["ORDER_QTY"] = pDataTable.Rows[i]["ORDER_QTY"].ToString();
                                        dt_tmp.Rows.Add(dr);
                                    }
                                    find_yn = false;

                                }
                            }
                            //개별
                            else
                            {
                                ds.Merge(pDataTable);
                            }


                            //if (pDataTable != null)
                            //{
                            //    GetEntity(pDataTable.Rows[0]);
                            //}


                        }
                    }

                }
                /*
                //dt.DefaultView.Sort = "index desc";
                if(ds.Tables.Count==0)
                    return null;
                 ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                return ds.Tables[0];
                */
                //dt.DefaultView.Sort = "index desc";
                if (_MaterialOrderRegister_T02Entity.check_yn)
                {
                    if (dt_tmp.Rows.Count == 0)
                        return null;
                    dt_tmp.DefaultView.Sort = "PART_CODE asc";
                    return dt_tmp;
                }
                else
                {
                    if (ds.Tables.Count == 0)
                        return null;
                    ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                    return ds.Tables[0];
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        public override MaterialOrderRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity = new MaterialOrderRegister_T02Entity();

                pMaterialOrderRegister_T02Entity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        public DataTable MaterialOrderRegister_T02_R10(MaterialOrderRegister_T02Entity _MaterialOrderRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_REFERENCE_ID".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code   ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_REFERENCE_ID".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_vend_part_code   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = _MaterialOrderRegister_T02Entity.CRUD;
                pDataParameters[1].Value = _MaterialOrderRegister_T02Entity.DATE_FROM;
                pDataParameters[2].Value = _MaterialOrderRegister_T02Entity.DATE_TO;
                pDataParameters[3].Value = _MaterialOrderRegister_T02Entity.ORDER_ID;
                pDataParameters[4].Value = _MaterialOrderRegister_T02Entity.REFERENCE_ID;
                pDataParameters[5].Value = _MaterialOrderRegister_T02Entity.USE_YN;
                pDataParameters[6].Value = _MaterialOrderRegister_T02Entity.VEND_CODE;
                pDataParameters[7].Value = _MaterialOrderRegister_T02Entity.VEND_NAME;
                pDataParameters[8].Value = _MaterialOrderRegister_T02Entity.PART_CODE;
                pDataParameters[9].Value = _MaterialOrderRegister_T02Entity.PART_NAME;
                pDataParameters[10].Value = _MaterialOrderRegister_T02Entity.VEND_PART_CDOE;
                pDataParameters[11].Value = _MaterialOrderRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T02_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T02_R10(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)",
                    pException
                );
            }
        }
        public DataTable MaterialOrderRegister_T02_R20(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity) // public DataTable MaterialOrderRegister_T02_R10(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_T02Entity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T02_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T02_R20(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_T02Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOrderRegister_T02Entity.VEND_CODE;
                pDataParameters[2].Value = pMaterialOrderRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R40", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_Sheet_Data(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_T02Entity.VEND_CODE;
                pDataParameters[1].Value = pMaterialOrderRegister_T02Entity.ORDER_ID;
                pDataParameters[2].Value = pMaterialOrderRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)",
                    pException
                );
            }
        }
        #endregion

        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(MaterialOrderRegister_T02Entity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderRegister_T02Entity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_T02_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_T02_Info_Save(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                //new MySqlParameter("@v_contract_id           ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_language_type         ".Trim(), MySqlDbType.VarChar, 5),


                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                //new SqlParameter("@v_contract_id           ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),
                                new MySqlParameter("@v_language_type         ".Trim(), MySqlDbType.VarChar, 5),

                        };
                        break;
                }
                pDataParametersA[0].Value = pMaterialOrderRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pMaterialOrderRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOrderRegister_T02Entity.ORDER_ID;
                pDataParametersA[3].Value = pMaterialOrderRegister_T02Entity.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value = pMaterialOrderRegister_T02Entity.ORDER_SEQ;
                pDataParametersA[5].Value = pMaterialOrderRegister_T02Entity.VEND_CODE;
                pDataParametersA[6].Value = pMaterialOrderRegister_T02Entity.PART_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pMaterialOrderRegister_T02Entity.ORDER_QTY);
                pDataParametersA[8].Value = pMaterialOrderRegister_T02Entity.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value = pMaterialOrderRegister_T02Entity.REQUEST_LOCATION;
                pDataParametersA[10].Value = pMaterialOrderRegister_T02Entity.UNIT_CODE;
                pDataParametersA[11].Value = pMaterialOrderRegister_T02Entity.UNITCODT_CURRENCY_CODE;
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialOrderRegister_T02Entity.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pMaterialOrderRegister_T02Entity.COST);
                //pDataParametersA[14].Value = pMaterialOrderRegister_T02Entity.CONTRACT_ID;
                pDataParametersA[14].Value = pMaterialOrderRegister_T02Entity.REMARK;
                pDataParametersA[15].Value = pMaterialOrderRegister_T02Entity.USE_YN;
                pDataParametersA[16].Value = pMaterialOrderRegister_T02Entity.LANGUAGE_TYPE;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T02_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pMaterialOrderRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialOrderRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialOrderRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialOrderRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialOrderRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T02_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }
    public class MaterialOrderRegister_T03Provider : EntityManager<MaterialOrderRegister_T03Entity>
    {
        public MaterialOrderRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        public DataTable MaterialOrderRegister_T03_Sub_Return(string pCRUD, string pCONTRACT_ID, string pPART_CODE, string pPART_TYPE, string pLANGUAGE_TYPE, decimal pQTY)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,15),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                            new SqlParameter("@v_contract_id", SqlDbType.NVarChar,15),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_qty", SqlDbType.Decimal),
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pCONTRACT_ID;
                pDataParameters[2].Value = pPART_TYPE;
                pDataParameters[3].Value = pPART_CODE;
                pDataParameters[4].Value = pLANGUAGE_TYPE;
                pDataParameters[5].Value = pQTY;

                //18.06.21
                //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                //BOM조회
                DataTable pDataTableSet = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        #region 개체 구하기 - GetEntity(pDataRow)
        public DataTable MaterialOrderRegister_T03_Sub_Return(MaterialOrderRegister_T03Entity _MaterialOrderRegister_T03Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            DataTable dt_tmp = new DataTable { TableName = "temp" };
            dt_tmp.Columns.AddRange(new DataColumn[] {
                            new DataColumn { ColumnName = "CRUD"            ,Caption = "*",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_TYPE"       ,Caption = "품목구분",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_CODE"       ,Caption = "품목코드",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "ORDER_ID"     ,Caption = "수주번호",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "VEND_PART_CODE"  ,Caption = "업체품번",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_NAME"       ,Caption = "품목명",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNIT_CODE"       ,Caption = "단위구분",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNIT_NAME"       ,Caption = "단위",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNITCOST"        ,Caption = "단가",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "VEND_CODE"       ,Caption = "업체명",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_QTY"        ,Caption = "수량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "SPEND_QTY"       ,Caption = "소요량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_UNIT_NAME"  ,Caption = "단위2",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "STOCK"           ,Caption = "재고",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "LACK_QTY"        ,Caption = "부족수량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "ORDER_QTY"      ,Caption = "발주수량",DataType = typeof(string)   }

                            });

            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            IDataParameter[] pDataParameters = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,15),
                                        //new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                                        //new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                                    };
                                    break;

                                case "SQLServer":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,15),
                                        //new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                                        //new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                                        //new SqlParameter("@v_qty", SqlDbType.Decimal),
                                    };
                                    break;
                            }

                            pDataParameters[0].Value = _MaterialOrderRegister_T03Entity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                           
                            //pDataParameters[2].Value = dt.Rows[a]["PART_TYPE"].ToString().ToUpper();//pPART_TYPE;
                            //pDataParameters[2].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pPART_CODE;
                            pDataParameters[1].Value = _MaterialOrderRegister_T03Entity.LANGUAGE_TYPE;//pLANGUAGE_TYPE;
                            pDataParameters[2].Value = _MaterialOrderRegister_T03Entity.USER_NAME;
                            //pDataParameters[4].Value = dt.Rows[a]["CONTRACT_QTY"].ToString().ToUpper();// pQTY;

                            //18.06.21
                            //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                            //BOM조회
                            DataTable pDataTable;
                            pDataTable = new DataTable();


                            pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T03_R40", pDataParameters);
                            pDataTable.TableName = "tmp";


                            //DataTable 생성



                            //Columns 생성

                            //합계-통합
                            if (_MaterialOrderRegister_T03Entity.check_yn)
                            {

                                //쿼리받은 테이블
                                for (int i = 0; i < pDataTable.Rows.Count; i++)
                                {
                                    bool find_yn = false;
                                    //리턴할 테이블
                                    for (int j = 0; j < dt_tmp.Rows.Count; j++)
                                    {
                                        //기존에 품목코드가 있다면 수량 더하기
                                        /*if (pDataTable.Rows[i]["PART_CODE"].ToString() == dt_tmp.Rows[j]["PART_CODE"].ToString())
                                        {
                                            find_yn = true;

                                            decimal p_spend_qty = 0;
                                            decimal rtn_spend_qty = 0;

                                            decimal p_now_stock = 0;

                                            decimal p_lack_qty = 0;
                                            decimal rtn_lack_qty = 0;


                                            rtn_spend_qty = Convert.ToDecimal(dt_tmp.Rows[j]["SPEND_QTY"]);
                                            p_spend_qty = Convert.ToDecimal(pDataTable.Rows[i]["SPEND_QTY"]);

                                            //현재 재고
                                            p_now_stock = Convert.ToDecimal(pDataTable.Rows[i]["STOCK"]);

                                            //현재재고 - sum(소요량)

                                            p_lack_qty = Convert.ToDecimal(dt_tmp.Rows[j]["LACK_QTY"]);
                                            rtn_lack_qty = Convert.ToDecimal(pDataTable.Rows[i]["LACK_QTY"]);


                                            //더하기
                                            dt_tmp.Rows[j]["SPEND_QTY"] = Convert.ToString(rtn_spend_qty + p_spend_qty);
                                            //dt_tmp.Rows[j]["LACK_QTY"] = Convert.ToString(p_lack_qty + rtn_lack_qty);\
                                            dt_tmp.Rows[j]["LACK_QTY"] = Convert.ToString(p_now_stock - (rtn_spend_qty + p_spend_qty));

                                        }
                                        */

                                    }
                                    if (!find_yn)
                                    {

                                        //없다면 신규로 추가
                                        DataRow dr = dt_tmp.NewRow();
                                        // DataRow 생성 및 Column Name을 기준으로 Row 추가하기 (추천)
                                        dr = dt_tmp.NewRow();
                                        //dr["CRUD"] = pDataTable.Rows[i]["CRUD"].ToString();
                                        //dr["PART_TYPE"] = pDataTable.Rows[i]["PART_TYPE"].ToString();
                                        dr["PART_CODE"] = pDataTable.Rows[i]["PART_CODE"].ToString();
                                        //dr["CONTRACT_ID"] = "";// pDataTable.Rows[i]["CONTRACT_ID"].ToString();
                                        //dr["VEND_PART_CODE"] = pDataTable.Rows[i]["VEND_PART_CODE"].ToString();
                                        //dr["PART_NAME"] = pDataTable.Rows[i]["PART_NAME"].ToString();
                                        dr["UNIT_CODE"] = pDataTable.Rows[i]["UNIT_CODE"].ToString();
                                        //dr["UNIT_NAME"] = pDataTable.Rows[i]["UNIT_NAME"].ToString();
                                        dr["UNITCOST"] = pDataTable.Rows[i]["UNITCOST"].ToString();
                                        dr["VEND_CODE"] = pDataTable.Rows[i]["VEND_CODE"].ToString();
                                        //dr["PART_QTY"] = pDataTable.Rows[i]["PART_QTY"].ToString();
                                        //dr["SPEND_QTY"] = pDataTable.Rows[i]["SPEND_QTY"].ToString();
                                        //dr["PART_UNIT_NAME"] = pDataTable.Rows[i]["PART_UNIT_NAME"].ToString();
                                        //dr["STOCK"] = pDataTable.Rows[i]["STOCK"].ToString();
                                        //dr["LACK_QTY"] = pDataTable.Rows[i]["LACK_QTY"].ToString();
                                        dr["ORDER_QTY"] = pDataTable.Rows[i]["ORDER_QTY"].ToString();
                                        dt_tmp.Rows.Add(dr);
                                    }
                                    find_yn = false;

                                }
                            }
                            //개별
                            else
                            {
                                ds.Merge(pDataTable);
                            }


                            //if (pDataTable != null)
                            //{
                            //    GetEntity(pDataTable.Rows[0]);
                            //}


                        }
                    }

                }
                /*
                //dt.DefaultView.Sort = "index desc";
                if(ds.Tables.Count==0)
                    return null;
                 ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                return ds.Tables[0];
                */
                //dt.DefaultView.Sort = "index desc";
                if (_MaterialOrderRegister_T03Entity.check_yn)
                {
                    if (dt_tmp.Rows.Count == 0)
                        return null;
                    dt_tmp.DefaultView.Sort = "PART_CODE asc";
                    return dt_tmp;
                }
                else
                {
                    if (ds.Tables.Count == 0)
                        return null;
                    ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                    return ds.Tables[0];
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        public override MaterialOrderRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity = new MaterialOrderRegister_T03Entity();

                pMaterialOrderRegister_T03Entity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        public DataTable MaterialOrderRegister_T03_R30(MaterialOrderRegister_T03Entity _MaterialOrderRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_REFERENCE_ID".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code   ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_REFERENCE_ID".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_vend_part_code   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = _MaterialOrderRegister_T03Entity.CRUD;
                pDataParameters[1].Value = _MaterialOrderRegister_T03Entity.DATE_FROM;
                pDataParameters[2].Value = _MaterialOrderRegister_T03Entity.DATE_TO;
                pDataParameters[3].Value = _MaterialOrderRegister_T03Entity.ORDER_ID;
                pDataParameters[4].Value = _MaterialOrderRegister_T03Entity.REFERENCE_ID;
                pDataParameters[5].Value = _MaterialOrderRegister_T03Entity.USE_YN;
                pDataParameters[6].Value = _MaterialOrderRegister_T03Entity.VEND_CODE;
                pDataParameters[7].Value = _MaterialOrderRegister_T03Entity.VEND_NAME;
                pDataParameters[8].Value = _MaterialOrderRegister_T03Entity.PART_CODE;
                pDataParameters[9].Value = _MaterialOrderRegister_T03Entity.PART_NAME;
                pDataParameters[10].Value = _MaterialOrderRegister_T03Entity.VEND_PART_CDOE;
                pDataParameters[11].Value = _MaterialOrderRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T03_R30", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T03_R30(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity)",
                    pException
                );
            }
        }
        public DataTable MaterialOrderRegister_T03_R40(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity) // public DataTable MaterialOrderRegister_T02_R10(MaterialOrderRegister_T02Entity pMaterialOrderRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_T03Entity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T03_R40", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T03_R20(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_T03Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOrderRegister_T03Entity.VEND_CODE;
                pDataParameters[2].Value = pMaterialOrderRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R50", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_Sheet_Data(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_user_name", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_user_name", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_T03Entity.VEND_CODE;
                pDataParameters[1].Value = pMaterialOrderRegister_T03Entity.ORDER_ID;
                pDataParameters[2].Value = pMaterialOrderRegister_T03Entity.LANGUAGE_TYPE;
                pDataParameters[3].Value = pMaterialOrderRegister_T03Entity.USER_NAME;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R41", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity)",
                    pException
                );
            }
        }
        #endregion

        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(MaterialOrderRegister_T03Entity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderRegister_T03Entity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R60", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_T03_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_T03_Info_Save(MaterialOrderRegister_T03Entity pMaterialOrderRegister_T03Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                //new MySqlParameter("@v_contract_id           ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_language_type         ".Trim(), MySqlDbType.VarChar, 5),


                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                //new SqlParameter("@v_contract_id           ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),
                                new MySqlParameter("@v_language_type         ".Trim(), MySqlDbType.VarChar, 5),

                        };
                        break;
                }
                pDataParametersA[0].Value = pMaterialOrderRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pMaterialOrderRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOrderRegister_T03Entity.ORDER_ID;
                pDataParametersA[3].Value = pMaterialOrderRegister_T03Entity.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value = pMaterialOrderRegister_T03Entity.ORDER_SEQ;
                pDataParametersA[5].Value = pMaterialOrderRegister_T03Entity.VEND_CODE;
                pDataParametersA[6].Value = pMaterialOrderRegister_T03Entity.PART_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pMaterialOrderRegister_T03Entity.ORDER_QTY);
                pDataParametersA[8].Value = pMaterialOrderRegister_T03Entity.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value = pMaterialOrderRegister_T03Entity.REQUEST_LOCATION;
                pDataParametersA[10].Value = pMaterialOrderRegister_T03Entity.UNIT_CODE;
                pDataParametersA[11].Value = pMaterialOrderRegister_T03Entity.UNITCODT_CURRENCY_CODE;
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialOrderRegister_T03Entity.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pMaterialOrderRegister_T03Entity.COST);
                //pDataParametersA[14].Value = pMaterialOrderRegister_T03Entity.CONTRACT_ID;
                pDataParametersA[14].Value = pMaterialOrderRegister_T03Entity.REMARK;
                pDataParametersA[15].Value = pMaterialOrderRegister_T03Entity.USE_YN;
                pDataParametersA[16].Value = pMaterialOrderRegister_T03Entity.LANGUAGE_TYPE;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T03_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pMaterialOrderRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialOrderRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialOrderRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialOrderRegister_T03Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialOrderRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T03_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegister_T03Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }
    public class MaterialOrderRegister_ReportProvider : EntityManager<MaterialOrderRegister_ReportEntity>
    {
        public MaterialOrderRegister_ReportProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #region 개체 구하기 - GetEntity(pDataRow)

        public override MaterialOrderRegister_ReportEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity = new MaterialOrderRegister_ReportEntity();

                pMaterialOrderRegister_ReportEntity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegister_ReportEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
        #region 마스터 조회하기 - Sample_Info_Mst(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_ReportEntity.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegister_ReportEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderRegister_ReportEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderRegister_ReportEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialOrderRegister_ReportEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Report_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)",
                    pException
                );
            }
        }

        #endregion
        public DataTable MaterialOrderRegister_Report_R10(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_REFERENCE_ID".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_REFERENCE_ID".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_ReportEntity.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegister_ReportEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderRegister_ReportEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderRegister_ReportEntity.ORDER_ID;
                pDataParameters[4].Value = pMaterialOrderRegister_ReportEntity.REFERENCE_ID;
                pDataParameters[5].Value = pMaterialOrderRegister_ReportEntity.USE_YN;
                pDataParameters[6].Value = pMaterialOrderRegister_ReportEntity.VEND_CODE;
                pDataParameters[7].Value = pMaterialOrderRegister_ReportEntity.VEND_NAME;
                pDataParameters[8].Value = pMaterialOrderRegister_ReportEntity.PART_CODE;
                pDataParameters[9].Value = pMaterialOrderRegister_ReportEntity.PART_NAME;
                pDataParameters[10].Value = pMaterialOrderRegister_ReportEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Report_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Report_R10(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)",
                    pException
                );
            }
        }
        public DataTable MaterialOrderRegister_Report_R20(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_ReportEntity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Report_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Report_R20(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_ReportEntity.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegister_ReportEntity.WINDOW_NAME;
                pDataParameters[2].Value = pMaterialOrderRegister_ReportEntity.LANGUAGE_TYPE;

                DataTable pDatatable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R20", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDatatable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SampleExcelBindingEntity pSampleExcelBindingEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_Sheet_Data(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_ReportEntity.VEND_CODE;
                pDataParameters[1].Value = pMaterialOrderRegister_ReportEntity.ORDER_ID;
                pDataParameters[2].Value = pMaterialOrderRegister_ReportEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(MaterialOrderRegister_ReportEntity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderRegister_ReportEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Report_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_Report_Info_Save(MaterialOrderRegister_ReportEntity pMaterialOrderRegister_ReportEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_contract_id           ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_contract_id           ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),

                        };
                        break;
                }
                pDataParametersA[0].Value = pMaterialOrderRegister_ReportEntity.CRUD;
                pDataParametersA[1].Value = pMaterialOrderRegister_ReportEntity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOrderRegister_ReportEntity.ORDER_ID;
                pDataParametersA[3].Value = pMaterialOrderRegister_ReportEntity.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value = pMaterialOrderRegister_ReportEntity.ORDER_SEQ;
                pDataParametersA[5].Value = pMaterialOrderRegister_ReportEntity.VEND_CODE;
                pDataParametersA[6].Value = pMaterialOrderRegister_ReportEntity.PART_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pMaterialOrderRegister_ReportEntity.ORDER_QTY);
                pDataParametersA[8].Value = pMaterialOrderRegister_ReportEntity.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value = pMaterialOrderRegister_ReportEntity.REQUEST_LOCATION;
                pDataParametersA[10].Value = pMaterialOrderRegister_ReportEntity.UNIT_CODE;
                pDataParametersA[11].Value = pMaterialOrderRegister_ReportEntity.UNITCODT_CURRENCY_CODE;
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialOrderRegister_ReportEntity.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pMaterialOrderRegister_ReportEntity.COST);
                pDataParametersA[14].Value = pMaterialOrderRegister_ReportEntity.CONTRACT_ID;
                pDataParametersA[15].Value = pMaterialOrderRegister_ReportEntity.REMARK;
                pDataParametersA[16].Value = pMaterialOrderRegister_ReportEntity.USE_YN;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Report_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pMaterialOrderRegister_ReportEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialOrderRegister_ReportEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialOrderRegister_ReportEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialOrderRegister_ReportEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialOrderRegister_ReportEntity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Report_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegister_ReportEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }
    public class MaterialOrderRegister_RequestProvider : EntityManager<MaterialOrderRegisterEntity_Request>
    {
        public MaterialOrderRegister_RequestProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #region 개체 구하기 - GetEntity(pDataRow)

        public override MaterialOrderRegisterEntity_Request GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request = new MaterialOrderRegisterEntity_Request();

                pMaterialOrderRegisterEntity_Request.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegisterEntity_Request;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        public DataTable MaterialOrderRegister_Request_R10(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code   ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50),
                            

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_vend_part_code   ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50),


                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity_Request.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity_Request.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderRegisterEntity_Request.ORDER_ID;
                pDataParameters[4].Value = pMaterialOrderRegisterEntity_Request.USE_YN;
                pDataParameters[5].Value = pMaterialOrderRegisterEntity_Request.VEND_CODE;
                pDataParameters[6].Value = pMaterialOrderRegisterEntity_Request.VEND_NAME;
                pDataParameters[7].Value = pMaterialOrderRegisterEntity_Request.PART_CODE;
                pDataParameters[8].Value = pMaterialOrderRegisterEntity_Request.PART_NAME;
                pDataParameters[9].Value = pMaterialOrderRegisterEntity_Request.VEND_PART_CODE;
                pDataParameters[10].Value = pMaterialOrderRegisterEntity_Request.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_R10(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)",
                    pException
                );
            }
        }
        public DataTable MaterialOrderRegister_Request_R20(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity_Request.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_R20(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity_Request.WINDOW_NAME;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity_Request.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R20", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet Sheet_Info_Sheet_Data(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_user_name", MySqlDbType.VarChar, 50),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_user_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity_Request.VEND_CODE;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity_Request.ORDER_ID;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity_Request.LANGUAGE_TYPE;
                pDataParameters[3].Value = pMaterialOrderRegisterEntity_Request.USER_NAME;


                DataSet pDataTable = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_SheetInfoRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)",
                    pException
                );
            }
        }
        #endregion


        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(MaterialOrderRegisterEntity_Request pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderRegisterEntity_Request pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_Request_Info_Save(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),

                        };
                        break;
                }
                pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request.USER_CODE;
                pDataParametersA[2].Value = pMaterialOrderRegisterEntity_Request.ORDER_ID;
                pDataParametersA[3].Value = pMaterialOrderRegisterEntity_Request.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value = pMaterialOrderRegisterEntity_Request.ORDER_SEQ;
                pDataParametersA[5].Value = pMaterialOrderRegisterEntity_Request.VEND_CODE;
                pDataParametersA[6].Value = pMaterialOrderRegisterEntity_Request.PART_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pMaterialOrderRegisterEntity_Request.ORDER_QTY);
                pDataParametersA[8].Value = pMaterialOrderRegisterEntity_Request.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value = pMaterialOrderRegisterEntity_Request.REQUEST_LOCATION;
                pDataParametersA[10].Value = pMaterialOrderRegisterEntity_Request.UNIT_CODE;
                pDataParametersA[11].Value = pMaterialOrderRegisterEntity_Request.UNITCODT_CURRENCY_CODE;
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialOrderRegisterEntity_Request.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pMaterialOrderRegisterEntity_Request.COST);
                pDataParametersA[14].Value = pMaterialOrderRegisterEntity_Request.REMARK;
                pDataParametersA[15].Value = pMaterialOrderRegisterEntity_Request.USE_YN;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pMaterialOrderRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialOrderRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialOrderRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialOrderRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialOrderRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion



        #region 정보 저장하기 - MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_Request_Info_Check_Save(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if(dt.Rows[a]["CRUD"].ToString()=="Y")
                        { 
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),


                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),

                                };
                                break;
                        }
                        pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                        pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request.USER_CODE;
                        pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                        pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();


                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_I20", pDataParametersA);

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        pMaterialOrderRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                        pMaterialOrderRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                        pMaterialOrderRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                        pMaterialOrderRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                        pMaterialOrderRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                    }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }
    public class MaterialOrderRegister_Request_T01Provider : EntityManager<MaterialOrderRegisterEntity_Request_T01>
    {
        #region 생성자
        public MaterialOrderRegister_Request_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion
        
        #region 개체 구하기 - GetEntity(pDataRow)

        public override MaterialOrderRegisterEntity_Request_T01 GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01 = new MaterialOrderRegisterEntity_Request_T01();

                pMaterialOrderRegisterEntity_Request_T01.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegisterEntity_Request_T01;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        #region 마스터 조회하기


        public DataTable MaterialOrderRegister_Request_T01_R10(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 10)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 20),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 10)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity_Request_T01.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity_Request_T01.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderRegisterEntity_Request_T01.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderRegisterEntity_Request_T01.VEND_CODE;
                pDataParameters[4].Value = pMaterialOrderRegisterEntity_Request_T01.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_T01_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_T01_R10(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회
        public DataTable MaterialOrderRegister_Request_T01_R20(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegisterEntity_Request_T01.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegisterEntity_Request_T01.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_T01_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_T01_R20(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Request_T01_Info_Save(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_Request_T01_Info_Save(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE

            _pDBManager.BeginTransaction();
            
            try
            {

                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_order_date", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_order_seq", MySqlDbType.VarChar, 6),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_place_delivery", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_trans_condition", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_terms_payment", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_tax_classification", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_contents", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 10)
                        };
                        break;
                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_order_date", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_order_seq", SqlDbType.NVarChar, 6),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_place_delivery", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_trans_condition", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_terms_payment", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_tax_classification", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_contents", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request_T01.CRUD;
                pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request_T01.USER_CODE;
                pDataParametersA[2].Value = pMaterialOrderRegisterEntity_Request_T01.ORDER_ID;
                pDataParametersA[3].Value = pMaterialOrderRegisterEntity_Request_T01.ORDER_DATE;
                pDataParametersA[4].Value = pMaterialOrderRegisterEntity_Request_T01.ORDER_SEQ;
                pDataParametersA[5].Value = pMaterialOrderRegisterEntity_Request_T01.VEND_CODE;
                pDataParametersA[6].Value = pMaterialOrderRegisterEntity_Request_T01.REMARK;
                pDataParametersA[7].Value = pMaterialOrderRegisterEntity_Request_T01.PLACE_DELIVERY;
                pDataParametersA[8].Value = pMaterialOrderRegisterEntity_Request_T01.TRANS_CONDITION;
                pDataParametersA[9].Value = pMaterialOrderRegisterEntity_Request_T01.TERMS_PAYMENT;
                pDataParametersA[10].Value = pMaterialOrderRegisterEntity_Request_T01.TAX_CLASSIFICATON;
                pDataParametersA[11].Value = pMaterialOrderRegisterEntity_Request_T01.CONTENTS;
                pDataParametersA[12].Value = pMaterialOrderRegisterEntity_Request_T01.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_T01_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }else
                {
                    if(pDataTableA.Rows[0]["rtn_key"].ToString().Equals(""))
                    {
                        pErrorYN = true;
                    }
                    else
                    {
                        pMaterialOrderRegisterEntity_Request_T01.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();

                        int pCount = 0;
                    
                        if (dt != null)
                        {
                            pCount = dt.Rows.Count;
                            for (int i = 0; i < pCount; i++)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersB = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersB = new IDataParameter[]
                                        {
                                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_order_detail_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_unit_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_order_qty", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_request_date", MySqlDbType.VarChar, 8),
                                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                        };
                                        break;
                                    case "SQLServer":
                                        pDataParametersB = new IDataParameter[]
                                        {
                                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_order_detail_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                            new SqlParameter("@v_unit_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_order_qty", SqlDbType.Decimal),
                                            new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                            new SqlParameter("@v_cost", SqlDbType.Decimal),
                                            new SqlParameter("@v_request_date", SqlDbType.NVarChar, 8),
                                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                        };
                                        break;
                                }

                                pDataParametersB[0].Value = dt.Rows[i]["CRUD"].ToString();
                                pDataParametersB[1].Value = pMaterialOrderRegisterEntity_Request_T01.USER_CODE;
                                pDataParametersB[2].Value = pMaterialOrderRegisterEntity_Request_T01.ORDER_ID == "" ? pMaterialOrderRegisterEntity_Request_T01.RTN_KEY : pMaterialOrderRegisterEntity_Request_T01.ORDER_ID;
                                pDataParametersB[3].Value = dt.Rows[i]["ORDER_DETAIL_SEQ"].ToString();
                                pDataParametersB[4].Value = dt.Rows[i]["PART_CODE"].ToString();
                                pDataParametersB[5].Value = dt.Rows[i]["UNIT_CODE"].ToString();
                                pDataParametersB[6].Value = dt.Rows[i]["ORDER_QTY"].ToString();
                                pDataParametersB[7].Value = dt.Rows[i]["UNITCOST"].ToString();
                                pDataParametersB[8].Value = dt.Rows[i]["COST"].ToString();
                                pDataParametersB[9].Value = Convert.ToDateTime(dt.Rows[i]["REQUEST_DATE"].ToString()).ToString("yyyyMMdd");
                                pDataParametersB[10].Value = dt.Rows[i]["REMARK"].ToString();
                                pDataParametersB[11].Value = dt.Rows[i]["USE_YN"].ToString();

                                DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_T01_I20", pDataParametersB);

                                if (pDataTableB.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }
                    }
                }


                //if (dt != null)
                //{
                //    pCount = dt.Rows.Count;

                //    for (int i = 0; i < pCount; i++)
                //    {

                //        //마스터 저장
                //        IDataParameter[] pDataParametersA = null;

                //        switch (_pDBManager.DBManagerType.ToString())
                //        {
                //            case "MySql":
                //                pDataParametersA = new IDataParameter[]
                //                {

                //                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                //                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                //                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                //                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                //                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                //                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                //                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                //                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                //                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                //                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                //                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                //                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                //                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                //                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                //                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                //                new MySqlParameter("@v_order_number          ".Trim(), MySqlDbType.VarChar, 50),
                //                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),

                //                };
                //                break;

                //            case "SQLServer":
                //                pDataParametersA = new IDataParameter[]
                //                {

                //                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                //                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                //                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                //                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                //                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                //                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                //                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                //                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                //                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                //                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                //                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                //                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                //                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                //                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                //                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                //                new SqlParameter("@v_order_number                ".Trim(), SqlDbType.VarChar, 50),
                //                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),

                //                };
                //                break;
                //        }

                //        pDataParametersA[0].Value = dt.Rows[i]["CRUD"].ToString();
                //        pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request_T01.USER_CODE;
                //        pDataParametersA[2].Value = dt.Rows[i]["ORDER_ID"].ToString();
                //        if (dt.Rows[i]["ORDER_DATE"].ToString().Length > 8)
                //        {
                //            pDataParametersA[3].Value = dt.Rows[i]["ORDER_DATE"].ToString().Substring(0, 10).Replace("-", "").ToString();
                //        }
                //        else
                //        {
                //            pDataParametersA[3].Value = dt.Rows[i]["ORDER_DATE"].ToString();
                //        }

                //        pDataParametersA[4].Value = "";
                //        pDataParametersA[5].Value = dt.Rows[i]["VEND_CODE"].ToString();
                //        pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                //        pDataParametersA[7].Value = dt.Rows[i]["ORDER_QTY"].ToString();

                //        if (dt.Rows[i]["REQUEST_DATE"].ToString().Length > 8)
                //        {
                //            pDataParametersA[8].Value = dt.Rows[i]["REQUEST_DATE"].ToString().Substring(0, 10).Replace("-", "").ToString();
                //        }
                //        else
                //        {
                //            pDataParametersA[8].Value = dt.Rows[i]["REQUEST_DATE"].ToString();
                //        }
                //        pDataParametersA[9].Value = dt.Rows[i]["REQUEST_LOCATION"].ToString();
                //        pDataParametersA[10].Value = dt.Rows[i]["UNIT_CODE"].ToString();
                //        pDataParametersA[11].Value = dt.Rows[i]["REQUEST_LOCATION"].ToString();
                //        pDataParametersA[12].Value = dt.Rows[i]["UNITCOST"].ToString();
                //        pDataParametersA[13].Value = dt.Rows[i]["COST"].ToString();
                //        pDataParametersA[14].Value = dt.Rows[i]["REMARK"].ToString();
                //        pDataParametersA[15].Value = dt.Rows[i]["ORDER_NUMBER"].ToString();
                //        pDataParametersA[16].Value = dt.Rows[i]["USE_YN"].ToString();

                //        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_T01_I10", pDataParametersA);

                //        if (pDataTableA.Rows[0][0].ToString() != "00")
                //        {
                //            pErrorYN = true;
                //        }
                //        pMaterialOrderRegisterEntity_Request_T01.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                //        pMaterialOrderRegisterEntity_Request_T01.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                //        pMaterialOrderRegisterEntity_Request_T01.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                //        pMaterialOrderRegisterEntity_Request_T01.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                //        pMaterialOrderRegisterEntity_Request_T01.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                //        if (pDataTableA.Rows[0][0].ToString() != "00")
                //        {
                //            pErrorYN = true;
                //        }


                //    }
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_T01_Info_Save(MaterialOrderRegisterEntity_Request_T01 pMaterialOrderRegisterEntity_Request_T01, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;

        }

        #endregion
        
    }
    public class ucMaterialOrderRegister_Request_T01Provider : EntityManager<ucMaterialOrderRegister_Request_T01Entity>
    {
        #region 생성자
        public ucMaterialOrderRegister_Request_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucMaterialOrderRegister_Request_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialOrderRegister_Request_T01Entity pucMaterialOrderRegister_Request_T01Entity = new ucMaterialOrderRegister_Request_T01Entity();

                pucMaterialOrderRegister_Request_T01Entity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pucMaterialOrderRegister_Request_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        #region 마스터 조회하기
        
        public DataTable pucMaterialOrderRegister_Request_T01_R10(ucMaterialOrderRegister_Request_T01Entity pucMaterialOrderRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 10)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 20),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 10)
                        };
                        break;
                }

                pDataParameters[0].Value = pucMaterialOrderRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pucMaterialOrderRegister_Request_T01Entity.DATE_FROM;
                pDataParameters[2].Value = pucMaterialOrderRegister_Request_T01Entity.DATE_TO;
                pDataParameters[3].Value = pucMaterialOrderRegister_Request_T01Entity.VEND_CODE;
                pDataParameters[4].Value = pucMaterialOrderRegister_Request_T01Entity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialOrderRegister_Request_T01_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "pucMaterialOrderRegister_Request_T01_R10(ucMaterialOrderRegister_Request_T01Entity pucMaterialOrderRegister_Request_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회
        public DataTable pucMaterialOrderRegister_Request_T01_R20(ucMaterialOrderRegister_Request_T01Entity pucMaterialOrderRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pucMaterialOrderRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pucMaterialOrderRegister_Request_T01Entity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialOrderRegister_Request_T01_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "pucMaterialOrderRegister_Request_T01_R20(ucMaterialOrderRegister_Request_T01Entity pucMaterialOrderRegister_Request_T01Entity)",
                    pException
                );
            }
        }

        #endregion
        
    }
    public class MaterialOrderStatusProvider : EntityManager<MaterialOrderStatusEntity>
    {
        #region 생성자 - MaterialOrderStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOrderStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialOrderStatusEntity pMaterialOrderStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialOrderStatusEntity pMaterialOrderStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialOrderStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderStatusEntity.ORDER_ID;
                pDataParameters[4].Value = pMaterialOrderStatusEntity.PART_CODE;
                pDataParameters[5].Value = pMaterialOrderStatusEntity.PART_NAME;
                pDataParameters[6].Value = pMaterialOrderStatusEntity.VEND_CODE;
                pDataParameters[7].Value = pMaterialOrderStatusEntity.VEND_NAME;
                pDataParameters[8].Value = pMaterialOrderStatusEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialOrderStatusEntity pMaterialOrderStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOrderStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialOrderStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialOrderStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderStatus_I10", pDataParametersA);

                pMaterialOrderStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialOrderStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialOrderStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialOrderStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialOrderStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialOrderStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialOrderStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialOrderStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialOrderStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialOrderStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialOrderStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialOrderStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialOrderStatus_Info_Filename(MaterialOrderStatusEntity pMaterialOrderStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOrderStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOrderStatus_Info_Filename(MaterialOrderStatusEntity pMaterialOrderStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOrderStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderStatus_Info_Filename(MaterialOrderStatusEntity pMaterialOrderStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialOrderStatusEntity pMaterialOrderStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderStatusEntity pMaterialOrderStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialOrderStatusEntity.LANGUAGE_TYPE;



                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOrderStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderStatusEntity pMaterialOrderStatusEntity = new MaterialOrderStatusEntity();

                pMaterialOrderStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOrderStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialExpirationDateStatusProvider : EntityManager<MaterialExpirationDateStatusEntity>
    {
        #region 생성자 - MaterialExpirationDateStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialExpirationDateStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialExpirationDateStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialExpirationDateStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialExpirationDateStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialExpirationDateStatusEntity.ORDER_ID;
                pDataParameters[4].Value = pMaterialExpirationDateStatusEntity.PART_CODE;
                pDataParameters[5].Value = pMaterialExpirationDateStatusEntity.PART_NAME;
                pDataParameters[6].Value = pMaterialExpirationDateStatusEntity.VEND_CODE;
                pDataParameters[7].Value = pMaterialExpirationDateStatusEntity.VEND_NAME;
                pDataParameters[8].Value = pMaterialExpirationDateStatusEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ExpirationDateStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialExpirationDateStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialExpirationDateStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialExpirationDateStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialExpirationDateStatus_I10", pDataParametersA);

                pMaterialExpirationDateStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialExpirationDateStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialExpirationDateStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialExpirationDateStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialExpirationDateStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //             //if (dt != null)
                    //             //{
                    //             //    pCount = dt.Rows.Count;

                    //             //    for (int a = 0; a < pCount; a++)
                    //             //    {
                    //             //        IDataParameter[] pDataParametersB = null;

                    //             //        switch (_pDBManager.DBManagerType.ToString())
                    //             //        {
                    //             //            case "MySql":
                    //             //                pDataParametersB = new IDataParameter[]
                    //             //                {
                    //             //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //             //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //             //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //             //                };
                    //             //                break;

                    //             //            case "SQLServer":
                    //             //                pDataParametersB = new IDataParameter[]
                    //             //                {
                    //             //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //             //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //             //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //             //                };
                    //             //                break;
                    //             //        }

                    //             //        pDataParametersB[0].Value = pMaterialExpirationDateStatusEntity.CORP_CODE;
                    //             //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //             //        pDataParametersB[2].Value = pMaterialExpirationDateStatusEntity.USER_CODE;

                    //             //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //             //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //             //        {
                    //             //            pErrorYN = true;
                    //             //        }

                    //             //        pMaterialExpirationDateStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //             //        pMaterialExpirationDateStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //             //        pMaterialExpirationDateStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //             //        pMaterialExpirationDateStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //             //        pMaterialExpirationDateStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //             //    }
                    //             //}
                             }
                    //         //if (pDataTable != null)
                    //         //{
                    //         //    GetEntity(pDataTable.Rows[0]);
                    //         //}
                }
                         catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialExpirationDateStatus_Info_Filename(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialExpirationDateStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialExpirationDateStatus_Info_Filename(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialExpirationDateStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialExpirationDateStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialExpirationDateStatus_Info_Filename(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialExpirationDateStatusEntity.LANGUAGE_TYPE;



                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialExpirationDateStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialExpirationDateStatusEntity pMaterialExpirationDateStatusEntity = new MaterialExpirationDateStatusEntity();

                pMaterialExpirationDateStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialExpirationDateStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOrderStatus_T02Provider : EntityManager<MaterialOrderStatusEntity>
    {
        #region 생성자 - MaterialOrderStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOrderStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialOrderStatusEntity pMaterialOrderStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialOrderStatusEntity pMaterialOrderStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialOrderStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderStatusEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialOrderStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialOrderStatusEntity pMaterialOrderStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOrderStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderStatusEntity pMaterialOrderStatusEntity = new MaterialOrderStatusEntity();

                pMaterialOrderStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOrderStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialReShipInOutProvider : EntityManager<MaterialReShipInOutEntity>
    {
        #region 생성자 - MaterialReShipInOutProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialReShipInOutProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기
        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialReShipInOutEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialReShipInOut_Mst(MaterialReShipInOutEntity pMaterialReShipInOutEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialReShipInOutEntity.CRUD;
                pDataParameters[1].Value = pMaterialReShipInOutEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialReShipInOutEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialReShipInOutEntity.VEND_PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialReShipInOut_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialReShipInOut_Mst(MaterialReShipInOutEntity pMaterialReShipInOutEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 마스터 디테일 조회하기
        public DataTable MaterialReShipInOut_Mst_Detail(MaterialReShipInOutEntity pMaterialReShipInOutEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar,8)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar,8)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialReShipInOutEntity.CRUD;
                pDataParameters[1].Value = pMaterialReShipInOutEntity.MATSTOCK_ID;
                pDataParameters[2].Value = pMaterialReShipInOutEntity.MATSTOCK_DETAIL_SEQ;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialReShipInOut_R15", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialReShipInOut_Mst_detail(MaterialReShipInOutEntity pMaterialReShipInOutEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 서브 조회하기
        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialReShipInOutEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialReShipInOut_Sub(MaterialReShipInOutEntity pMaterialReShipInOutEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar, 6)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialReShipInOutEntity.MATSTOCK_ID;
                pDataParameters[1].Value = pMaterialReShipInOutEntity.MATSTOCK_DETAIL_SEQ;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialReShipInOut_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialReShipInOut_Sub(MaterialReShipInOutEntity pMaterialReShipInOutEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 서브 디테일 조회하기
        public DataTable MaterialReShipInOut_Sub_Detail(MaterialReShipInOutEntity pMaterialReShipInOutEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6),
                            new MySqlParameter("@v_matstock_sub_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_matstock_sub_seq", MySqlDbType.VarChar, 6)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar, 6),
                            new SqlParameter("@v_matstock_sub_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_matstock_sub_seq", SqlDbType.NVarChar, 6)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialReShipInOutEntity.CRUD;
                pDataParameters[1].Value = pMaterialReShipInOutEntity.MATSTOCK_ID;
                pDataParameters[2].Value = pMaterialReShipInOutEntity.MATSTOCK_DETAIL_SEQ;
                pDataParameters[3].Value = pMaterialReShipInOutEntity.MATSTOCK_SUB_ID;
                pDataParameters[4].Value = pMaterialReShipInOutEntity.MATSTOCK_SUB_SEQ;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialReShipInOut_R25", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialReShipInOut_Sub_Detail(MaterialReShipInOutEntity pMaterialReShipInOutEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 저장하기
        public bool MaterialReShipInOut_Save(MaterialReShipInOutEntity pMaterialReShipInOutEntity, DataTable _dtMainDetail, DataTable _dtSubDetail)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE

            _pDBManager.BeginTransaction();
            int Main_pCount = 0;
            int Sub_pCount = 0;

            try
            {
                if(_dtMainDetail != null)
                {
                    Main_pCount = _dtMainDetail.Rows.Count;
                    for (int i = 0; i < Main_pCount; i++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_reship_type", MySqlDbType.VarChar, 10),
                                            new MySqlParameter("@v_reship_date", MySqlDbType.VarChar, 8),
                                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_reship_qty", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                };
                                break;
                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_reship_type", SqlDbType.NVarChar, 10),
                                            new SqlParameter("@v_reship_date", SqlDbType.NVarChar, 8),
                                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_reship_qty", SqlDbType.Decimal),
                                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000)
                                };
                                break;
                        }

                        pDataParametersA[0].Value = _dtMainDetail.Rows[i]["CRUD"].ToString();
                        pDataParametersA[1].Value = pMaterialReShipInOutEntity.USER_CODE;
                        pDataParametersA[2].Value = _dtMainDetail.Rows[i]["RESHIP_TYPE"].ToString();
                        pDataParametersA[3].Value = DateTime.Today.ToString("yyyyMMdd");// _dtMainDetail.Rows[i]["RESHIP_DATE"].ToString();
                        pDataParametersA[4].Value = pMaterialReShipInOutEntity.MATSTOCK_ID; // _dtMainDetail.Rows[i]["MATSTOCK_ID"].ToString();
                        pDataParametersA[5].Value = pMaterialReShipInOutEntity.MATSTOCK_DETAIL_SEQ; //_dtMainDetail.Rows[i]["MATSTOCK_DETAIL_SEQ"].ToString();
                        pDataParametersA[6].Value = _dtMainDetail.Rows[i]["RESHIP_QTY"].ToString();
                        pDataParametersA[7].Value = _dtMainDetail.Rows[i]["REMARK"].ToString();

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialReShipInOut_I10", pDataParametersA);

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                    }
                }

                if(_dtSubDetail != null)
                {
                    Sub_pCount = _dtSubDetail.Rows.Count;
                    for (int i = 0; i < Sub_pCount; i++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersB = null;
                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersB = new IDataParameter[]
                                {
                                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_reship_type", MySqlDbType.VarChar, 10),
                                            new MySqlParameter("@v_reship_date", MySqlDbType.VarChar, 8),
                                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_matstock_sub_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_matstock_sub_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_reship_detail_qty", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                };
                                break;
                            case "SQLServer":
                                pDataParametersB = new IDataParameter[]
                                {
                                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_reship_type", SqlDbType.NVarChar, 10),
                                            new SqlParameter("@v_reship_date", SqlDbType.NVarChar, 8),
                                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_matstock_sub_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_matstock_sub_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_reship_detail_qty", SqlDbType.Decimal),
                                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000)
                                };
                                break;
                        }

                        pDataParametersB[0].Value = _dtSubDetail.Rows[i]["CRUD"].ToString();
                        pDataParametersB[1].Value = pMaterialReShipInOutEntity.USER_CODE;
                        pDataParametersB[2].Value = _dtSubDetail.Rows[i]["RESHIP_TYPE"].ToString();
                        pDataParametersB[3].Value = DateTime.Today.ToString("yyyyMMdd");// _dtMainDetail.Rows[i]["RESHIP_DATE"].ToString();
                        pDataParametersB[4].Value = pMaterialReShipInOutEntity.MATSTOCK_ID;//_dtSubDetail.Rows[i]["MATSTOCK_ID"].ToString();
                        pDataParametersB[5].Value = pMaterialReShipInOutEntity.MATSTOCK_DETAIL_SEQ;//_dtSubDetail.Rows[i]["MATSTOCK_DETAIL_SEQ"].ToString();
                        pDataParametersB[6].Value = pMaterialReShipInOutEntity.MATSTOCK_SUB_ID;//_dtSubDetail.Rows[i]["MATSTOCK_SUB_ID"].ToString();
                        pDataParametersB[7].Value = pMaterialReShipInOutEntity.MATSTOCK_SUB_SEQ;//_dtSubDetail.Rows[i]["MATSTOCK_SUB_SEQ"].ToString();
                        pDataParametersB[8].Value = _dtSubDetail.Rows[i]["RESHIP_DETAIL_QTY"].ToString();
                        pDataParametersB[9].Value = _dtSubDetail.Rows[i]["REMARK"].ToString();

                        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialReShipInOut_I20", pDataParametersB);

                        if (pDataTableB.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialReShipInOutBusiness_Save(MaterialReShipInOutEntity pMaterialReShipInOutEntity, DataTable _dtMainDetail, DataTable _dtSubDetail)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }
        #endregion

        #region 개체 구하기
        public override MaterialReShipInOutEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialReShipInOutEntity pMaterialReShipInOutEntity = new MaterialReShipInOutEntity();

                pMaterialReShipInOutEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialReShipInOutEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }
        #endregion
    }
    public class MaterialInRegisterProvider : EntityManager<MaterialInRegisterEntity>
    {
        #region 생성자 - MaterialInRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInRegisterEntity pMaterialInRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(MaterialInRegisterEntity pMaterialInRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegisterEntity.CRUD;
                pDataParameters[1].Value = pMaterialInRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialInRegisterEntity.PART_CODE;
                pDataParameters[4].Value = pMaterialInRegisterEntity.PART_NAME;
                pDataParameters[5].Value = pMaterialInRegisterEntity.VEND_CODE;
                pDataParameters[6].Value = pMaterialInRegisterEntity.VEND_NAME;
                pDataParameters[7].Value = pMaterialInRegisterEntity.INOUT_CODE;
                pDataParameters[8].Value = pMaterialInRegisterEntity.USE_YN;
                pDataParameters[9].Value = pMaterialInRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInRegisterEntity pMaterialInRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        public bool MaterialOrderRegister_Request_Info_Check_Save(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                            pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialOrderRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialOrderRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }


        #region 정보 저장하기 - MaterialInRegister_Info_Save(MaterialInRegisterEntity pMaterialInRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInRegister_Info_Save(MaterialInRegisterEntity pMaterialInRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInRegisterEntity.CRUD;
                pDataParametersA[1].Value = pMaterialInRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialInRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialInRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialInRegisterEntity.INOUT_SEQ;
                pDataParametersA[6].Value = pMaterialInRegisterEntity.INOUT_CODE;
                pDataParametersA[7].Value = pMaterialInRegisterEntity.PART_CODE;
                pDataParametersA[8].Value = pMaterialInRegisterEntity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialInRegisterEntity.INOUT_QTY);
                pDataParametersA[10].Value = pMaterialInRegisterEntity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInRegisterEntity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialInRegisterEntity.COST);
                pDataParametersA[13].Value = pMaterialInRegisterEntity.REFERENCE_ID;
                pDataParametersA[14].Value = pMaterialInRegisterEntity.REMARK;
                pDataParametersA[15].Value = pMaterialInRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_I10", pDataParametersA);

                pMaterialInRegisterEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialInRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialInRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialInRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialInRegisterEntity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pMaterialInRegisterEntity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pMaterialInRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInRegisterEntity pMaterialInRegisterEntity = new MaterialInRegisterEntity();

                pMaterialInRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInRegister_T01Provider : EntityManager<MaterialInRegister_T01Entity>
    {
        #region 생성자 - MaterialInRegister_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInRegister_T01Entity pMaterialInRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(MaterialInRegister_T01Entity pMaterialInRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_T01Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInRegister_T01Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialInRegister_T01Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialInRegister_T01Entity.PART_NAME;
                pDataParameters[5].Value = pMaterialInRegister_T01Entity.VEND_CODE;
                pDataParameters[6].Value = pMaterialInRegister_T01Entity.VEND_NAME;
                pDataParameters[7].Value = pMaterialInRegister_T01Entity.INOUT_CODE;
                pDataParameters[8].Value = pMaterialInRegister_T01Entity.USE_YN;
                pDataParameters[9].Value = pMaterialInRegister_T01Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInRegister_T01Entity pMaterialInRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool MaterialOrderRegister_Request_Info_Check_Save(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                            pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialOrderRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialOrderRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }


        #region 정보 저장하기 - MaterialInRegister_T01_Info_Save(MaterialInRegister_T01Entity pMaterialInRegister_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInRegister_T01_Info_Save(MaterialInRegister_T01Entity pMaterialInRegister_T01Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInRegister_T01Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInRegister_T01Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInRegister_T01Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialInRegister_T01Entity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialInRegister_T01Entity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialInRegister_T01Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pMaterialInRegister_T01Entity.INOUT_CODE;
                pDataParametersA[7].Value = pMaterialInRegister_T01Entity.PART_CODE;
                pDataParametersA[8].Value = pMaterialInRegister_T01Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialInRegister_T01Entity.INOUT_QTY);
                pDataParametersA[10].Value = pMaterialInRegister_T01Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInRegister_T01Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialInRegister_T01Entity.COST);
                pDataParametersA[13].Value = pMaterialInRegister_T01Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pMaterialInRegister_T01Entity.REMARK;
                pDataParametersA[15].Value = pMaterialInRegister_T01Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_T01_I10", pDataParametersA);

                pMaterialInRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialInRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialInRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialInRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialInRegister_T01Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pMaterialInRegister_T01Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pMaterialInRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInRegister_T01Entity pMaterialInRegister_T01Entity = new MaterialInRegister_T01Entity();

                pMaterialInRegister_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInRegister_T02Provider : EntityManager<MaterialInRegister_T02Entity>
    {
        #region 생성자 - MaterialInRegister_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInRegister_T02Entity pMaterialInRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(MaterialInRegister_T02Entity pMaterialInRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_T02Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInRegister_T02Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialInRegister_T02Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialInRegister_T02Entity.PART_NAME;
                pDataParameters[5].Value = pMaterialInRegister_T02Entity.VEND_CODE;
                pDataParameters[6].Value = pMaterialInRegister_T02Entity.VEND_NAME;
                pDataParameters[7].Value = pMaterialInRegister_T02Entity.INOUT_CODE;
                pDataParameters[8].Value = pMaterialInRegister_T02Entity.USE_YN;
                pDataParameters[9].Value = pMaterialInRegister_T02Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInRegister_T02Entity pMaterialInRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool MaterialOrderRegister_Request_Info_Check_Save(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                            pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialOrderRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialOrderRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }


        #region 정보 저장하기 - MaterialInRegister_T02_Info_Save(MaterialInRegister_T02Entity pMaterialInRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInRegister_T02_Info_Save(MaterialInRegister_T02Entity pMaterialInRegister_T02Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_expiration_date", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_expiration_date", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInRegister_T02Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialInRegister_T02Entity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialInRegister_T02Entity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialInRegister_T02Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pMaterialInRegister_T02Entity.INOUT_CODE;
                pDataParametersA[7].Value = pMaterialInRegister_T02Entity.PART_CODE;
                pDataParametersA[8].Value = pMaterialInRegister_T02Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialInRegister_T02Entity.INOUT_QTY);
                pDataParametersA[10].Value = pMaterialInRegister_T02Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInRegister_T02Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialInRegister_T02Entity.COST);
                pDataParametersA[13].Value = pMaterialInRegister_T02Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pMaterialInRegister_T02Entity.REMARK;
                pDataParametersA[15].Value = pMaterialInRegister_T02Entity.USE_YN;
                pDataParametersA[16].Value = pMaterialInRegister_T02Entity.EXPIRATION_DATE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_I10", pDataParametersA);

                pMaterialInRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialInRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialInRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialInRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialInRegister_T02Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pMaterialInRegister_T02Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pMaterialInRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInRegister_T02Entity pMaterialInRegister_T02Entity = new MaterialInRegister_T02Entity();

                pMaterialInRegister_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInRegister_T03Provider : EntityManager<MaterialInRegister_T03Entity>
    {
        #region 생성자 - MaterialInRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInRegister_T03Entity pMaterialInRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(MaterialInRegister_T03Entity pMaterialInRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_T03Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInRegister_T03Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialInRegister_T03Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialInRegister_T03Entity.PART_NAME;
                pDataParameters[5].Value = pMaterialInRegister_T03Entity.VEND_CODE;
                pDataParameters[6].Value = pMaterialInRegister_T03Entity.VEND_NAME;
                pDataParameters[7].Value = pMaterialInRegister_T03Entity.INOUT_CODE;
                pDataParameters[8].Value = pMaterialInRegister_T03Entity.USE_YN;
                pDataParameters[9].Value = pMaterialInRegister_T03Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_T03_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInRegister_T03Entity pMaterialInRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool MaterialOrderRegister_Request_Info_Check_Save(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialOrderRegisterEntity_Request.CRUD;
                            pDataParametersA[1].Value = pMaterialOrderRegisterEntity_Request.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_Request_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialOrderRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialOrderRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialOrderRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }


        #region 정보 저장하기 - MaterialInRegister_T03_Info_Save(MaterialInRegister_T03Entity pMaterialInRegister_T03Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInRegister_T03_Info_Save(MaterialInRegister_T03Entity pMaterialInRegister_T03Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_location", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_location", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInRegister_T03Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialInRegister_T03Entity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialInRegister_T03Entity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialInRegister_T03Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pMaterialInRegister_T03Entity.INOUT_CODE;
                pDataParametersA[7].Value = pMaterialInRegister_T03Entity.PART_CODE;
                pDataParametersA[8].Value = pMaterialInRegister_T03Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialInRegister_T03Entity.INOUT_QTY);
                pDataParametersA[10].Value = pMaterialInRegister_T03Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInRegister_T03Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialInRegister_T03Entity.COST);
                pDataParametersA[13].Value = pMaterialInRegister_T03Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pMaterialInRegister_T03Entity.REMARK;
                pDataParametersA[15].Value = pMaterialInRegister_T03Entity.USE_YN;
                pDataParametersA[16].Value = pMaterialInRegister_T03Entity.LOCATION;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_T03_I10", pDataParametersA);

                pMaterialInRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialInRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialInRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialInRegister_T03Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialInRegister_T03Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pMaterialInRegister_T03Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pMaterialInRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInRegister_T03Entity pMaterialInRegister_T03Entity = new MaterialInRegister_T03Entity();

                pMaterialInRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInRegister_RequestProvider : EntityManager<MaterialInRegister_RequestEntity>
    {
        #region 생성자 - MaterialInRegister_RequestProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInRegister_RequestProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInRegister_RequestEntity pMaterialInRegister_RequestEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(MaterialInRegister_RequestEntity pMaterialInRegister_RequestEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_total_result", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_total_result", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_RequestEntity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_RequestEntity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialInRegister_RequestEntity.DATE_FROM;
                pDataParameters[3].Value = pMaterialInRegister_RequestEntity.DATE_TO;
                pDataParameters[4].Value = pMaterialInRegister_RequestEntity.PART_CODE;
                pDataParameters[5].Value = pMaterialInRegister_RequestEntity.PART_NAME;
                pDataParameters[6].Value = pMaterialInRegister_RequestEntity.VEND_CODE;
                pDataParameters[7].Value = pMaterialInRegister_RequestEntity.VEND_NAME;
                pDataParameters[8].Value = pMaterialInRegister_RequestEntity.INOUT_CODE;
                pDataParameters[9].Value = pMaterialInRegister_RequestEntity.USE_YN;
                pDataParameters[10].Value = pMaterialInRegister_RequestEntity.TOTAL_RESULT;
                pDataParameters[11].Value = pMaterialInRegister_RequestEntity.VEND_PART_CODE;
                

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInRegister_RequestEntity pMaterialInRegister_RequestEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialInRegister_Request_Info_Save(MaterialInRegister_RequestEntity pMaterialInRegister_RequestEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInRegister_Request_Info_Save(MaterialInRegister_RequestEntity pMaterialInRegister_RequestEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_end_date", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_end_date", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInRegister_RequestEntity.CRUD;
                pDataParametersA[1].Value = pMaterialInRegister_RequestEntity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInRegister_RequestEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialInRegister_RequestEntity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialInRegister_RequestEntity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialInRegister_RequestEntity.INOUT_SEQ;
                pDataParametersA[6].Value = pMaterialInRegister_RequestEntity.INOUT_CODE;
                pDataParametersA[7].Value = pMaterialInRegister_RequestEntity.PART_CODE;
                pDataParametersA[8].Value = pMaterialInRegister_RequestEntity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialInRegister_RequestEntity.INOUT_QTY);
                pDataParametersA[10].Value = pMaterialInRegister_RequestEntity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInRegister_RequestEntity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialInRegister_RequestEntity.COST);
                pDataParametersA[13].Value = pMaterialInRegister_RequestEntity.REFERENCE_ID;
                pDataParametersA[14].Value = pMaterialInRegister_RequestEntity.REMARK;
                pDataParametersA[15].Value = pMaterialInRegister_RequestEntity.USE_YN;
                pDataParametersA[16].Value = pMaterialInRegister_RequestEntity.END_DATE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_I10", pDataParametersA);

                pMaterialInRegister_RequestEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialInRegister_RequestEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialInRegister_RequestEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialInRegister_RequestEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialInRegister_RequestEntity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pMaterialInRegister_RequestEntity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pMaterialInRegister_RequestEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        public bool MaterialInRegister_Request_Info_Check_Save(MaterialInRegister_RequestEntity pMaterialInRegisterEntity_Request, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_inout_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_sampling_date             ".Trim(), MySqlDbType.VarChar, 8),
                                            new MySqlParameter("@v_sampling_result             ".Trim(), MySqlDbType.Decimal)


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_inout_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_sampling_date             ".Trim(), SqlDbType.VarChar, 8),
                                            new SqlParameter("@v_sampling_result           ".Trim(), SqlDbType.Decimal)

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialInRegisterEntity_Request.CRUD;
                            pDataParametersA[1].Value = pMaterialInRegisterEntity_Request.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["INOUT_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                            pDataParametersA[4].Value = String.Format("{0:yyyyMMdd}", Convert.ToDateTime(dt.Rows[a]["SAMPLING_DATE"].ToString()));// dt.Rows[a]["SAMPLING_DATE"].ToString().ToUpper();
                            pDataParametersA[5].Value = dt.Rows[a]["INPUT"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialInRegisterEntity_Request.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialInRegisterEntity_Request.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialInRegisterEntity_Request.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialInRegisterEntity_Request.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialInRegisterEntity_Request.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialInRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInRegister_RequestEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInRegister_RequestEntity pMaterialInRegister_RequestEntity = new MaterialInRegister_RequestEntity();

                pMaterialInRegister_RequestEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInRegister_RequestEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInRegister_Request_T01Provider : EntityManager<MaterialInRegister_Request_T01Entity>
    {
        #region 생성자 - MaterialInRegister_Request_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInRegister_Request_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 10)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 20),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 10)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_Request_T01Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInRegister_Request_T01Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialInRegister_Request_T01Entity.VEND_CODE;
                pDataParameters[4].Value = pMaterialInRegister_Request_T01Entity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_R10", pDataParameters);
                
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회하기 - Material_In_Sub(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        public DataTable Material_In_Sub(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_matstock_id", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_ID;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Material_In_Sub(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)",
                    pException
                );
            }
        }
        #endregion

        #region 하위 품목 조회하기 - Material_In_Third(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        public DataTable Material_In_Third(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_matstock_id", SqlDbType.VarChar, 15),
                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.VarChar, 6)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_ID;
                pDataParameters[2].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_DETAIL_SEQ;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_R25", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Material_In_Third(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)",
                    pException
                );
            }
        }
        #endregion

        #region 발주정보 마스터 조회하기

        public DataTable Material_Order_Mst(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.VarChar, 1),
                            new SqlParameter("@v_order_id", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_Request_T01Entity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_R30", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Material_Order_Mst(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 발주정보 서브 조회하기
        public DataTable Material_Order_Sub(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInRegister_Request_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInRegister_Request_T01Entity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_R40", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Material_Order_Sub(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity)",
                    pException
                );
            }
        }
        #endregion

        #region 정보 저장하기 - MaterialInRegister_Request_T01_Info_Save(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInRegister_Request_T01_Info_Save(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity, DataTable dt, DataTable dt_sub)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {

                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_matstock_date", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_matstock_seq", MySqlDbType.VarChar, 6),
                            new MySqlParameter("@v_matstock_code", MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20)
                        };
                        break;
                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_matstock_date", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_matstock_seq", SqlDbType.NVarChar, 6),
                            new SqlParameter("@v_matstock_code", SqlDbType.NVarChar, 20),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 20),
                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInRegister_Request_T01Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInRegister_Request_T01Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_ID;
                pDataParametersA[3].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_DATE;
                pDataParametersA[4].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_SEQ;
                pDataParametersA[5].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_CODE;
                pDataParametersA[6].Value = pMaterialInRegister_Request_T01Entity.VEND_CODE;
                pDataParametersA[7].Value = pMaterialInRegister_Request_T01Entity.REMARK;
                pDataParametersA[8].Value = pMaterialInRegister_Request_T01Entity.USE_YN;
                pDataParametersA[9].Value = pMaterialInRegister_Request_T01Entity.REFERENCE_ID;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (pDataTableA.Rows[0]["rtn_key"].ToString().Equals(""))
                    {
                        pErrorYN = true;
                    }
                    else
                    {
                        pMaterialInRegister_Request_T01Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();

                        int pCount = 0;

                        if (dt != null)
                        {
                            pCount = dt.Rows.Count;
                            for (int i = 0; i < pCount; i++)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersB = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersB = new IDataParameter[]
                                        {
                                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_lot_id", MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_unit_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_matstock_detail_qty", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                        };
                                        break;
                                    case "SQLServer":
                                        pDataParametersB = new IDataParameter[]
                                        {
                                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                            new SqlParameter("@v_lot_id", SqlDbType.NVarChar, 50),
                                            new SqlParameter("@v_unit_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_matstock_detail_qty", SqlDbType.Decimal),
                                            new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                            new SqlParameter("@v_cost", SqlDbType.Decimal),
                                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                        };
                                        break;
                                }

                                pDataParametersB[0].Value = dt.Rows[i]["CRUD"].ToString();
                                pDataParametersB[1].Value = pMaterialInRegister_Request_T01Entity.USER_CODE;
                                pDataParametersB[2].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_ID == "" ? pMaterialInRegister_Request_T01Entity.RTN_KEY : pMaterialInRegister_Request_T01Entity.MATSTOCK_ID;
                                pDataParametersB[3].Value = dt.Rows[i]["MATSTOCK_DETAIL_SEQ"].ToString();
                                pDataParametersB[4].Value = dt.Rows[i]["PART_CODE"].ToString();
                                pDataParametersB[5].Value = dt.Rows[i]["LOT_ID"].ToString();
                                pDataParametersB[6].Value = dt.Rows[i]["UNIT_CODE"].ToString();
                                pDataParametersB[7].Value = dt.Rows[i]["MATSTOCK_DETAIL_QTY"].ToString();
                                pDataParametersB[8].Value = dt.Rows[i]["UNITCOST"].ToString();
                                pDataParametersB[9].Value = dt.Rows[i]["COST"].ToString();
                                pDataParametersB[10].Value = dt.Rows[i]["REMARK"].ToString();
                                pDataParametersB[11].Value = dt.Rows[i]["USE_YN"].ToString();

                                DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_I20", pDataParametersB);

                                if (pDataTableB.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }

                        int cCount = 0;
                        if (dt_sub != null)
                        {
                            cCount = dt_sub.Rows.Count;
                            for (int j = 0; j < cCount; j++)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersC = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersC = new IDataParameter[]
                                        {
                                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_matstock_sub_id", MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_matstock_sub_seq", MySqlDbType.VarChar, 6),
                                            new MySqlParameter("@v_matstock_sub_name", MySqlDbType.VarChar, 20),
                                            new MySqlParameter("@v_matstock_sub_qty", MySqlDbType.Decimal),
                                            new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                        };
                                        break;
                                    case "SQLServer":
                                        pDataParametersC = new IDataParameter[]
                                        {
                                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                            new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_matstock_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_matstock_detail_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_matstock_sub_id", SqlDbType.NVarChar, 15),
                                            new SqlParameter("@v_matstock_sub_seq", SqlDbType.NVarChar, 6),
                                            new SqlParameter("@v_matstock_sub_name", SqlDbType.NVarChar, 20),
                                            new SqlParameter("@v_matstock_sub_qty", SqlDbType.Decimal),
                                            new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                        };
                                        break;
                                }

                                pDataParametersC[0].Value = dt_sub.Rows[j]["CRUD"].ToString();
                                pDataParametersC[1].Value = pMaterialInRegister_Request_T01Entity.USER_CODE;
                                pDataParametersC[2].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_ID;
                                pDataParametersC[3].Value = pMaterialInRegister_Request_T01Entity.MATSTOCK_DETAIL_SEQ;
                                pDataParametersC[4].Value = dt_sub.Rows[j]["MATSTOCK_SUB_ID"].ToString();
                                pDataParametersC[5].Value = dt_sub.Rows[j]["MATSTOCK_SUB_SEQ"].ToString();
                                pDataParametersC[6].Value = dt_sub.Rows[j]["MATSTOCK_SUB_NAME"].ToString();
                                pDataParametersC[7].Value = dt_sub.Rows[j]["MATSTOCK_SUB_QTY"].ToString();
                                pDataParametersC[8].Value = dt_sub.Rows[j]["REMARK"].ToString();
                                pDataParametersC[9].Value = dt_sub.Rows[j]["USE_YN"].ToString();

                                DataTable pDataTableC = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_I25", pDataParametersC);

                                if (pDataTableC.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }
                        
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 하위정보 저장
        public bool MaterialInRegister_Request_T01_Sub_Save(MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction(); //Transaction 시작
            int pCount = 0;
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;
                    for (int i = 0; i < pCount; i++)
                    {
                        
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }
        #endregion

        #region 시험검사 정보 저장

        public bool MaterialInRegister_Request_T01_Info_Check_Save(MaterialInRegister_Request_T01Entity pMaterialInRegisterEntity_Request_T01, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {

                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_matstock_id", MySqlDbType.VarChar, 15),
                                        new MySqlParameter("@v_matstock_detail_seq", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_inspect_id", MySqlDbType.VarChar, 15),
                                        new MySqlParameter("@v_inspect_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_inspect_seq", MySqlDbType.VarChar, 6),
                                        new MySqlParameter("@v_inspect_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_inspect_status", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_complete_yn", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {

                                        new SqlParameter("@v_crud", SqlDbType.VarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.VarChar, 20),
                                        new SqlParameter("@v_matstock_id", SqlDbType.VarChar, 15),
                                        new SqlParameter("@v_matstock_detail_seq", SqlDbType.VarChar, 8),
                                        new SqlParameter("@v_inspect_id", SqlDbType.VarChar, 15),
                                        new SqlParameter("@v_inspect_date", SqlDbType.VarChar, 8),
                                        new SqlParameter("@v_inspect_seq", SqlDbType.VarChar, 6),
                                        new SqlParameter("@v_inspect_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_inspect_status", SqlDbType.VarChar, 20),
                                        new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                        new SqlParameter("@v_complete_yn", SqlDbType.VarChar, 1),
                                        new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),

                                };
                                break;
                        }
                        pDataParametersA[0].Value = pMaterialInRegisterEntity_Request_T01.CRUD;
                        pDataParametersA[1].Value = pMaterialInRegisterEntity_Request_T01.USER_CODE;
                        pDataParametersA[2].Value = dt.Rows[a]["MATSTOCK_ID"].ToString();
                        pDataParametersA[3].Value = dt.Rows[a]["MATSTOCK_DETAIL_SEQ"].ToString();
                        pDataParametersA[4].Value = "";
                        pDataParametersA[5].Value = DateTime.Today.ToString("yyyyMMdd");
                        pDataParametersA[6].Value = "";
                        pDataParametersA[7].Value = dt.Rows[a]["MATSTOCK_DETAIL_QTY"].ToString();
                        pDataParametersA[8].Value = "QC010003";
                        pDataParametersA[9].Value = dt.Rows[a]["REMARK"].ToString();
                        pDataParametersA[10].Value = "N"; // dt.Rows[a]["COMPLETE_YN"].ToString();
                        pDataParametersA[11].Value = "Y";// dt.Rows[a]["USE_YN"].ToString();

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInRegister_Request_T01_I30", pDataParametersA);

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        pMaterialInRegisterEntity_Request_T01.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                        pMaterialInRegisterEntity_Request_T01.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                        pMaterialInRegisterEntity_Request_T01.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                        pMaterialInRegisterEntity_Request_T01.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                        pMaterialInRegisterEntity_Request_T01.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInRegister_Request_T01_Info_Check_Save(MaterialInRegister_Request_T01Entity pMaterialInRegisterEntity_Request_T01, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }
        #endregion
        
        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInRegister_Request_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInRegister_Request_T01Entity pMaterialInRegister_Request_T01Entity = new MaterialInRegister_Request_T01Entity();

                pMaterialInRegister_Request_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInRegister_Request_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOrderInfoPopup_RequestProvider : EntityManager<VendCodeInfoPopupEntity>
    {
        #region 생성자 - CommonCodeReturnProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOrderInfoPopup_RequestProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 의뢰 정보 조회하기 - MaterialOrderInfoPopup_Request_Return(string pWINDOW_NAME, string pDEV_GRID_NAME)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pCORP_CD">회사코드</param>
        /// <param name="pWINDOW_NAME">화면 아이디</param>
        /// <param name="pDEV_GRID_NAME">그리드 아이디</param>
        /// <returns>조회 목록</returns>
        public DataSet MaterialOrderInfoPopup_Request_Return(string pCRUD, string pFROM_DATE, string pTO_DATE, string pPART_NAME, string pVEND_NAME)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                            new MySqlParameter("@v_order_date", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_to_date", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar,50),


                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                            new SqlParameter("@v_order_date", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_to_date", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar,50)

                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pFROM_DATE;
                pDataParameters[2].Value = pTO_DATE;
                pDataParameters[3].Value = pPART_NAME;
                pDataParameters[4].Value = pVEND_NAME;

                //USP_MaterialOrderInfoPopup_Request_R10 -> USP_ucMaterialMaterialOrderInfoPopup_Request_R10
                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucMaterialOrderInfoPopup_Request_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        #endregion


        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override VendCodeInfoPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                VendCodeInfoPopupEntity pVendCodeInfoPopupEntity = new VendCodeInfoPopupEntity();

                pVendCodeInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pVendCodeInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

    }
    public class MaterialInStatusProvider : EntityManager<MaterialInStatusEntity>
    {
        #region 생성자 - MaterialInStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInStatusEntity pMaterialInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialInStatusEntity pMaterialInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialInStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialInStatusEntity.PART_CODE;
                pDataParameters[4].Value = pMaterialInStatusEntity.PART_NAME;
                pDataParameters[5].Value = pMaterialInStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInStatusEntity pMaterialInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialInStatusEntity pMaterialInStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialInStatusEntity pMaterialInStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInStatusEntity.CRUD;
                pDataParametersA[1].Value = pMaterialInStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInStatus_I10", pDataParametersA);

                pMaterialInStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialInStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialInStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialInStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialInStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialInStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialInStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialInStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialInStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialInStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialInStatusEntity pMaterialInStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialInStatus_Info_Filename(MaterialInStatusEntity pMaterialInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInStatus_Info_Filename(MaterialInStatusEntity pMaterialInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialInStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInStatus_Info_Filename(MaterialInStatusEntity pMaterialInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInStatusEntity pMaterialInStatusEntity = new MaterialInStatusEntity();

                pMaterialInStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInStatus_T02Provider : EntityManager<MaterialInStatus_T02Entity>
    {
        #region 생성자 - MaterialInStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInStatusEntity pMaterialInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInStatus_T02_Info(MaterialInStatus_T02Entity pMaterialInStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,10),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,10),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialInStatus_T02Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInStatus_T02Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialInStatus_T02Entity.INOUT_ID;
                pDataParameters[4].Value = pMaterialInStatus_T02Entity.PART_CODE;
                pDataParameters[5].Value = pMaterialInStatus_T02Entity.PART_NAME;
                pDataParameters[6].Value = pMaterialInStatus_T02Entity.VEND_CODE;
                pDataParameters[7].Value = pMaterialInStatus_T02Entity.VEND_NAME;
                pDataParameters[8].Value = pMaterialInStatus_T02Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInStatusEntity pMaterialInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialInStatusEntity pMaterialInStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialInStatusEntity pMaterialInStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInStatusEntity.CRUD;
                pDataParametersA[1].Value = pMaterialInStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInStatus_I10", pDataParametersA);

                pMaterialInStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialInStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialInStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialInStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialInStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialInStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialInStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialInStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialInStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialInStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialInStatusEntity pMaterialInStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialInStatus_Info_Filename(MaterialInStatusEntity pMaterialInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInStatus_Info_Filename(MaterialInStatusEntity pMaterialInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialInStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInStatus_Info_Filename(MaterialInStatusEntity pMaterialInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInStatus_T02Entity pMaterialInStatus_T02Entity = new MaterialInStatus_T02Entity();

                pMaterialInStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialManagementProvider : EntityManager<MaterialManagementEntity>
    {
        #region 생성자 - MaterialManagementProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialManagementProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 및 대표 서식 파일 조회하기 - MaterialManagement_Mst(MaterialManagementEntity pMaterialManagementEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pEquipmentCheckEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>

        public DataTable MaterialManagement_Mst(MaterialManagementEntity pMaterialManagementEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_sheetinfo_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_file_nickname", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_sheetinfo_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_file_nickname", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialManagementEntity.CRUD;
                pDataParameters[1].Value = pMaterialManagementEntity.SHEETINFO_ID;
                pDataParameters[2].Value = pMaterialManagementEntity.DATE_FROM;
                pDataParameters[3].Value = pMaterialManagementEntity.DATE_TO;
                pDataParameters[4].Value = pMaterialManagementEntity.FILE_NICKNAME;
                pDataParameters[5].Value = pMaterialManagementEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialManagement_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialManagement_Mst(MaterialManagementEntity pMaterialManagementEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 대표파일 조회하기 조회하기 - MaterialManagement_Sub(MaterialManagementEntity pMaterialManagementEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pEquipmentchangeEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>

        public DataTable MaterialManagement_Sub(MaterialManagementEntity pMaterialManagementEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_sheetinfo_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_sheetinfo_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialManagementEntity.SHEETINFO_ID;
                pDataParameters[1].Value = pMaterialManagementEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialManagement_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialManagement_Sub(MaterialManagementEntity pMaterialManagementEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - EquipmentCheck_Save(EquipmentCheckEntity pEquipmentCheckEntity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pMaterialManagementEntity"></param>
        /// <returns></returns>
        public bool MaterialManagement_Save(MaterialManagementEntity pMaterialManagementEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_sheetinfo_id", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_dsp_seq", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_file_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_file_nickname", MySqlDbType.VarChar, 100)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_sheetinfo_id", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_dsp_seq", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_file_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_file_nickname", SqlDbType.NVarChar, 100)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialManagementEntity.CRUD;
                pDataParametersA[1].Value = pMaterialManagementEntity.USER_CODE;
                pDataParametersA[2].Value = pMaterialManagementEntity.WINDOW_NAME;
                pDataParametersA[3].Value = pMaterialManagementEntity.SHEETINFO_ID;
                pDataParametersA[4].Value = pMaterialManagementEntity.DSP_SEQ;
                pDataParametersA[5].Value = pMaterialManagementEntity.FILE_NAME;
                pDataParametersA[6].Value = pMaterialManagementEntity.FILE_NICKNAME;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialManagement_I10", pDataParametersA);

                pMaterialManagementEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialManagementEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialManagementEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialManagementEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialManagementEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialManagement_Save(MaterialManagementEntity pMaterialManagementEntity)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialManagementEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialManagementEntity pMaterialManagementEntity = new MaterialManagementEntity();

                //pListofManagementEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialManagementEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialNotInStatusProvider : EntityManager<MaterialNotInStatusEntity>
    {
        #region 생성자 - MaterialNotInStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialNotInStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialNotInStatusEntity pMaterialNotInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialNotInStatusEntity pMaterialNotInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialNotInStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialNotInStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialNotInStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialNotInStatusEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialNotInStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialNotInStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialNotInStatusEntity pMaterialNotInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialNotInStatusEntity pMaterialNotInStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialNotInStatusEntity pMaterialNotInStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialNotInStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialNotInStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialNotInStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialNotInStatus_I10", pDataParametersA);

                pMaterialNotInStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialNotInStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialNotInStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialNotInStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialNotInStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialNotInStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialNotInStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialNotInStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialNotInStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialNotInStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialNotInStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialNotInStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialNotInStatusEntity pMaterialNotInStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialNotInStatus_Info_Filename(MaterialNotInStatusEntity pMaterialNotInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialNotInStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialNotInStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialNotInStatus_Info_Filename(MaterialNotInStatusEntity pMaterialNotInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialNotInStatusEntity pMaterialNotInStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialNotInStatusEntity.LANGUAGE_TYPE;

                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialNotInStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialNotInStatusEntity pMaterialNotInStatusEntity = new MaterialNotInStatusEntity();

                pMaterialNotInStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialNotInStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOutRegisterProvider : EntityManager<MaterialOutRegisterEntity>
    {
        #region 생성자 - MaterialOutRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOutRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutRegisterEntity.CRUD;
                pDataParameters[1].Value = pMaterialOutRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOutRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOutRegisterEntity.PART_CODE;
                pDataParameters[4].Value = pMaterialOutRegisterEntity.PART_NAME;
                pDataParameters[5].Value = pMaterialOutRegisterEntity.VEND_NAME;
                pDataParameters[6].Value = pMaterialOutRegisterEntity.REFERENCE_ID;
                pDataParameters[7].Value = pMaterialOutRegisterEntity.INOUT_ID;
                pDataParameters[8].Value = pMaterialOutRegisterEntity.INOUT_CODE;
                pDataParameters[9].Value = pMaterialOutRegisterEntity.USE_YN;
                pDataParameters[10].Value = pMaterialOutRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion



        #region 정보 저장하기 - MaterialOutRegister_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOutRegister_Info_Save(MaterialOutRegisterEntity pMaterialOutRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_PART_UNIT", MySqlDbType.VarChar, 50),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_PART_UNIT", SqlDbType.VarChar, 50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOutRegisterEntity.CRUD;
                pDataParametersA[1].Value = pMaterialOutRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOutRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialOutRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialOutRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialOutRegisterEntity.INOUT_CODE;
                pDataParametersA[6].Value = pMaterialOutRegisterEntity.PART_CODE;
                pDataParametersA[7].Value = pMaterialOutRegisterEntity.VEND_CODE;
                pDataParametersA[8].Value = Convert.ToDecimal(pMaterialOutRegisterEntity.INOUT_QTY);
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialOutRegisterEntity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pMaterialOutRegisterEntity.COST);
                pDataParametersA[11].Value = pMaterialOutRegisterEntity.REFERENCE_ID;
                pDataParametersA[12].Value = pMaterialOutRegisterEntity.REMARK;
                pDataParametersA[13].Value = pMaterialOutRegisterEntity.USE_YN;
                pDataParametersA[14].Value = pMaterialOutRegisterEntity.UNITCOST_CURRENCY_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_I10", pDataParametersA);

                pMaterialOutRegisterEntity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pMaterialOutRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pMaterialOutRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialOutRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
                
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Save(MaterialOutRegisterEntity pMaterialOutRegisterEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOutRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOutRegisterEntity pMaterialOutRegisterEntity = new MaterialOutRegisterEntity();

                //pMaterialOutRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOutRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class PartMoveRegisterProvider : EntityManager<PartMoveRegisterEntity>
    {
        #region 생성자 - PartMoveRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public PartMoveRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - PartMoveRegister_Info_Mst(PartMoveRegisterEntity pPartMoveRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pPartMoveRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable PartMoveRegister_Info_Mst(PartMoveRegisterEntity pPartMoveRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_location", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_location", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pPartMoveRegisterEntity.CRUD;
                pDataParameters[1].Value = pPartMoveRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pPartMoveRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pPartMoveRegisterEntity.PART_CODE;
                pDataParameters[4].Value = pPartMoveRegisterEntity.PART_NAME;
                pDataParameters[5].Value = pPartMoveRegisterEntity.LOCATION;
                pDataParameters[6].Value = pPartMoveRegisterEntity.INOUT_ID;
                pDataParameters[7].Value = pPartMoveRegisterEntity.USE_YN;
                pDataParameters[8].Value = pPartMoveRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_PartMoveRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "PartMoveRegister_Info_Mst(PartMoveRegisterEntity pPartMoveRegisterEntity)",
                    pException
                );
            }
        }

        #endregion



        #region 정보 저장하기 - PartMoveRegister_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool PartMoveRegister_Info_Save(PartMoveRegisterEntity pPartMoveRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_PART_UNIT", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_location_out", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_location_in", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_PART_UNIT", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_location_out", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_location_in", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParametersA[0].Value = pPartMoveRegisterEntity.CRUD;
                pDataParametersA[1].Value = pPartMoveRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pPartMoveRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pPartMoveRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pPartMoveRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pPartMoveRegisterEntity.INOUT_CODE;
                pDataParametersA[6].Value = pPartMoveRegisterEntity.PART_CODE;
                pDataParametersA[7].Value = pPartMoveRegisterEntity.VEND_CODE;
                pDataParametersA[8].Value = Convert.ToDecimal(pPartMoveRegisterEntity.INOUT_QTY);
                pDataParametersA[9].Value = Convert.ToDecimal(pPartMoveRegisterEntity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pPartMoveRegisterEntity.COST);
                pDataParametersA[12].Value = pPartMoveRegisterEntity.REMARK;
                pDataParametersA[13].Value = pPartMoveRegisterEntity.USE_YN;
                pDataParametersA[14].Value = pPartMoveRegisterEntity.UNITCOST_CURRENCY_CODE;
                pDataParametersA[15].Value = pPartMoveRegisterEntity.LOCATION_OUT;
                pDataParametersA[16].Value = pPartMoveRegisterEntity.LOCATION_IN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_PartMoveRegister_I10", pDataParametersA);

                pPartMoveRegisterEntity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pPartMoveRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pPartMoveRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pPartMoveRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "PartMoveRegister_Info_Save(PartMoveRegisterEntity pPartMoveRegisterEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override PartMoveRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                PartMoveRegisterEntity pPartMoveRegisterEntity = new PartMoveRegisterEntity();

                //pPartMoveRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pPartMoveRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOutRegister_T03Provider : EntityManager<MaterialOutRegister_T03Entity>
    {
        #region 생성자 - MaterialOutRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOutRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialOutRegister_T03_Info_Mst(MaterialOutRegister_T03Entity pMaterialOutRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutRegister_T03_Info_Mst(MaterialOutRegister_T03Entity pMaterialOutRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pMaterialOutRegister_T03Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOutRegister_T03Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialOutRegister_T03Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialOutRegister_T03Entity.PART_NAME;
                pDataParameters[5].Value = pMaterialOutRegister_T03Entity.VEND_NAME;
                pDataParameters[6].Value = pMaterialOutRegister_T03Entity.REFERENCE_ID;
                pDataParameters[7].Value = pMaterialOutRegister_T03Entity.INOUT_ID;
                pDataParameters[8].Value = pMaterialOutRegister_T03Entity.INOUT_CODE;
                pDataParameters[9].Value = pMaterialOutRegister_T03Entity.USE_YN;
                pDataParameters[10].Value = pMaterialOutRegister_T03Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T03_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T03_Info_Mst(MaterialOutRegister_T03Entity pMaterialOutRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion



        #region 정보 저장하기 - MaterialOutRegister_T03_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOutRegister_T03_Info_Save(MaterialOutRegister_T03Entity pMaterialOutRegister_T03Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_PART_UNIT", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_location", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_PART_UNIT", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_location", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOutRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pMaterialOutRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOutRegister_T03Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialOutRegister_T03Entity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialOutRegister_T03Entity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialOutRegister_T03Entity.INOUT_CODE;
                pDataParametersA[6].Value = pMaterialOutRegister_T03Entity.PART_CODE;
                pDataParametersA[7].Value = pMaterialOutRegister_T03Entity.VEND_CODE;
                pDataParametersA[8].Value = Convert.ToDecimal(pMaterialOutRegister_T03Entity.INOUT_QTY);
                pDataParametersA[9].Value = Convert.ToDecimal(pMaterialOutRegister_T03Entity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pMaterialOutRegister_T03Entity.COST);
                pDataParametersA[11].Value = pMaterialOutRegister_T03Entity.REFERENCE_ID;
                pDataParametersA[12].Value = pMaterialOutRegister_T03Entity.REMARK;
                pDataParametersA[13].Value = pMaterialOutRegister_T03Entity.USE_YN;
                pDataParametersA[14].Value = pMaterialOutRegister_T03Entity.UNITCOST_CURRENCY_CODE;
                pDataParametersA[15].Value = pMaterialOutRegister_T03Entity.LOCATION;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T03_I10", pDataParametersA);

                pMaterialOutRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pMaterialOutRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pMaterialOutRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialOutRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T03_Info_Save(MaterialOutRegister_T03Entity pMaterialOutRegister_T03Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOutRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOutRegister_T03Entity pMaterialOutRegister_T03Entity = new MaterialOutRegister_T03Entity();

                //pMaterialOutRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOutRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOutRegister_T01Provider : EntityManager<MaterialOutRegister_T01Entity>
    {
        #region 생성자 - MaterialOutRegister_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOutRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialOutRegister_T01_Info_Mst(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutRegister_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutRegister_T01_Info_Mst(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialOutRegister_T01Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOutRegister_T01Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialOutRegister_T01Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialOutRegister_T01Entity.PART_NAME;
                pDataParameters[5].Value = pMaterialOutRegister_T01Entity.VEND_NAME;
                pDataParameters[6].Value = pMaterialOutRegister_T01Entity.REFERENCE_ID;
                pDataParameters[7].Value = pMaterialOutRegister_T01Entity.INOUT_ID;
                pDataParameters[8].Value = pMaterialOutRegister_T01Entity.INOUT_CODE;
                pDataParameters[9].Value = pMaterialOutRegister_T01Entity.USE_YN;
                pDataParameters[10].Value = pMaterialOutRegister_T01Entity.LANGUAGE_TYPE;
                pDataParameters[11].Value = pMaterialOutRegister_T01Entity.VEND_PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T01_Info_Mst(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOutRegister_T01_Popup_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOutRegister_T01_Popup_Save(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_inspect_date          ".Trim(), MySqlDbType.VarChar, 8),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_inspect_date          ".Trim(), SqlDbType.VarChar, 8),


                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialOutRegister_T01Entity.CRUD;
                            pDataParametersA[1].Value = pMaterialOutRegister_T01Entity.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                            pDataParametersA[4].Value = DateTime.Now.ToString("yyyyMMdd");


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialStockInfoPopup_I10", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialOutRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialOutRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialOutRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialOutRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialOutRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion


        #region 정보 저장하기 - MaterialOutRegister_T01_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOutRegister_T01_Info_Save(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_PART_UNIT", MySqlDbType.VarChar, 50),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_PART_UNIT", SqlDbType.VarChar, 50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOutRegister_T01Entity.CRUD;
                pDataParametersA[1].Value = pMaterialOutRegister_T01Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOutRegister_T01Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pMaterialOutRegister_T01Entity.INOUT_ID;
                pDataParametersA[4].Value = pMaterialOutRegister_T01Entity.INOUT_DATE;
                pDataParametersA[5].Value = pMaterialOutRegister_T01Entity.INOUT_CODE;
                pDataParametersA[6].Value = pMaterialOutRegister_T01Entity.PART_CODE;
                pDataParametersA[7].Value = pMaterialOutRegister_T01Entity.VEND_CODE;
                pDataParametersA[8].Value = pMaterialOutRegister_T01Entity.INOUT_QTY;
                pDataParametersA[9].Value = pMaterialOutRegister_T01Entity.UNITCOST;
                pDataParametersA[10].Value = pMaterialOutRegister_T01Entity.COST;
                pDataParametersA[11].Value = pMaterialOutRegister_T01Entity.REFERENCE_ID;
                pDataParametersA[12].Value = pMaterialOutRegister_T01Entity.REMARK;
                pDataParametersA[13].Value = pMaterialOutRegister_T01Entity.USE_YN;
                pDataParametersA[14].Value = pMaterialOutRegister_T01Entity.UNITCOST_CURRENCY_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T01_I20", pDataParametersA);

                pMaterialOutRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pMaterialOutRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pMaterialOutRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialOutRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T01_Info_Save(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet Sheet_Info_Sheet_Data(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_user_name", MySqlDbType.VarChar, 50),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_user_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pMaterialOutRegister_T01Entity.VEND_CODE;
                pDataParameters[1].Value = pMaterialOutRegister_T01Entity.INOUT_ID;
                pDataParameters[2].Value = pMaterialOutRegister_T01Entity.LANGUAGE_TYPE;
                pDataParameters[3].Value = pMaterialOutRegister_T01Entity.USER_NAME;


                DataSet pDataTable = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_SheetInfoRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)",
                    pException
                );
            }
        }
        #endregion

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOutRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialOutRegister_T01Entity.WINDOW_NAME;
                pDataParameters[2].Value = pMaterialOutRegister_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R20", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOutRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOutRegister_T01Entity pMaterialOutRegister_T01Entity = new MaterialOutRegister_T01Entity();

                //pMaterialOutRegister_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOutRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOutRegister_T02Provider : EntityManager<MaterialOutRegister_T02Entity>
    {
        #region 생성자 - MaterialOutRegister_T02Provider(DBManager pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOutRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - DataTable MaterialOutRegister_T02_Info_Mst(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutRegister_T02_Info_Mst(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 10)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 10)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialOutRegister_T02Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOutRegister_T02Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialOutRegister_T02Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialOutRegister_T02Entity.VEND_PART_CODE;
                pDataParameters[5].Value = pMaterialOutRegister_T02Entity.PART_NAME;
                pDataParameters[6].Value = pMaterialOutRegister_T02Entity.VEND_NAME;
                pDataParameters[7].Value = pMaterialOutRegister_T02Entity.REFERENCE_ID;
                pDataParameters[8].Value = pMaterialOutRegister_T02Entity.INOUT_ID;
                pDataParameters[9].Value = pMaterialOutRegister_T02Entity.INOUT_CODE;
                pDataParameters[10].Value = pMaterialOutRegister_T02Entity.USE_YN;
                pDataParameters[11].Value = pMaterialOutRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T02_Info_Mst(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 -MaterialOutRegister_T02_Popup_Save(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOutRegister_T02_Popup_Save(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_inspect_date          ".Trim(), MySqlDbType.VarChar, 8),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_inspect_date          ".Trim(), SqlDbType.VarChar, 8),


                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pMaterialOutRegister_T02Entity.CRUD;
                            pDataParametersA[1].Value = pMaterialOutRegister_T02Entity.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                            pDataParametersA[4].Value = DateTime.Now.ToString("yyyyMMdd");


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialStockInfoPopup_T2_I10", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pMaterialOutRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pMaterialOutRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pMaterialOutRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pMaterialOutRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pMaterialOutRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T02_Popup_Save(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion


        #region 정보 저장하기 - MaterialOutRegister_T02_Info_Save(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOutRegister_T02_Info_Save(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int i = 0; i < pCount; i++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_PART_UNIT", MySqlDbType.VarChar, 50),
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_PART_UNIT", SqlDbType.VarChar, 50),
                                };
                                break;
                        }

                        pDataParametersA[0].Value = dt.Rows[i]["CRUD"].ToString();
                        pDataParametersA[1].Value = pMaterialOutRegister_T02Entity.USER_CODE;
                        pDataParametersA[2].Value = "O";
                        pDataParametersA[3].Value = dt.Rows[i]["INOUT_ID"].ToString();
                        if (dt.Rows[i]["INOUT_DATE"].ToString().Length > 8)
                        {
                            pDataParametersA[4].Value = dt.Rows[i]["INOUT_DATE"].ToString().Substring(0, 10).Replace("-", "").ToString();
                        }

                        pDataParametersA[5].Value = dt.Rows[i]["INOUT_CODE"].ToString();
                        pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                        pDataParametersA[7].Value = dt.Rows[i]["VEND_CODE"].ToString();

                        pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["INOUT_QTY"].ToString());
                        pDataParametersA[9].Value = Convert.ToDecimal(dt.Rows[i]["UNITCOST"].ToString());
                        pDataParametersA[10].Value = Convert.ToDecimal(dt.Rows[i]["COST"].ToString());
                        pDataParametersA[11].Value = dt.Rows[i]["REFERENCE_ID"].ToString();
                        pDataParametersA[12].Value = dt.Rows[i]["REMARK"].ToString();
                        pDataParametersA[13].Value = dt.Rows[i]["USE_YN"].ToString();
                        pDataParametersA[14].Value = dt.Rows[i]["PART_UNIT"].ToString();

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T02_I10", pDataParametersA);

                        pMaterialOutRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                        pMaterialOutRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                        pMaterialOutRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                        pMaterialOutRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_T02_Info_Save(MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOutRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOutRegister_T02Entity pMaterialOutRegister_T02Entity = new MaterialOutRegister_T02Entity();

                //pMaterialOutRegister_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOutRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOutStatusProvider : EntityManager<MaterialOutStatusEntity>
    {
        #region 생성자 - MaterialOutStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOutStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialOutStatusEntity pMaterialOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialOutStatusEntity pMaterialOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialOutStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOutStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialOutStatusEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialOutStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialOutStatusEntity pMaterialOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialOutStatusEntity pMaterialOutStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialOutStatusEntity pMaterialOutStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOutStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialOutStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialOutStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutStatus_I10", pDataParametersA);

                pMaterialOutStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialOutStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialOutStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialOutStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialOutStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialOutStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialOutStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialOutStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialOutStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialOutStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialOutStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialOutStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialOutStatusEntity pMaterialOutStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOutStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOutStatusEntity pMaterialOutStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialOutStatusEntity.LANGUAGE_TYPE;

                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOutStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOutStatusEntity pMaterialOutStatusEntity = new MaterialOutStatusEntity();

                pMaterialOutStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOutStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion


    }
    public class MaterialOutStatus_T02Provider : EntityManager<MaterialOutStatus_T02Entity>
    {
        #region 생성자 - MaterialOutStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialOutStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialOutStatusEntity pMaterialOutStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutStatus_T02_Info(MaterialOutStatus_T02Entity pMaterialOutStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,10),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,10),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialOutStatus_T02Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOutStatus_T02Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialOutStatus_T02Entity.INOUT_ID;
                pDataParameters[4].Value = pMaterialOutStatus_T02Entity.PART_CODE;
                pDataParameters[5].Value = pMaterialOutStatus_T02Entity.PART_NAME;
                pDataParameters[6].Value = pMaterialOutStatus_T02Entity.VEND_CODE;
                pDataParameters[7].Value = pMaterialOutStatus_T02Entity.VEND_NAME;
                pDataParameters[8].Value = pMaterialOutStatus_T02Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialOutStatusEntity pMaterialOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialOutStatusEntity pMaterialOutStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialOutStatusEntity pMaterialOutStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialOutStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialOutStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialOutStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutStatus_I10", pDataParametersA);

                pMaterialOutStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialOutStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialOutStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialOutStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialOutStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialOutStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialOutStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialOutStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialOutStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialOutStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialOutStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialOutStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialOutStatusEntity pMaterialOutStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialOutStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialOutStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOutStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutStatus_Info_Filename(MaterialOutStatusEntity pMaterialOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInStatusEntity pMaterialInStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOutStatusEntity pMaterialOutStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialOutStatusEntity.LANGUAGE_TYPE;

                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialOutStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOutStatus_T02Entity pMaterialOutStatus_T02Entity = new MaterialOutStatus_T02Entity();

                pMaterialOutStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialOutStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion


    }
    public class MaterialStockStatusProvider : EntityManager<MaterialStockStatusEntity>
    {
        #region 생성자 - MaterialStockStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialStockStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialStockStatusEntity pMaterialStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialStockStatusEntity pMaterialStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialStockStatusEntity.LANGUAGE_TYPE;

                //pDataParameters[2].Value = pMaterialStockStatusEntity.DATE_FROM;
                //pDataParameters[3].Value = pMaterialStockStatusEntity.DATE_TO;
                //pDataParameters[4].Value = pMaterialStockStatusEntity.PART_NAME;
                //pDataParameters[5].Value = pMaterialStockStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_Info_Mst(MaterialStockStatusEntity pMaterialStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialStockStatusEntity pMaterialStockStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialStockStatusEntity pMaterialStockStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialStockStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialStockStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialStockStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_I10", pDataParametersA);

                pMaterialStockStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialStockStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialStockStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialStockStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialStockStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialStockStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialStockStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialStockStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialStockStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialStockStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialStockStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialStockStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialStockStatusEntity pMaterialStockStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialStockStatus_Info_Filename(MaterialStockStatusEntity pMaterialStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialStockStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialStockStatus_Info_Filename(MaterialStockStatusEntity pMaterialStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialStockStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_Info_Filename(MaterialStockStatusEntity pMaterialStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion
        
        #region XML파일 다운로드 - Templete_Download(MaterialStockStatusEntity pMaterialStockStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialStockStatusEntity pMaterialStockStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
 

                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialStockStatusEntity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialStockStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialStockStatusEntity pMaterialStockStatusEntity = new MaterialStockStatusEntity();

                pMaterialStockStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialStockStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialStockStatus_T01Provider : EntityManager<MaterialStockStatus_T01Entity>
    {
        #region 생성자 - MaterialStockStatus_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialStockStatus_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialStockStatus_T01Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialStockStatus_T01Entity.PART_NAME;
                pDataParameters[3].Value = pMaterialStockStatus_T01Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialStockStatus_T01Entity.PART_TYPE;

                //pDataParameters[2].Value = pMaterialStockStatus_T01Entity.DATE_FROM;
                //pDataParameters[3].Value = pMaterialStockStatus_T01Entity.DATE_TO;
                //pDataParameters[4].Value = pMaterialStockStatus_T01Entity.PART_NAME;
                //pDataParameters[5].Value = pMaterialStockStatus_T01Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T01_Info_Mst(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialStockStatus_T01Entity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialStockStatus_T01Entity.CRUD;
                pDataParametersA[2].Value = pMaterialStockStatus_T01Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T01_I10", pDataParametersA);

                pMaterialStockStatus_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialStockStatus_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialStockStatus_T01Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialStockStatus_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialStockStatus_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialStockStatus_T01Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialStockStatus_T01Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialStockStatus_T01Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialStockStatus_T01Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialStockStatus_T01Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialStockStatus_T01Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialStockStatus_T01Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialStockStatus_T01_Info_Filename(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialStockStatus_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialStockStatus_T01_Info_Filename(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialStockStatus_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T01_Info_Filename(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialStockStatus_T01Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialStockStatus_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialStockStatus_T01Entity pMaterialStockStatus_T01Entity = new MaterialStockStatus_T01Entity();

                pMaterialStockStatus_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialStockStatus_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialStockStatus_T02Provider : EntityManager<MaterialStockStatus_T02Entity>
    {
        #region 생성자 - MaterialStockStatus_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialStockStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialStockStatus_T02Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialStockStatus_T02Entity.PART_NAME;
                pDataParameters[3].Value = pMaterialStockStatus_T02Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialStockStatus_T02Entity.PART_TYPE;
                pDataParameters[5].Value = pMaterialStockStatus_T02Entity.VEND_PART_CODE;

                //pDataParameters[2].Value = pMaterialStockStatus_T02Entity.DATE_FROM;
                //pDataParameters[3].Value = pMaterialStockStatus_T02Entity.DATE_TO;
                //pDataParameters[4].Value = pMaterialStockStatus_T02Entity.PART_NAME;
                //pDataParameters[5].Value = pMaterialStockStatus_T02Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T02_Info_Mst(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialStockStatus_T02Entity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialStockStatus_T02Entity.CRUD;
                pDataParametersA[2].Value = pMaterialStockStatus_T02Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T02_I10", pDataParametersA);

                pMaterialStockStatus_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialStockStatus_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialStockStatus_T02Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialStockStatus_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialStockStatus_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialStockStatus_T02Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialStockStatus_T02Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialStockStatus_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialStockStatus_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialStockStatus_T02Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialStockStatus_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialStockStatus_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialStockStatus_T02_Info_Filename(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialStockStatus_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialStockStatus_T02_Info_Filename(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T02Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialStockStatus_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T02_Info_Filename(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialStockStatus_T02Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialStockStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialStockStatus_T02Entity pMaterialStockStatus_T02Entity = new MaterialStockStatus_T02Entity();

                pMaterialStockStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialStockStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialStockStatus_T04Provider : EntityManager<MaterialStockStatus_T04Entity>
    {
        #region 생성자 - MaterialStockStatus_T04Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialStockStatus_T04Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T04Entity.CRUD;
                pDataParameters[1].Value = pMaterialStockStatus_T04Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialStockStatus_T04Entity.PART_NAME;
                pDataParameters[3].Value = pMaterialStockStatus_T04Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialStockStatus_T04Entity.PART_TYPE;
                pDataParameters[5].Value = pMaterialStockStatus_T04Entity.VEND_PART_CODE;

                //pDataParameters[2].Value = pMaterialStockStatus_T04Entity.DATE_FROM;
                //pDataParameters[3].Value = pMaterialStockStatus_T04Entity.DATE_TO;
                //pDataParameters[4].Value = pMaterialStockStatus_T04Entity.PART_NAME;
                //pDataParameters[5].Value = pMaterialStockStatus_T04Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T04_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T04_Info_Mst(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialStockStatus_T04Entity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialStockStatus_T04Entity.CRUD;
                pDataParametersA[2].Value = pMaterialStockStatus_T04Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T04_I10", pDataParametersA);

                pMaterialStockStatus_T04Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialStockStatus_T04Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialStockStatus_T04Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialStockStatus_T04Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialStockStatus_T04Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialStockStatus_T04Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialStockStatus_T04Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialStockStatus_T04Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialStockStatus_T04Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialStockStatus_T04Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialStockStatus_T04Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialStockStatus_T04Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialStockStatus_T04_Info_Filename(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialStockStatus_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialStockStatus_T04_Info_Filename(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T04Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialStockStatus_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T04_Info_Filename(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialStockStatus_T04Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialStockStatus_T04Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialStockStatus_T04Entity pMaterialStockStatus_T04Entity = new MaterialStockStatus_T04Entity();

                pMaterialStockStatus_T04Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialStockStatus_T04Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialStockStatus_T05Provider : EntityManager<MaterialStockStatus_T05Entity>
    {
        #region 생성자 - MaterialStockStatus_T05Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialStockStatus_T05Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 100)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 100)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T05Entity.CRUD;
                pDataParameters[1].Value = pMaterialStockStatus_T05Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialStockStatus_T05Entity.PART_NAME;
                pDataParameters[3].Value = pMaterialStockStatus_T05Entity.PART_CODE;
                pDataParameters[4].Value = pMaterialStockStatus_T05Entity.PART_TYPE;
                pDataParameters[5].Value = "";// pProductStockStatus_T05Entity.VEND_PART_CODE;

                //pDataParameters[2].Value = pMaterialStockStatus_T05Entity.DATE_FROM;
                //pDataParameters[3].Value = pMaterialStockStatus_T05Entity.DATE_TO;
                //pDataParameters[4].Value = pMaterialStockStatus_T05Entity.PART_NAME;
                //pDataParameters[5].Value = pMaterialStockStatus_T05Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T05_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T05_Info_Mst(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialStockStatus_T05Entity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialStockStatus_T05Entity.CRUD;
                pDataParametersA[2].Value = pMaterialStockStatus_T05Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialStockStatus_T05_I10", pDataParametersA);

                pMaterialStockStatus_T05Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialStockStatus_T05Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialStockStatus_T05Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialStockStatus_T05Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialStockStatus_T05Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialStockStatus_T05Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialStockStatus_T05Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialStockStatus_T05Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialStockStatus_T05Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialStockStatus_T05Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialStockStatus_T05Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialStockStatus_T05Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialStockStatus_T05_Info_Filename(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialStockStatus_T05Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialStockStatus_T05_Info_Filename(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialStockStatus_T05Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialStockStatus_T05Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialStockStatus_T05_Info_Filename(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialStockStatus_T05Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialStockStatus_T05Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialStockStatus_T05Entity pMaterialStockStatus_T05Entity = new MaterialStockStatus_T05Entity();

                pMaterialStockStatus_T05Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialStockStatus_T05Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProcessMaterialStockStatusProvider : EntityManager<ProcessMaterialStockStatusEntity>
    {
        #region 생성자 - GridInfoRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProcessMaterialStockStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProcessMaterialStockStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProcessMaterialStockStatusEntity.CORP_CODE;
                pDataParameters[1].Value = pProcessMaterialStockStatusEntity.CRUD;
                pDataParameters[2].Value = pProcessMaterialStockStatusEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SampleRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProcessMaterialStockStatusEntity.CORP_CODE;
                pDataParameters[1].Value = pProcessMaterialStockStatusEntity.WINDOW_NAME;


                DataTable pDatatable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R30", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDatatable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                //pDataParameters[0].Value = pProcessMaterialStockStatusEntity.CORP_CODE;
                //pDataParameters[1].Value = pProcessMaterialStockStatusEntity.VEND_CODE;
                //pDataParameters[2].Value = pProcessMaterialStockStatusEntity.ORDER_ID;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R33", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)",
                    pException
                );
            }
        }
        #endregion

        #region 정보 저장하기 - Sample_Info_Save(SampleRegisterEntity pSampleRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProcessMaterialStockStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pProcessMaterialStockStatusEntity.CRUD;
                pDataParametersA[2].Value = pProcessMaterialStockStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SampleRegister_I10", pDataParametersA);

                pProcessMaterialStockStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProcessMaterialStockStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProcessMaterialStockStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProcessMaterialStockStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProcessMaterialStockStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                                    };
                                    break;
                            }

                            pDataParametersB[0].Value = pProcessMaterialStockStatusEntity.CORP_CODE;
                            pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[2].Value = pProcessMaterialStockStatusEntity.USER_CODE;

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProcessMaterialStockStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProcessMaterialStockStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                            pProcessMaterialStockStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                            pProcessMaterialStockStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                            pProcessMaterialStockStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(SampleRegisterEntity pSampleRegisterEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(ProcessMaterialStockStatusEntity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;
                pDataParameters[1].Value = pSampleRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProcessMaterialStockStatusEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pSampleRegisterEntity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProcessMaterialStockStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProcessMaterialStockStatusEntity pSampleRegisterEntity = new ProcessMaterialStockStatusEntity();

                pSampleRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pSampleRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInformationRegisterProvider : EntityManager<MaterialInformationRegisterEntity>
    {
        #region 생성자 - MaterialInformationRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInformationRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialInformationRegister_Info_Mst(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_Info_Mst(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegisterEntity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegisterEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegisterEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialInformationRegisterEntity.PART_TYPE;
                pDataParameters[5].Value = pMaterialInformationRegisterEntity.VEND_PART_CODE;
                pDataParameters[6].Value = pMaterialInformationRegisterEntity.USE_YN;
                pDataParameters[7].Value = pMaterialInformationRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_Info_Mst(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - MaterialInformationRegister_Info_Detail(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_Info_Detail(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegisterEntity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_R11", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_Info_Detail(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - MaterialInformationRegister_Info_Sub(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_Info_Sub(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)



                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegisterEntity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegisterEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_Info_Sub(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialInformationRegister_Info_Save(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInformationRegister_Info_Save(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInformationRegisterEntity.CRUD;
                pDataParametersA[1].Value = pMaterialInformationRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInformationRegisterEntity.PART_TYPE;
                pDataParametersA[3].Value = pMaterialInformationRegisterEntity.PART_NAME;
                pDataParametersA[4].Value = pMaterialInformationRegisterEntity.PART_CODE;
                pDataParametersA[5].Value = pMaterialInformationRegisterEntity.PART_REVISION_NO;

                pDataParametersA[6].Value = pMaterialInformationRegisterEntity.VEND_PART_CODE;
                pDataParametersA[7].Value = pMaterialInformationRegisterEntity.PART_UNIT;
                pDataParametersA[8].Value = pMaterialInformationRegisterEntity.PART_STANDARD;
                pDataParametersA[9].Value = pMaterialInformationRegisterEntity.PART_MANUFACTURER;
                pDataParametersA[10].Value = pMaterialInformationRegisterEntity.PART_COST;
                pDataParametersA[11].Value = pMaterialInformationRegisterEntity.PART_SAFE_STOCK;
                pDataParametersA[12].Value = pMaterialInformationRegisterEntity.PART_START_DATE;
                pDataParametersA[13].Value = pMaterialInformationRegisterEntity.PART_END_DATE;
                pDataParametersA[14].Value = pMaterialInformationRegisterEntity.SALE_YN;
                pDataParametersA[15].Value = pMaterialInformationRegisterEntity.PURC_YN;
                pDataParametersA[16].Value = pMaterialInformationRegisterEntity.OUTT_YN;
                pDataParametersA[17].Value = pMaterialInformationRegisterEntity.REMARK;
                pDataParametersA[18].Value = pMaterialInformationRegisterEntity.IMAGE_NAME;
                pDataParametersA[19].Value = pMaterialInformationRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_I10", pDataParametersA);

                pMaterialInformationRegisterEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInformationRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInformationRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialInformationRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pMaterialInformationRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),

                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if(pMaterialInformationRegisterEntity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pMaterialInformationRegisterEntity.PART_CODE = pMaterialInformationRegisterEntity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pMaterialInformationRegisterEntity.USER_CODE;
                            pDataParametersB[2].Value = pMaterialInformationRegisterEntity.PART_CODE;
                            pDataParametersB[3].Value = pMaterialInformationRegisterEntity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Replace("-", "").Substring(10);
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Replace("-", "");
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pMaterialInformationRegisterEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pMaterialInformationRegisterEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                            
                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pMaterialInformationRegisterEntity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();  
                            //pMaterialInformationRegisterEntity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pMaterialInformationRegisterEntity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_Info_Save(MaterialInformationRegisterEntity pMaterialInformationRegisterEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInformationRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInformationRegisterEntity pMaterialInformationRegisterEntity = new MaterialInformationRegisterEntity();

                //pMaterialInformationRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInformationRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInformationRegister_T01Provider : EntityManager<MaterialInformationRegister_T01Entity>
    {
        #region 생성자 - MaterialInformationRegister_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInformationRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialInformationRegister_T01_Info_Mst(MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_T01_Info_Mst(MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_high", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_low", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegister_T01Entity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegister_T01Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegister_T01Entity.VEND_PART_CODE;
                pDataParameters[4].Value = pMaterialInformationRegister_T01Entity.PART_NAME;
                pDataParameters[5].Value = pMaterialInformationRegister_T01Entity.PART_TYPE;
                pDataParameters[6].Value = pMaterialInformationRegister_T01Entity.PART_HIGH;
                pDataParameters[7].Value = pMaterialInformationRegister_T01Entity.PART_MIDDLE;
                pDataParameters[8].Value = pMaterialInformationRegister_T01Entity.PART_LOW;

                pDataParameters[9].Value = pMaterialInformationRegister_T01Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T01_Info_Mst(MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 메인 정보 저장하기 - MaterialInformationRegister_T01_Info_Save(MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInformationRegister_T01_Info_Save(MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {

                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_contract_number_qty", MySqlDbType.Decimal, 18),
                                new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_contract_number_qty", SqlDbType.Decimal, 18),
                                new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;
                        }

                        pDataParametersA[0].Value = dt.Rows[a]["CRUD"].ToString();// pProductInformationRegister_T01Entity.CRUD;
                        pDataParametersA[1].Value = pMaterialInformationRegister_T01Entity.USER_CODE;
                        pDataParametersA[2].Value = dt.Rows[a]["PART_TYPE"].ToString();//pProductInformationRegister_T01Entity.PART_TYPE;
                        pDataParametersA[3].Value = dt.Rows[a]["PART_NAME"].ToString();//pProductInformationRegister_T01Entity.PART_NAME;
                        pDataParametersA[4].Value = dt.Rows[a]["PART_CODE"].ToString();//pProductInformationRegister_T01Entity.PART_CODE;
                        pDataParametersA[5].Value = dt.Rows[a]["PART_REVISION_NO"].ToString();

                        pDataParametersA[6].Value = dt.Rows[a]["VEND_PART_CODE"].ToString();//pProductInformationRegister_T01Entity.VEND_PART_CODE;
                        pDataParametersA[7].Value = dt.Rows[a]["PART_UNIT"].ToString();//pProductInformationRegister_T01Entity.PART_UNIT;
                        pDataParametersA[8].Value = dt.Rows[a]["PART_STANDARD"].ToString();//pProductInformationRegister_T01Entity.PART_STANDARD;
                        pDataParametersA[9].Value = dt.Rows[a]["PART_MANUFACTURER"].ToString();//pProductInformationRegister_T01Entity.PART_MANUFACTURER;

                        pDataParametersA[10].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();//pProductInformationRegister_T01Entity.PART_MANUFACTURER

                        pDataParametersA[11].Value = dt.Rows[a]["PART_COST"].ToString();//pProductInformationRegister_T01Entity.PART_COST;
                        pDataParametersA[12].Value = dt.Rows[a]["PART_SAFE_STOCK"].ToString();//pProductInformationRegister_T01Entity.PART_SAFE_STOCK;
                        pDataParametersA[13].Value = dt.Rows[a]["PART_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_START_DATE"].ToString();    //pProductInformationRegister_T01Entity.PART_START_DATE;
                        pDataParametersA[14].Value = dt.Rows[a]["PART_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_END_DATE"].ToString();//pProductInformationRegister_T01Entity.PART_END_DATE;
                        pDataParametersA[15].Value = dt.Rows[a]["SALE_YN"].ToString();//pProductInformationRegister_T01Entity.SALE_YN;
                        pDataParametersA[16].Value = dt.Rows[a]["PURC_YN"].ToString();//pProductInformationRegister_T01Entity.PURC_YN;
                        pDataParametersA[17].Value = dt.Rows[a]["OUTT_YN"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[18].Value = dt.Rows[a]["CONTRACT_ID"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[19].Value = dt.Rows[a]["CONTRACT_NUMBER_QTY"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[20].Value = dt.Rows[a]["PART_HIGH"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;
                        pDataParametersA[21].Value = dt.Rows[a]["PART_MIDDLE"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;
                        pDataParametersA[22].Value = dt.Rows[a]["PART_LOW"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[23].Value = dt.Rows[a]["REMARK"].ToString();//pProductInformationRegister_T01Entity.REMARK;
                        pDataParametersA[24].Value = "";//pProductInformationRegister_T01Entity.IMAGE_NAME;
                        pDataParametersA[25].Value = dt.Rows[a]["USE_YN"].ToString();//pProductInformationRegister_T01Entity.USE_YN;

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T01_I10", pDataParametersA);

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pMaterialInformationRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                        pMaterialInformationRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                        pMaterialInformationRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                        pMaterialInformationRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                        pMaterialInformationRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
                    }
                }

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T01_Info_Save(MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInformationRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInformationRegister_T01Entity pMaterialInformationRegister_T01Entity = new MaterialInformationRegister_T01Entity();

                //pProductInformationRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInformationRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class FrequentPartHistoryProvider : EntityManager<FrequentPartHistoryEntity>
    {
        #region 생성자 - FrequentPartHistoryProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public FrequentPartHistoryProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - FrequentPartHistory_Info_Mst(FrequentPartHistoryEntity pFrequentPartHistoryEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable FrequentPartHistory_Info_Mst(FrequentPartHistoryEntity pFrequentPartHistoryEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar, 8)

                        };
                        break;
                }

                pDataParameters[0].Value = pFrequentPartHistoryEntity.CRUD;
                pDataParameters[1].Value = pFrequentPartHistoryEntity.DATE_FROM;
                pDataParameters[2].Value = pFrequentPartHistoryEntity.DATE_TO;
         
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_FrequentPartHistory_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "FrequentPartHistory_Info_Mst(FrequentPartHistoryEntity pFrequentPartHistoryEntity)",
                    pException
                );
            }
        }

        #endregion
        
        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override FrequentPartHistoryEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                FrequentPartHistoryEntity pFrequentPartHistoryEntity = new FrequentPartHistoryEntity();

                //pProductInformationRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pFrequentPartHistoryEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInformationRegister_T02Provider : EntityManager<MaterialInformationRegister_T02Entity>
    {
        #region 생성자 - MaterialInformationRegister_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInformationRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialInformationRegister_T02_Info_Mst(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInformationRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_T02_Info_Mst(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegister_T02Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegister_T02Entity.PART_NAME;
                pDataParameters[4].Value = pMaterialInformationRegister_T02Entity.PART_TYPE;
                pDataParameters[5].Value = pMaterialInformationRegister_T02Entity.VEND_PART_CODE;
                pDataParameters[6].Value = pMaterialInformationRegister_T02Entity.USE_YN;
                pDataParameters[7].Value = pMaterialInformationRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T02_Info_Mst(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 마스터 조회하기 - MaterialInformationRegister_T02_Info2(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInformationRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_T02_Info2(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar,50)

                };
                        break;
                }

                pDataParameters[0].Value = "R";
                pDataParameters[1].Value = pMaterialInformationRegister_T02Entity.IMAGE_NAME;
                pDataParameters[2].Value = pMaterialInformationRegister_T02Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T02_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T02_Info_Mst(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion


        #region 상세 조회하기 - MaterialInformationRegister_T02_Info_Sub(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_T02_Info_Sub(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)



                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegister_T02Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T02_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T02_Info_Sub(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialInformationRegister_T02_Info_Save(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInformationRegister_T02_Info_Save(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_file_string", MySqlDbType.MediumBlob),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_file_string", SqlDbType.NVarChar, 500),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInformationRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInformationRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInformationRegister_T02Entity.PART_TYPE;
                pDataParametersA[3].Value = pMaterialInformationRegister_T02Entity.PART_NAME;
                pDataParametersA[4].Value = pMaterialInformationRegister_T02Entity.PART_CODE;
                pDataParametersA[5].Value = pMaterialInformationRegister_T02Entity.PART_REVISION_NO;

                pDataParametersA[6].Value = pMaterialInformationRegister_T02Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pMaterialInformationRegister_T02Entity.PART_UNIT;
                pDataParametersA[8].Value = pMaterialInformationRegister_T02Entity.PART_STANDARD;
                pDataParametersA[9].Value = pMaterialInformationRegister_T02Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = Convert.ToDecimal(pMaterialInformationRegister_T02Entity.PART_COST);
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInformationRegister_T02Entity.PART_SAFE_STOCK);
                pDataParametersA[12].Value = pMaterialInformationRegister_T02Entity.PART_START_DATE;
                pDataParametersA[13].Value = pMaterialInformationRegister_T02Entity.PART_END_DATE;
                pDataParametersA[14].Value = pMaterialInformationRegister_T02Entity.SALE_YN;
                pDataParametersA[15].Value = pMaterialInformationRegister_T02Entity.PURC_YN;
                pDataParametersA[16].Value = pMaterialInformationRegister_T02Entity.OUTT_YN;
                pDataParametersA[17].Value = pMaterialInformationRegister_T02Entity.REMARK;
                pDataParametersA[18].Value = pMaterialInformationRegister_T02Entity.IMAGE_NAME;
                pDataParametersA[19].Value = pMaterialInformationRegister_T02Entity.File_String;
                pDataParametersA[20].Value = pMaterialInformationRegister_T02Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T02_I10", pDataParametersA);

                pMaterialInformationRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInformationRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInformationRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialInformationRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pMaterialInformationRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),

                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pMaterialInformationRegister_T02Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pMaterialInformationRegister_T02Entity.PART_CODE = pMaterialInformationRegister_T02Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pMaterialInformationRegister_T02Entity.USER_CODE;
                            pDataParametersB[2].Value = pMaterialInformationRegister_T02Entity.PART_CODE;
                            pDataParametersB[3].Value = pMaterialInformationRegister_T02Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Replace("-", "").Substring(10);
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Replace("-", "");
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T02_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pMaterialInformationRegister_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pMaterialInformationRegister_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pMaterialInformationRegister_T02Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();  
                            //pMaterialInformationRegister_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pMaterialInformationRegister_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T02_Info_Save(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 정보 저장하기 - MaterialInformationRegister_T02_Info_Save(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInformationRegister_T02_Info_Save2(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),                              
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInformationRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInformationRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInformationRegister_T02Entity.PART_TYPE;
                pDataParametersA[3].Value = pMaterialInformationRegister_T02Entity.PART_NAME;
                pDataParametersA[4].Value = pMaterialInformationRegister_T02Entity.PART_CODE;
                pDataParametersA[5].Value = pMaterialInformationRegister_T02Entity.PART_REVISION_NO;

                pDataParametersA[6].Value = pMaterialInformationRegister_T02Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pMaterialInformationRegister_T02Entity.PART_UNIT;
                pDataParametersA[8].Value = pMaterialInformationRegister_T02Entity.PART_STANDARD;
                pDataParametersA[9].Value = pMaterialInformationRegister_T02Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = Convert.ToDecimal(pMaterialInformationRegister_T02Entity.PART_COST);
                pDataParametersA[11].Value = Convert.ToDecimal(pMaterialInformationRegister_T02Entity.PART_SAFE_STOCK);
                pDataParametersA[12].Value = pMaterialInformationRegister_T02Entity.PART_START_DATE;
                pDataParametersA[13].Value = pMaterialInformationRegister_T02Entity.PART_END_DATE;
                pDataParametersA[14].Value = pMaterialInformationRegister_T02Entity.SALE_YN;
                pDataParametersA[15].Value = pMaterialInformationRegister_T02Entity.PURC_YN;
                pDataParametersA[16].Value = pMaterialInformationRegister_T02Entity.OUTT_YN;
                pDataParametersA[17].Value = pMaterialInformationRegister_T02Entity.REMARK;
                pDataParametersA[18].Value = pMaterialInformationRegister_T02Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformationRegister_T02_I11", pDataParametersA);

                pMaterialInformationRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInformationRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInformationRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialInformationRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pMaterialInformationRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),

                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pMaterialInformationRegister_T02Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pMaterialInformationRegister_T02Entity.PART_CODE = pMaterialInformationRegister_T02Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pMaterialInformationRegister_T02Entity.USER_CODE;
                            pDataParametersB[2].Value = pMaterialInformationRegister_T02Entity.PART_CODE;
                            pDataParametersB[3].Value = pMaterialInformationRegister_T02Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Replace("-", "").Substring(10);
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Replace("-", "");
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pMaterialInformationRegister_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pMaterialInformationRegister_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pMaterialInformationRegister_T02Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();  
                            //pMaterialInformationRegister_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pMaterialInformationRegister_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T02_Info_Save(MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInformationRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInformationRegister_T02Entity pMaterialInformationRegister_T02Entity = new MaterialInformationRegister_T02Entity();

                //pMaterialInformationRegister_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInformationRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucMaterialVendCostInfoListPopupProvider : EntityManager<ucMaterialVendCostInfoListPopupEntity>
    {
        #region 생성자 - ucVendCostInfoListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialVendCostInfoListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucMaterialVendCostInfoListPopup_Info_Return(ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity)

        public DataTable ucMaterialVendCostInfoListPopup_Info_Return(ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pucMaterialVendCostInfoListPopupEntity.CRUD;
                pDataParameters[1].Value = pucMaterialVendCostInfoListPopupEntity.PART_CODE;
                pDataParameters[2].Value = pucMaterialVendCostInfoListPopupEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pucMaterialVendCostInfoListPopupEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialVendCostInfoListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucMaterialVendCostInfoListPopup_Info_Return(ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ucMaterialVendCostInfoListPopup_Info_Save(ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity, DataTable pDataTable)

        public bool ucMaterialVendCostInfoListPopup_Info_Save(ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity, DataTable pDataTable)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (pDataTable != null)
                {
                    pCount = pDataTable.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;

                        }

                        pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
                        pDataParameters[1].Value = pucMaterialVendCostInfoListPopupEntity.USER_CODE;

                        pDataParameters[2].Value = pucMaterialVendCostInfoListPopupEntity.PART_CODE;
                        pDataParameters[3].Value = pucMaterialVendCostInfoListPopupEntity.PART_REVISION_NO;
                        pDataParameters[4].Value = pDataTable.Rows[a]["VEND_CODE"].ToString();
                        pDataParameters[5].Value = pDataTable.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                        pDataParameters[6].Value = pDataTable.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                        pDataParameters[7].Value = pDataTable.Rows[a]["PART_UNITCOST"].ToString();
                        pDataParameters[8].Value = pDataTable.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(pDataTable.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : pDataTable.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                        pDataParameters[9].Value = pDataTable.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(pDataTable.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : pDataTable.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                        pDataParameters[10].Value = pDataTable.Rows[a]["REMARK"].ToString();
                        pDataParameters[11].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

                        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialVendCostInfoListPopup_I10", pDataParameters);

                        if (pDataTableB.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pucMaterialVendCostInfoListPopupEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                        pucMaterialVendCostInfoListPopupEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ucMaterialVendCostInfoListPopup_Info_Save(ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity, DataTable pDataTable)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장실패
                else
                    _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucMaterialVendCostInfoListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialVendCostInfoListPopupEntity pucMaterialVendCostInfoListPopupEntity = new ucMaterialVendCostInfoListPopupEntity();
                pucMaterialVendCostInfoListPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucMaterialVendCostInfoListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }
    public class MaterialInOutStatusProvider : EntityManager<MaterialInOutStatusEntity>
    {
        #region 생성자 - MaterialInOutStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInOutStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInOutStatusEntity pMaterialInOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialInOutStatusEntity pMaterialInOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialInOutStatusEntity.CRUD;
                pDataParameters[1].Value = pMaterialInOutStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialInOutStatusEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialInOutStatusEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialInOutStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInOutStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialInOutStatusEntity pMaterialInOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialInOutStatusEntity pMaterialInOutStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialInOutStatusEntity pMaterialInOutStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInOutStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialInOutStatusEntity.CRUD;
                pDataParametersA[2].Value = pMaterialInOutStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInOutStatus_I10", pDataParametersA);

                pMaterialInOutStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInOutStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInOutStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialInOutStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialInOutStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialInOutStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialInOutStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialInOutStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialInOutStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialInOutStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialInOutStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialInOutStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialInOutStatusEntity pMaterialInOutStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInOutStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInOutStatusEntity pMaterialInOutStatusEntity = new MaterialInOutStatusEntity();

                pMaterialInOutStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInOutStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInOutStatus_T01Provider : EntityManager<MaterialInOutStatus_T01Entity>
    {
        #region 생성자 - MaterialInOutStatus_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInOutStatus_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),                            
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 10)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 10)                            
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInOutStatus_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialInOutStatus_T01Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialInOutStatus_T01Entity.PART_CODE;
                pDataParameters[3].Value = pMaterialInOutStatus_T01Entity.PART_NAME;
                pDataParameters[4].Value = pMaterialInOutStatus_T01Entity.PART_TYPE;
                pDataParameters[5].Value = pMaterialInOutStatus_T01Entity.VEND_PART_CODE;
                pDataParameters[6].Value = pMaterialInOutStatus_T01Entity.VEND_CODE;
                pDataParameters[7].Value = pMaterialInOutStatus_T01Entity.INOUT_TYPE;
                pDataParameters[8].Value = pMaterialInOutStatus_T01Entity.DATE_FROM;
                pDataParameters[9].Value = pMaterialInOutStatus_T01Entity.DATE_TO;               
                
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInOutStatus_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInOutStatus_T01_Info_Mst(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInOutStatus_T01Entity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialInOutStatus_T01Entity.CRUD;
                pDataParametersA[2].Value = pMaterialInOutStatus_T01Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInOutStatus_T01_I10", pDataParametersA);

                pMaterialInOutStatus_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInOutStatus_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInOutStatus_T01Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialInOutStatus_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialInOutStatus_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialInOutStatus_T01Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialInOutStatus_T01Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialInOutStatus_T01Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialInOutStatus_T01Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialInOutStatus_T01Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialInOutStatus_T01Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialInOutStatus_T01Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialInOutStatus_T01_Info_Filename(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInOutStatus_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInOutStatus_T01_Info_Filename(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInOutStatus_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialInOutStatus_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInOutStatus_T01_Info_Filename(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialInOutStatus_T01Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInOutStatus_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity = new MaterialInOutStatus_T01Entity();

                pMaterialInOutStatus_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInOutStatus_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialInOutStatus_T02Provider : EntityManager<MaterialInOutStatus_T02Entity>
    {
        #region 생성자 - MaterialInOutStatus_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInOutStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialInOutStatus_T02Entity pMaterialInOutStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 10)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 10)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInOutStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pMaterialInOutStatus_T02Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pMaterialInOutStatus_T02Entity.PART_CODE;
                pDataParameters[3].Value = pMaterialInOutStatus_T02Entity.PART_NAME;
                pDataParameters[4].Value = pMaterialInOutStatus_T02Entity.DATE_FROM;
                pDataParameters[5].Value = pMaterialInOutStatus_T02Entity.DATE_TO;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInOutStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInOutStatus_T01_Info_Mst(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInOutStatus_T01Entity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialInOutStatus_T01Entity.CRUD;
                pDataParametersA[2].Value = pMaterialInOutStatus_T01Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInOutStatus_T01_I10", pDataParametersA);

                pMaterialInOutStatus_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInOutStatus_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInOutStatus_T01Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialInOutStatus_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialInOutStatus_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialInOutStatus_T01Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialInOutStatus_T01Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialInOutStatus_T01Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialInOutStatus_T01Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialInOutStatus_T01Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialInOutStatus_T01Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialInOutStatus_T01Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - MaterialInOutStatus_T01_Info_Filename(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInOutStatus_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInOutStatus_T01_Info_Filename(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInOutStatus_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialInOutStatus_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInOutStatus_T01_Info_Filename(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialInOutStatus_T01Entity pMaterialInOutStatus_T01Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pMaterialInOutStatus_T01Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInOutStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInOutStatus_T02Entity pMaterialInOutStatus_T02Entity = new MaterialInOutStatus_T02Entity();

                pMaterialInOutStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInOutStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialCollectAndPayProvider : EntityManager<MaterialCollectAndPayEntity>
    {
        #region 생성자 - MaterialCollectAndPayProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialCollectAndPayProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialCollectAndPayEntity pMaterialCollectAndPayEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialCollectAndPayEntity pMaterialCollectAndPayEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialCollectAndPayEntity.CRUD;
                pDataParameters[1].Value = pMaterialCollectAndPayEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialCollectAndPayEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialCollectAndPayEntity.PART_NAME;
                pDataParameters[4].Value = pMaterialCollectAndPayEntity.PART_CODE;
                pDataParameters[5].Value = pMaterialCollectAndPayEntity.VEND_PART_CODE; 
                pDataParameters[6].Value = pMaterialCollectAndPayEntity.VEND_NAME;
                pDataParameters[7].Value = pMaterialCollectAndPayEntity.PART_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialCollectAndPay_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialCollectAndPayEntity pMaterialCollectAndPayEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialCollectAndPayEntity pMaterialCollectAndPayEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialCollectAndPayEntity pMaterialCollectAndPayEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialCollectAndPayEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialCollectAndPayEntity.CRUD;
                pDataParametersA[2].Value = pMaterialCollectAndPayEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialCollectAndPay_I10", pDataParametersA);

                pMaterialCollectAndPayEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialCollectAndPayEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialCollectAndPayEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialCollectAndPayEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialCollectAndPayEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialCollectAndPayEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialCollectAndPayEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialCollectAndPayEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialCollectAndPayEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialCollectAndPayEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialCollectAndPayEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialCollectAndPayEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialCollectAndPayEntity pMaterialCollectAndPayEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialCollectAndPayEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialCollectAndPayEntity pMaterialCollectAndPayEntity = new MaterialCollectAndPayEntity();

                pMaterialCollectAndPayEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialCollectAndPayEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialCollectAndPay_DetailProvider : EntityManager<MaterialCollectAndPay_DetailEntity>
    {
        #region 생성자 - MaterialCollectAndPay_DetailProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialCollectAndPay_DetailProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialCollectAndPay_DetailEntity.CRUD;
                pDataParameters[1].Value = pMaterialCollectAndPay_DetailEntity.DATE_FROM;
                pDataParameters[2].Value = pMaterialCollectAndPay_DetailEntity.DATE_TO;
                pDataParameters[3].Value = pMaterialCollectAndPay_DetailEntity.PART_CODE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialCollectAndPay_Detail_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialCollectAndPay_DetailEntity.CORP_CODE;
                pDataParametersA[1].Value = pMaterialCollectAndPay_DetailEntity.CRUD;
                pDataParametersA[2].Value = pMaterialCollectAndPay_DetailEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialCollectAndPay_Detail_I10", pDataParametersA);

                pMaterialCollectAndPay_DetailEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialCollectAndPay_DetailEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialCollectAndPay_DetailEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pMaterialCollectAndPay_DetailEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pMaterialCollectAndPay_DetailEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pMaterialCollectAndPay_DetailEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pMaterialCollectAndPay_DetailEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pMaterialCollectAndPay_DetailEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pMaterialCollectAndPay_DetailEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pMaterialCollectAndPay_DetailEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pMaterialCollectAndPay_DetailEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pMaterialCollectAndPay_DetailEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialCollectAndPay_DetailEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialCollectAndPay_DetailEntity pMaterialCollectAndPay_DetailEntity = new MaterialCollectAndPay_DetailEntity();

                pMaterialCollectAndPay_DetailEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialCollectAndPay_DetailEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucMaterialStockInfoPopupProvider : EntityManager<ucMaterialStockInfoPopupEntity>
    {
        #region 생성자 - ucMaterialStockInfoPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialStockInfoPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ucMaterialStockInfoPopupEntity pucMaterialStockInfoPopupEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet ucInspectRequestInfo_Return(string pCRUD, string pPART_CODE,string pPART_NAME)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pPART_CODE;
                pDataParameters[2].Value = pPART_NAME;

                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucMaterialStockInfoPopup_R10", pDataParameters);


                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ucMaterialStockInfoPopupEntity pucMaterialStockInfoPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ucMaterialStockInfoPopup_Save(ucMaterialStockInfoPopupEntity pucMaterialStockInfoPopupEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "U")
                        {
                            if (Convert.ToDecimal(dt.Rows[a]["INPUT_QTY"].ToString()) > 0)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersA = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 10)
                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 10),

                                        };
                                        break;
                                }

                                pDataParametersA[0].Value = pucMaterialStockInfoPopupEntity.CRUD;
                                pDataParametersA[1].Value = pucMaterialStockInfoPopupEntity.USER_CODE;
                                pDataParametersA[2].Value = dt.Rows[a]["INOUT_ID"].ToString().ToUpper();
                                pDataParametersA[3].Value = dt.Rows[a]["INPUT_QTY"].ToString().ToUpper();
                                pDataParametersA[4].Value = "";
                                pDataParametersA[5].Value = "Y";
                                pDataParametersA[6].Value = pucMaterialStockInfoPopupEntity.INOUT_CODE;

                                //pDataParametersA[0].Value = pucMaterialStockInfoPopupEntity.CRUD;
                                //pDataParametersA[1].Value = pucMaterialStockInfoPopupEntity.USER_CODE;
                                //pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                                //pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                                //pDataParametersA[4].Value = DateTime.Now.ToString("yyyyMMdd");


                                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T01_I10", pDataParametersA);

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                pucMaterialStockInfoPopupEntity.ERR_NO = pDataTableA.Rows[0]["p_err_no"].ToString();
                                pucMaterialStockInfoPopupEntity.ERR_MSG = pDataTableA.Rows[0]["p_err_msg"].ToString();
                                pucMaterialStockInfoPopupEntity.RTN_KEY = pDataTableA.Rows[0]["p_rtn_key"].ToString();
                                pucMaterialStockInfoPopupEntity.RTN_SEQ = pDataTableA.Rows[0]["p_rtn_seq"].ToString();
                                pucMaterialStockInfoPopupEntity.RTN_OTHERS = pDataTableA.Rows[0]["p_rtn_others"].ToString();

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ucMaterialStockInfoPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialStockInfoPopupEntity pucMaterialStockInfoPopupEntity = new ucMaterialStockInfoPopupEntity();

                pucMaterialStockInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pucMaterialStockInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucMaterialStockInfoPopup_T01Provider : EntityManager<ucMaterialStockInfoPopup_T01Entity>
    {
        #region 생성자 - ucMaterialStockInfoPopup_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialStockInfoPopup_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ucMaterialStockInfoPopup_T01Entity pucMaterialStockInfoPopup_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegister_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet ucInspectRequeestInfo_Return(string pCRUD, string pPART_CODE, string pPART_NAME)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pPART_CODE;
                pDataParameters[2].Value = pPART_NAME;

                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucMaterialStockInfoPopup_T01_R10", pDataParameters);


                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucInspectRequeestInfo_Return(string pCRUD, string pPART_CODE, string pPART_NAME)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ucMaterialStockInfoPopup_Save(ucMaterialStockInfoPopup_T01Entity pucMaterialStockInfoPopup_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "U")
                        {
                            if (Convert.ToDecimal(dt.Rows[a]["INPUT_QTY"].ToString()) > 0)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersA = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 10),
                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 10),

                                        };
                                        break;
                                }

                                pDataParametersA[0].Value = pucMaterialStockInfoPopup_T01Entity.CRUD;
                                pDataParametersA[1].Value = pucMaterialStockInfoPopup_T01Entity.USER_CODE;
                                pDataParametersA[2].Value = dt.Rows[a]["INOUT_ID"].ToString().ToUpper();
                                pDataParametersA[3].Value = dt.Rows[a]["INPUT_QTY"].ToString().ToUpper();
                                pDataParametersA[4].Value = "";
                                pDataParametersA[5].Value ="Y";
                                pDataParametersA[6].Value = pucMaterialStockInfoPopup_T01Entity.INOUT_CODE;

                                //pDataParametersA[0].Value = pucMaterialStockInfoPopupEntity.CRUD;
                                //pDataParametersA[1].Value = pucMaterialStockInfoPopupEntity.USER_CODE;
                                //pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                                //pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                                //pDataParametersA[4].Value = DateTime.Now.ToString("yyyyMMdd");


                                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T01_I10", pDataParametersA);

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                pucMaterialStockInfoPopup_T01Entity.ERR_NO = pDataTableA.Rows[0]["p_err_no"].ToString();
                                pucMaterialStockInfoPopup_T01Entity.ERR_MSG = pDataTableA.Rows[0]["p_err_msg"].ToString();
                                pucMaterialStockInfoPopup_T01Entity.RTN_KEY = pDataTableA.Rows[0]["p_rtn_key"].ToString();
                                pucMaterialStockInfoPopup_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["p_rtn_seq"].ToString();
                                pucMaterialStockInfoPopup_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["p_rtn_others"].ToString();

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ucMaterialStockInfoPopup_Save(ucMaterialStockInfoPopup_T01Entity pucMaterialStockInfoPopup_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ucMaterialStockInfoPopup_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialStockInfoPopup_T01Entity pucMaterialStockInfoPopup_T01Entity = new ucMaterialStockInfoPopup_T01Entity();

                pucMaterialStockInfoPopup_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pucMaterialStockInfoPopup_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucBOM_SpendQtyCalcPopProvider : EntityManager<ucBOM_SpendQtyCalcPopEntity>
    {
        #region 생성자 - CommonCodeReturnProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucBOM_SpendQtyCalcPopProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 품목코드 정보 조회하기 - ucBOM_SpendQtyCalcPop_Return(string pWINDOW_NAME, string pDEV_GRID_NAME)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pCORP_CD">회사코드</param>
        /// <param name="pWINDOW_NAME">화면 아이디</param>
        /// <param name="pDEV_GRID_NAME">그리드 아이디</param>
        /// <returns>조회 목록</returns>
        public DataSet ucBOM_SpendQtyCalcPop_Main_Return(string pCRUD, string pDATE_FROM, string pDATE_TO , string pPART_TYPE, string pPART_CODE, string pPART_NAME, string pVEND_CODE, string pVEND_NAME, string pLANGUAGE_TYPE)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                           // new MySqlParameter("@v_part_type", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar,100),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar,100),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                           // new SqlParameter("@v_part_type", SqlDbType.NVarChar,50),
                           new SqlParameter("@v_contract_id", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar,100),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar,100),
                            new SqlParameter("@v_language_type",    SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pDATE_FROM;
                pDataParameters[2].Value = pDATE_TO;
                pDataParameters[3].Value = pPART_TYPE;
                pDataParameters[4].Value = pPART_CODE;
                pDataParameters[5].Value = pPART_NAME;
                pDataParameters[6].Value = pVEND_CODE;
                pDataParameters[7].Value = pVEND_NAME;
                pDataParameters[8].Value = pLANGUAGE_TYPE;

                //18.06.21
                //USP_ucBOM_SpendQtyCalcPop_R10 -> USP_ucucBOM_SpendQtyCalcPop_R10
                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        #endregion
        #region 단가별 업체 단가 정보 조회하기 - ucBOM_SpendQtyCalcPop_Return(string pWINDOW_NAME, string pDEV_GRID_NAME)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pCORP_CD">회사코드</param>
        /// <param name="pWINDOW_NAME">화면 아이디</param>
        /// <param name="pDEV_GRID_NAME">그리드 아이디</param>
        /// <returns>조회 목록</returns>
        public DataTable ucBOM_SpendQtyCalcPop_Sub_Return(string pCRUD,string pCONTRACT_ID,string pPART_CODE, string pPART_TYPE,string pLANGUAGE_TYPE, decimal pQTY)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,15),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                            new SqlParameter("@v_contract_id", SqlDbType.NVarChar,15),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_qty", SqlDbType.Decimal),
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pCONTRACT_ID;
                pDataParameters[2].Value = pPART_TYPE;
                pDataParameters[3].Value = pPART_CODE;
                pDataParameters[4].Value = pLANGUAGE_TYPE;
                pDataParameters[5].Value = pQTY;

                //18.06.21
                //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                //BOM조회
                DataTable pDataTableSet = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }

        
        public DataTable ucBOM_SpendQtyCalcPop_Sub_Return(ucBOM_SpendQtyCalcPopEntity _ucBOM_SpendQtyCalcPopEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            DataTable dt_tmp = new DataTable { TableName = "temp" };
            dt_tmp.Columns.AddRange(new DataColumn[] {
                            new DataColumn { ColumnName = "CRUD"            ,Caption = "*",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_TYPE"       ,Caption = "품목구분",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_CODE"       ,Caption = "품목코드",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "CONTRACT_ID"     ,Caption = "수주번호",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "VEND_PART_CODE"  ,Caption = "업체품번",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_NAME"       ,Caption = "품목명",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNIT_CODE"       ,Caption = "단위구분",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNIT_NAME"       ,Caption = "단위",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "UNITCOST"        ,Caption = "단가",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "VEND_CODE"       ,Caption = "업체명",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_QTY"        ,Caption = "수량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "SPEND_QTY"       ,Caption = "소요량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "PART_UNIT_NAME"  ,Caption = "단위2",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "STOCK"           ,Caption = "재고",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "LACK_QTY"        ,Caption = "부족수량",DataType = typeof(string)   }
                          , new DataColumn { ColumnName = "ORDER_QTY"      ,Caption = "발주수량",DataType = typeof(string)   }
                            });

            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            IDataParameter[] pDataParameters = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,15),
                                        new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                                    };
                                    break;

                                case "SQLServer":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_contract_id", SqlDbType.NVarChar,15),
                                        new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_qty", SqlDbType.Decimal),
                                    };
                                    break;
                            }

                            pDataParameters[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                            pDataParameters[1].Value = dt.Rows[a]["CONTRACT_ID"].ToString().ToUpper();//pCONTRACT_ID;
                            pDataParameters[2].Value = dt.Rows[a]["PART_TYPE"].ToString().ToUpper();//pPART_TYPE;
                            pDataParameters[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pPART_CODE;
                            pDataParameters[4].Value = _ucBOM_SpendQtyCalcPopEntity.LANGUAGE_TYPE;//pLANGUAGE_TYPE;
                            pDataParameters[5].Value = dt.Rows[a]["CONTRACT_QTY"].ToString().ToUpper();// pQTY;

                            //18.06.21
                            //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                            //BOM조회
                            DataTable pDataTable;
                            pDataTable = new DataTable();
                           

                            pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_R20", pDataParameters);
                            pDataTable.TableName = "tmp";
                           

                            //DataTable 생성



                            //Columns 생성

                            //합계-통합
                            if (_ucBOM_SpendQtyCalcPopEntity.check_yn)
                            {

                                //쿼리받은 테이블
                                for (int i = 0; i < pDataTable.Rows.Count; i++)
                                {
                                    bool find_yn = false;
                                    //리턴할 테이블
                                    for (int j = 0; j < dt_tmp.Rows.Count; j++)
                                    {
                                        //기존에 품목코드가 있다면 수량 더하기
                                        if (pDataTable.Rows[i]["PART_CODE"].ToString() == dt_tmp.Rows[j]["PART_CODE"].ToString())
                                        {
                                            find_yn = true;

                                            decimal p_spend_qty = 0;
                                            decimal rtn_spend_qty = 0;

                                            decimal p_now_stock = 0;

                                            decimal p_lack_qty = 0;
                                            decimal rtn_lack_qty = 0;


                                            rtn_spend_qty = Convert.ToDecimal(dt_tmp.Rows[j]["SPEND_QTY"]);
                                            p_spend_qty = Convert.ToDecimal(pDataTable.Rows[i]["SPEND_QTY"]);

                                            //현재 재고
                                            p_now_stock = Convert.ToDecimal(pDataTable.Rows[i]["STOCK"]);

                                            //현재재고 - sum(소요량)

                                            p_lack_qty = Convert.ToDecimal(dt_tmp.Rows[j]["LACK_QTY"]);
                                            rtn_lack_qty = Convert.ToDecimal(pDataTable.Rows[i]["LACK_QTY"]);
                                            

                                            //더하기
                                            dt_tmp.Rows[j]["SPEND_QTY"] = Convert.ToString(rtn_spend_qty + p_spend_qty);
                                            //dt_tmp.Rows[j]["LACK_QTY"] = Convert.ToString(p_lack_qty + rtn_lack_qty);\
                                            dt_tmp.Rows[j]["LACK_QTY"] = Convert.ToString(p_now_stock-(rtn_spend_qty + p_spend_qty));

                                        }

                                    }
                                    if (!find_yn)
                                    {

                                        //없다면 신규로 추가
                                        DataRow dr = dt_tmp.NewRow();
                                        // DataRow 생성 및 Column Name을 기준으로 Row 추가하기 (추천)
                                        dr = dt_tmp.NewRow();
                                        dr["CRUD"] = pDataTable.Rows[i]["CRUD"].ToString();
                                        dr["PART_TYPE"] = pDataTable.Rows[i]["PART_TYPE"].ToString();
                                        dr["PART_CODE"] = pDataTable.Rows[i]["PART_CODE"].ToString();
                                        dr["CONTRACT_ID"] = "";// pDataTable.Rows[i]["CONTRACT_ID"].ToString();
                                        dr["VEND_PART_CODE"] = pDataTable.Rows[i]["VEND_PART_CODE"].ToString();
                                        dr["PART_NAME"] = pDataTable.Rows[i]["PART_NAME"].ToString();
                                        dr["UNIT_CODE"] = pDataTable.Rows[i]["UNIT_CODE"].ToString();
                                        dr["UNIT_NAME"] = pDataTable.Rows[i]["UNIT_NAME"].ToString();
                                        dr["UNITCOST"] = pDataTable.Rows[i]["UNITCOST"].ToString();
                                        dr["VEND_CODE"] = pDataTable.Rows[i]["VEND_CODE"].ToString();
                                        dr["PART_QTY"] = pDataTable.Rows[i]["PART_QTY"].ToString();
                                        dr["SPEND_QTY"] = pDataTable.Rows[i]["SPEND_QTY"].ToString();
                                        dr["PART_UNIT_NAME"] = pDataTable.Rows[i]["PART_UNIT_NAME"].ToString();
                                        dr["STOCK"] = pDataTable.Rows[i]["STOCK"].ToString();
                                        dr["LACK_QTY"] = pDataTable.Rows[i]["LACK_QTY"].ToString();
                                        dr["ORDER_QTY"] = pDataTable.Rows[i]["ORDER_QTY"].ToString();
                                        dt_tmp.Rows.Add(dr);
                                    }
                                    find_yn = false;

                                }
                            }
                            //개별
                            else
                            {
                                ds.Merge(pDataTable);
                            }
                            
                            
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}


                        }
                    }

                }
                /*
                //dt.DefaultView.Sort = "index desc";
                if(ds.Tables.Count==0)
                    return null;
                 ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                return ds.Tables[0];
                */
                //dt.DefaultView.Sort = "index desc";
                if (_ucBOM_SpendQtyCalcPopEntity.check_yn)
                {
                    if (dt_tmp.Rows.Count == 0)
                        return null;
                    dt_tmp.DefaultView.Sort = "PART_CODE asc";
                    return dt_tmp;
                }
                else
                {
                    if (ds.Tables.Count == 0)
                        return null;
                    ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                    return ds.Tables[0];
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }

        

        public DataTable ucBOM_SpendQtyCalcPop_Sub_Return2(ucBOM_SpendQtyCalcPopEntity _ucBOM_SpendQtyCalcPopEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            _pDBManager.BeginTransaction(); //Transaction 시작
            DataTable pDataTable2;
            pDataTable2 = new DataTable();
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                   // for (int a = 0; a < pCount; a++)
                   // {
                        //체크된것만 저장
                       // if (dt.Rows[0]["CRUD"].ToString() == "Y")
                        //{
                            IDataParameter[] pDataParameters = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,15),
                                        new MySqlParameter("@v_part_type", MySqlDbType.VarChar,20),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_language_type", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_qty", MySqlDbType.Decimal),

                                    };
                                    break;

                                case "SQLServer":
                                    pDataParameters = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_contract_id", SqlDbType.NVarChar,15),
                                        new SqlParameter("@v_part_type", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_language_type", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_qty", SqlDbType.Decimal),
                                    };
                                    break;
                            }

                            pDataParameters[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                            pDataParameters[1].Value = dt.Rows[0]["CONTRACT_ID"].ToString().ToUpper();//pCONTRACT_ID;
                            pDataParameters[2].Value = dt.Rows[0]["PART_TYPE"].ToString().ToUpper();//pPART_TYPE;
                            pDataParameters[3].Value = dt.Rows[0]["PART_CODE"].ToString().ToUpper();//pPART_CODE;
                            pDataParameters[4].Value = _ucBOM_SpendQtyCalcPopEntity.LANGUAGE_TYPE;//pLANGUAGE_TYPE;
                            pDataParameters[5].Value = dt.Rows[0]["CONTRACT_QTY"].ToString().ToUpper();// pQTY;

                            //18.06.21
                            //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                            //BOM조회
                          


                            pDataTable2 = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_R30", pDataParameters);
                          //  pDataTable.TableName = "tmp";

                            ds.Merge(pDataTable2);
                            //if (pDataTable != null)
                            //{
                            //    GetEntity(pDataTable.Rows[0]);
                            //}


                       // }
                  //  }

                }
                //dt.DefaultView.Sort = "index desc";
                if (ds.Tables.Count == 0)
                    return null;
                /*
                DataTable pTemp;
                pTemp = new DataTable();
                pTemp = ds.Tables[0];
                //pTemp.Compute("Sum(SPEND_QTY)", "PART_CODE='4'");
                //pTemp =ds.Tables[0];
                pTemp = ds.Tables[0].AsEnumerable()
                   .GroupBy(r => r["PART_CODE"])
                   .Select(g =>
                   {
                       var row = ds.Tables[0].NewRow();
                    //   row["CRUD"] =r.Field<int>("Amount 2")
                      // row["PART_TYPE"] = g.Key;
                       row["PART_CODE"] = g.Key;
                       row["CONTRACT_ID"] = g.Key;
                       row["VEND_PART_CODE"] = g.Key;
                       row["PART_NAME"] = g.Key;
                       row["UNIT_CODE"] = g.Key;
                       row["UNIT_NAME"] = g.Key;
                       row["UNITCOST"] = g.Key;
                       row["VEND_CODE"] = g.Key;
                       row["PART_QTY"] = g.Key;
                       row["SPEND_QTY"] = g.Sum(r => (decimal)r["SPEND_QTY"]);      //소요량
                        row["PART_UNIT_NAME"] = g.Key;
                       row["STOCK"] = g.Key;
                       row["LACK_QTY"] = g.Key;
                       row["ORDER_QTY"] = g.Key;
                        // row["LACK_QTY"] = (decimal)row["SPEND_QTY"] - (decimal)row["STOCK"];      //재고
                        //row["Amount 2"] = g.Sum(r => r.Field<int>("Amount 2"));
                        //row["Amount 3"] = g.Sum(r => r.Field<int>("Amount 3"));

                        return row;
                   }).CopyToDataTable();
                */
                /*.
                pTemp = ds.Tables[0].AsEnumerable()
                    .GroupBy(r => r["PART_CODE"])
                    .Select(g =>
                    {
                        var row = ds.Tables[0].NewRow();
                        row["CRUD"] = g.Key;
                        row["PART_TYPE"] = g.Key;
                        row["PART_CODE"] = g.Key;
                        row["CONTRACT_ID"] = g.Key;
                        row["VEND_PART_CODE"] = g.Key;
                        row["PART_NAME"] = g.Key;
                        row["UNIT_CODE"] = g.Key;
                        row["UNIT_NAME"] = g.Key;
                        row["UNITCOST"] = g.Key;
                        row["VEND_CODE"] = g.Key;
                        row["PART_QTY"] = g.Key;
                        row["SPEND_QTY"] = g.Sum(r => (decimal)r["SPEND_QTY"]);      //소요량
                        row["PART_UNIT_NAME"] = g.Key;
                        row["STOCK"] = g.Key;
                        row["LACK_QTY"] = g.Key;
                        row["ORDER_QTY"] = g.Key;
                        // row["LACK_QTY"] = (decimal)row["SPEND_QTY"] - (decimal)row["STOCK"];      //재고
                        //row["Amount 2"] = g.Sum(r => r.Field<int>("Amount 2"));
                        //row["Amount 3"] = g.Sum(r => r.Field<int>("Amount 3"));

                        return row;
                    }).CopyToDataTable();
                    */
                //pTemp.DefaultView.Sort = "PART_CODE asc";
                //return pTemp;
                ds.Tables[0].DefaultView.Sort = "PART_CODE asc";
                return ds.Tables[0];
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ucBOM_SpendQtyCalcPopEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucBOM_SpendQtyCalcPopEntity pucBOM_SpendQtyCalcPopEntity = new ucBOM_SpendQtyCalcPopEntity();

                pucBOM_SpendQtyCalcPopEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pucBOM_SpendQtyCalcPopEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
        public bool ucBOM_SpendQtyCalcPopInfo_Save(ucBOM_SpendQtyCalcPopEntity _ucBOM_SpendQtyCalcPopEntity, DataTable pDataTable)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
                                   //   _pDBManager.BeginTransaction();

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_contract_id           ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_contract_id           ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),

                        };
                        break;
                }
                for (int i = 0; i < pDataTable.Rows.Count; i++)
                {
                    if (pDataTable.Rows[i]["ORDER_QTY"].ToString() != "")
                    {
                        if (Convert.ToDecimal(pDataTable.Rows[i]["ORDER_QTY"].ToString()) > 0)
                        {
                            // pDataParametersA[0].Value = _ucBOM_SpendQtyCalcPopEntity.RESOURCE_CODE;
                            // pDataParametersA[1].Value = _ucBOM_SpendQtyCalcPopEntity.COLLECTION_DATE;
                            // pDataParametersA[2].Value = _ucBOM_SpendQtyCalcPopEntity.PROPERTY_VALUE;
                            // pDataParametersA[3].Value = pDataTable.Rows[i]["BAD_CODE"].ToString();//pucWorkResultPopUp_T01_Entity.CONDITION_CODE;
                            // pDataParametersA[4].Value = Convert.ToDecimal(pDataTable.Rows[i]["PRODUCTION_NG_RESULT"].ToString());// pucWorkResultPopUp_T01_Entity.COLLECTION_VALUE;
                            // pDataParametersA[5].Value = pDataTable.Rows[i]["PART_CODE"].ToString();
                            pDataParametersA[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;
                            pDataParametersA[1].Value = _ucBOM_SpendQtyCalcPopEntity.USER_CODE;
                            pDataParametersA[2].Value = "";
                            pDataParametersA[3].Value = pDataTable.Rows[i]["CONTRACT_ID"].ToString(); ;// _ucBOM_SpendQtyCalcPopEntity.CONTRACT_ID;
                            pDataParametersA[4].Value = _ucBOM_SpendQtyCalcPopEntity.ORDER_DATE.Replace("-", "").ToString();
                            pDataParametersA[5].Value = "";
                            pDataParametersA[6].Value = pDataTable.Rows[i]["VEND_CODE"].ToString();// _ucBOM_SpendQtyCalcPopEntity.VEND_CODE;
                            pDataParametersA[7].Value = pDataTable.Rows[i]["PART_CODE"].ToString();
                            pDataParametersA[8].Value = Convert.ToDecimal(pDataTable.Rows[i]["ORDER_QTY"].ToString());
                            pDataParametersA[9].Value = _ucBOM_SpendQtyCalcPopEntity.REQUEST_DATE.Replace("-", "").ToString();
                            pDataParametersA[10].Value = "";//.REQUEST_LOCATION;
                            pDataParametersA[11].Value = pDataTable.Rows[i]["UNIT_CODE"].ToString();//.UNIT_CODE;
                            pDataParametersA[12].Value = "";// pMaterialOrderRegisterEntity_Request.UNITCODT_CURRENCY_CODE;
                            pDataParametersA[13].Value = Convert.ToDecimal(pDataTable.Rows[i]["UNITCOST"].ToString());//.UNITCOST);
                            pDataParametersA[14].Value = Convert.ToDecimal(pDataTable.Rows[i]["ORDER_QTY"].ToString()) * Convert.ToDecimal(pDataTable.Rows[i]["UNITCOST"].ToString());
                            pDataParametersA[15].Value = "";// pMaterialOrderRegisterEntity_Request.REMARK;
                            pDataParametersA[16].Value = "Y";// pMaterialOrderRegisterEntity_Request.USE_YN;

                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_I10", pDataParametersA);
                            if (pDataTableA.Rows[0]["ERR_NO"].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            else
                            {
                                _ucBOM_SpendQtyCalcPopEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                            }
                        }
                    }
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WorkResultInfo_Save(ucWorkResultPopUp_T01_Entity pucWorkResultPopUp_T01_Entity)",
                    pException
                );
            }
            finally
            {
                // if (pErrorYN)
                //     _pDBManager.RollbackTransaction();  // 저장실패
                // else
                //     _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }
        /*
        public bool ucBOM_SpendQtyCalcPopInfo_Save2(ucBOM_SpendQtyCalcPopEntity _ucBOM_SpendQtyCalcPopEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    //삭제먼저
                    if (_ucBOM_SpendQtyCalcPopEntity.CRUD == "D")
                    {
                        IDataParameter[] pDataParameters1 = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,50)

                                };
                                break;

                            case "SQLServer":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,50)
                                };
                                break;
                        }

                        pDataParameters1[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                        pDataParameters1[1].Value = "";//pCONTRACT_ID;
                        pDataParameters1[2].Value = "";//pCONTRACT_ID;

                        //18.06.21
                        //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                        //BOM조회
                        DataTable pDataTable;
                        pDataTable = new DataTable();


                        pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_I20", pDataParameters1);
                        //pDataTable.TableName = "tmp";

                        if (pDataTable.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {

                        }
                    }
                    else
                    { 
                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            IDataParameter[] pDataParameters2 = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParameters2 = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,50)

                                    };
                                    break;

                                case "SQLServer":
                                    pDataParameters2 = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,50)
                                    };
                                    break;
                            }

                            pDataParameters2[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                            pDataParameters2[1].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pCONTRACT_ID;
                            pDataParameters2[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();//pCONTRACT_ID;

                            //18.06.21
                            //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                            //BOM조회
                            DataTable pDataTable;
                            pDataTable = new DataTable();


                            pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_I20", pDataParameters2);
                            //pDataTable.TableName = "tmp";

                            if (pDataTable.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            else
                            {

                            }

                        }
                    }
                }

                }


            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WorkResultInfo_Save(ucWorkResultPopUp_T01_Entity pucWorkResultPopUp_T01_Entity)",
                    pException
                );
            }
            finally
            {
                // if (pErrorYN)
                //     _pDBManager.RollbackTransaction();  // 저장실패
                // else
                //     _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }
        */
        public bool ucBOM_SpendQtyCalcPopInfo_Save2(ucBOM_SpendQtyCalcPopEntity _ucBOM_SpendQtyCalcPopEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    //삭제먼저
                    if (_ucBOM_SpendQtyCalcPopEntity.CRUD == "D")
                    {
                        IDataParameter[] pDataParameters1 = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,50)

                                };
                                break;

                            case "SQLServer":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_contract_id", SqlDbType.NVarChar,50)
                                };
                                break;
                        }

                        pDataParameters1[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                        pDataParameters1[1].Value = "";//pCONTRACT_ID;
                        pDataParameters1[2].Value = "";//pCONTRACT_ID;

                        //18.06.21
                        //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                        //BOM조회
                        DataTable pDataTable;
                        pDataTable = new DataTable();


                        pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_I20", pDataParameters1);
                        //pDataTable.TableName = "tmp";

                        if (pDataTable.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {

                        }
                    }
                    else
                    {
                        for (int a = 0; a < pCount; a++)
                        {
                            //체크된것만 저장
                            if (dt.Rows[a]["CRUD"].ToString() == "Y")
                            {
                                IDataParameter[] pDataParameters2 = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParameters2 = new IDataParameter[]
                                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_contract_id", MySqlDbType.VarChar,50)

                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParameters2 = new IDataParameter[]
                                        {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_contract_id", SqlDbType.NVarChar,50)
                                        };
                                        break;
                                }

                                pDataParameters2[0].Value = _ucBOM_SpendQtyCalcPopEntity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                                pDataParameters2[1].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pCONTRACT_ID;
                                pDataParameters2[2].Value = dt.Rows[a]["CONTRACT_ID"].ToString().ToUpper();//pCONTRACT_ID;

                                //18.06.21
                                //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                                //BOM조회
                                DataTable pDataTable;
                                pDataTable = new DataTable();


                                pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucBOM_SpendQtyCalcPop_I20", pDataParameters2);
                                //pDataTable.TableName = "tmp";

                                if (pDataTable.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                else
                                {

                                }

                            }
                        }
                    }

                }


            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WorkResultInfo_Save(ucWorkResultPopUp_T01_Entity pucWorkResultPopUp_T01_Entity)",
                    pException
                );
            }
            finally
            {
                // if (pErrorYN)
                //     _pDBManager.RollbackTransaction();  // 저장실패
                // else
                //     _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }
        public bool MaterialOrderRegister_T03INFO_Save2(MaterialOrderRegister_T03Entity _MaterialOrderRegister_T03Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    //삭제먼저
                    if (_MaterialOrderRegister_T03Entity.CRUD == "D")
                    {
                        IDataParameter[] pDataParameters1 = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,50)

                                };
                                break;

                            case "SQLServer":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,50)
                                };
                                break;
                        }

                        pDataParameters1[0].Value = _MaterialOrderRegister_T03Entity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                        pDataParameters1[1].Value = "";//pCONTRACT_ID;
                        pDataParameters1[2].Value = "";//pCONTRACT_ID;

                        //18.06.21
                        //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                        //BOM조회
                        DataTable pDataTable;
                        pDataTable = new DataTable();


                        pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T03_I20", pDataParameters1);
                        //pDataTable.TableName = "tmp";

                        if (pDataTable.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {

                        }
                    }
                    else
                    {
                        for (int a = 0; a < pCount; a++)
                        {
                            //체크된것만 저장
                            if (dt.Rows[a]["CRUD"].ToString() == "Y")
                            {
                                IDataParameter[] pDataParameters2 = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParameters2 = new IDataParameter[]
                                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,50)

                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParameters2 = new IDataParameter[]
                                        {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,50)
                                        };
                                        break;
                                }

                                pDataParameters2[0].Value = _MaterialOrderRegister_T03Entity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                                pDataParameters2[1].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pCONTRACT_ID;
                                pDataParameters2[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();//pCONTRACT_ID;

                                //18.06.21
                                //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                                //BOM조회
                                DataTable pDataTable;
                                pDataTable = new DataTable();


                                 pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T03_I20", pDataParameters2);
                                //pDataTable.TableName = "tmp";

                                if (pDataTable.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                else
                                {

                                }

                            }
                        }
                    }

                }


            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WorkResultInfo_Save(ucWorkResultPopUp_T01_Entity pucWorkResultPopUp_T01_Entity)",
                    pException
                );
            }
            finally
            {
                // if (pErrorYN)
                //     _pDBManager.RollbackTransaction();  // 저장실패
                // else
                //     _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }
        public bool MaterialOrderRegister_T02INFO_Save2(MaterialOrderRegister_T02Entity _MaterialOrderRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            DataSet ds = new DataSet();
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    //삭제먼저
                    if (_MaterialOrderRegister_T02Entity.CRUD == "D")
                    {
                        IDataParameter[] pDataParameters1 = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,50)

                                };
                                break;

                            case "SQLServer":
                                pDataParameters1 = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,50)
                                };
                                break;
                        }

                        pDataParameters1[0].Value = _MaterialOrderRegister_T02Entity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                        pDataParameters1[1].Value = "";//pCONTRACT_ID;
                        pDataParameters1[2].Value = "";//pCONTRACT_ID;

                        //18.06.21
                        //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                        //BOM조회
                        DataTable pDataTable;
                        pDataTable = new DataTable();


                        pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T02_I20", pDataParameters1);
                        //pDataTable.TableName = "tmp";

                        if (pDataTable.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {

                        }
                    }
                    else
                    {
                        for (int a = 0; a < pCount; a++)
                        {
                            //체크된것만 저장
                            if (dt.Rows[a]["CRUD"].ToString() == "Y")
                            {
                                IDataParameter[] pDataParameters2 = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParameters2 = new IDataParameter[]
                                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_order_id", MySqlDbType.VarChar,50)

                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParameters2 = new IDataParameter[]
                                        {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_order_id", SqlDbType.NVarChar,50)
                                        };
                                        break;
                                }

                                pDataParameters2[0].Value = _MaterialOrderRegister_T02Entity.CRUD;// dt.Rows[a]["CRUD"].ToString().ToUpper();// pCRUD;
                                pDataParameters2[1].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();//pCONTRACT_ID;
                                pDataParameters2[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();//pCONTRACT_ID;

                                //18.06.21
                                //USP_ucBOM_SpendQtyCalcPop_R20 -> USP_ucucBOM_SpendQtyCalcPop_R20
                                //BOM조회
                                DataTable pDataTable;
                                pDataTable = new DataTable();


                                pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_T02_I20", pDataParameters2);
                                //pDataTable.TableName = "tmp";

                                if (pDataTable.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                else
                                {

                                }

                            }
                        }
                    }

                }


            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WorkResultInfo_Save(ucWorkResultPopUp_T01_Entity pucWorkResultPopUp_T01_Entity)",
                    pException
                );
            }
            finally
            {
                // if (pErrorYN)
                //     _pDBManager.RollbackTransaction();  // 저장실패
                // else
                //     _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }
    }
    public class ucMaterialPartDocumentListPopupProvider : EntityManager<ucMaterialPartDocumentListPopupEntity>
    {
        #region 생성자 - ucPartDocumentListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialPartDocumentListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 메인 조회하기 ucMaterialPartDocumentListPopup_Info_Main(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity)

        public DataTable ucMaterialPartDocumentListPopup_Info_Main(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)


                };
                        break;
                }

                pDataParameters[0].Value = pucMaterialPartDocumentListPopupEntity.CRUD;
                pDataParameters[1].Value = pucMaterialPartDocumentListPopupEntity.PART_CODE;
                pDataParameters[2].Value = pucMaterialPartDocumentListPopupEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pucMaterialPartDocumentListPopupEntity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialPartDocumentListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucMaterialPartDocumentListPopup_Info_Main(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회하기 ucMaterialPartDocumentListPopup_Info_Sub(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity)

        public DataTable ucMaterialPartDocumentListPopup_Info_Sub(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_document_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_document_ver", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_document_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_document_ver", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pucMaterialPartDocumentListPopupEntity.CRUD;
                pDataParameters[1].Value = pucMaterialPartDocumentListPopupEntity.DOCUMENT_TYPE;
                pDataParameters[2].Value = pucMaterialPartDocumentListPopupEntity.DOCUMENT_NAME;
                pDataParameters[3].Value = pucMaterialPartDocumentListPopupEntity.DOCUMENT_VER;

                pDataParameters[4].Value = pucMaterialPartDocumentListPopupEntity.CONTRACT_ID;
                pDataParameters[5].Value = pucMaterialPartDocumentListPopupEntity.CONTRACT_NUMBER;
                pDataParameters[6].Value = pucMaterialPartDocumentListPopupEntity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialPartDocumentListPopup_R20", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucMaterialPartDocumentListPopup_Info_Sub(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ucMaterialPartDocumentListPopup_Info_Save(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity, DataTable pDataTable)
        public bool ucMaterialPartDocumentListPopup_Info_Save(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity, DataTable pDataTable)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (pDataTable != null)
                {
                    pCount = pDataTable.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 15),
                                        new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_document_id", SqlDbType.NVarChar, 15),
                                        new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;

                        }

                        pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
                        pDataParameters[1].Value = pucMaterialPartDocumentListPopupEntity.USER_CODE;

                        pDataParameters[2].Value = pucMaterialPartDocumentListPopupEntity.PART_CODE;
                        pDataParameters[3].Value = pucMaterialPartDocumentListPopupEntity.PART_REVISION_NO;
                        pDataParameters[4].Value = pDataTable.Rows[a]["DOCUMENT_ID"].ToString();
                        pDataParameters[5].Value = pDataTable.Rows[a]["DOCUMENT_TYPE"].ToString();
                        pDataParameters[6].Value = pDataTable.Rows[a]["REMARK"].ToString();
                        pDataParameters[7].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

                        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialPartDocumentListPopup_I10", pDataParameters);

                        if (pDataTableB.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pucMaterialPartDocumentListPopupEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                        pucMaterialPartDocumentListPopupEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ucMaterialPartDocumentListPopup_Info_Save(ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity, DataTable pDataTable)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장실패
                else
                    _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucMaterialPartDocumentListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialPartDocumentListPopupEntity pucMaterialPartDocumentListPopupEntity = new ucMaterialPartDocumentListPopupEntity();
                pucMaterialPartDocumentListPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucMaterialPartDocumentListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }
    public class ucMaterialContractInfoPopupProvider : EntityManager<ucMaterialContractInfoPopupEntity>
    {
        #region 생성자 - ucMaterialContractInfoPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialContractInfoPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucMaterialContractInfoPopup_Info_Return(ucMaterialContractInfoPopupEntity pucMaterialContractInfoPopupEntity)

        public DataTable ucMaterialContractInfoPopup_Info_Return(ucMaterialContractInfoPopupEntity pucMaterialContractInfoPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_contract_date_from", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_contract_date_to", MySqlDbType.VarChar, 8)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_contract_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_contract_date_to", SqlDbType.NVarChar, 8)
                        };
                        break;
                }

                pDataParameters[0].Value = pucMaterialContractInfoPopupEntity.CRUD;
                pDataParameters[1].Value = pucMaterialContractInfoPopupEntity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pucMaterialContractInfoPopupEntity.CONTRACT_NUMBER;
                pDataParameters[3].Value = pucMaterialContractInfoPopupEntity.CONTRACT_DATE_FROM;
                pDataParameters[4].Value = pucMaterialContractInfoPopupEntity.CONTRACT_DATE_TO;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucContractInfoPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucMaterialContractInfoPopup_Info_Return(ucMaterialContractInfoPopupEntity pucMaterialContractInfoPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucMaterialContractInfoPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialContractInfoPopupEntity pucMaterialContractInfoPopupEntity = new ucMaterialContractInfoPopupEntity();
                pucMaterialContractInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucMaterialContractInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }
    public class WasherTruckRegisterProvider : EntityManager<WasherTruckRegisterEntity>
    {
        #region 생성자 - WasherTruckRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public WasherTruckRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - WasherTruckRegister_Info_Mst(WasherTruckRegisterEntity pWasherTruckRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pWasherTruckRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable WasherTruckRegister_Info_Mst(WasherTruckRegisterEntity pWasherTruckRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_truck_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_truck_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_truck_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_truck_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pWasherTruckRegisterEntity.CRUD;
                pDataParameters[1].Value = pWasherTruckRegisterEntity.USE_YN;
                pDataParameters[2].Value = pWasherTruckRegisterEntity.TRUCK_CODE;
                pDataParameters[3].Value = pWasherTruckRegisterEntity.TRUCK_NAME;
                pDataParameters[4].Value = pWasherTruckRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherTruckRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WasherTruckRegister_Info_Mst(WasherTruckRegisterEntity pWasherTruckRegisterEntity)",
                    pException
                );
            }
        }

        #endregion
        
        #region 정보 저장하기 - WasherTruckRegister_Info_Save(WasherTruckRegisterEntity pWasherTruckRegisterEntity, DataTable dt)
        public bool WasherTruckRegister_Info_Save(WasherTruckRegisterEntity pWasherTruckRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_truck_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_truck_name", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_washer_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_tag_name", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_box_qty", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_box_max", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_truck_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_truck_name", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_washer_standard", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_tag_name", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_box_qty", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_box_max", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pWasherTruckRegisterEntity.CRUD;
                pDataParametersA[1].Value = pWasherTruckRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pWasherTruckRegisterEntity.TRUCK_CODE;
                pDataParametersA[3].Value = pWasherTruckRegisterEntity.TRUCK_NAME;
                pDataParametersA[4].Value = pWasherTruckRegisterEntity.WASHER_STANDARD_CODE;
                pDataParametersA[5].Value = pWasherTruckRegisterEntity.TAG_CODE;
                pDataParametersA[6].Value = pWasherTruckRegisterEntity.BOX_QTY;
                pDataParametersA[7].Value = pWasherTruckRegisterEntity.BOX_MAX;
                pDataParametersA[8].Value = pWasherTruckRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherTruckRegister_I10", pDataParametersA);

                pWasherTruckRegisterEntity.ERR_NO = pDataTableA.Rows[0]["p_err_no"].ToString();
                pWasherTruckRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["p_err_msg"].ToString();
                pWasherTruckRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["p_rtn_key"].ToString();
                pWasherTruckRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["p_rtn_sq"].ToString();
                pWasherTruckRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["p_rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override WasherTruckRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                WasherTruckRegisterEntity pWasherTruckRegisterEntity = new WasherTruckRegisterEntity();

                //pWasherTruckRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pWasherTruckRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class WasherInformationRegisterProvider : EntityManager<WasherInformationRegisterEntity>
    {
        #region 생성자 - WasherInformationRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public WasherInformationRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - WasherInformationRegister_Info_Mst(WasherInformationRegisterEntity pWasherInformationRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pWasherInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable WasherInformationRegister_Info_Mst(WasherInformationRegisterEntity pWasherInformationRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_washer_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_washer_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_washer_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_washer_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pWasherInformationRegisterEntity.CRUD;
                pDataParameters[1].Value = pWasherInformationRegisterEntity.WASHER_CODE;
                pDataParameters[2].Value = pWasherInformationRegisterEntity.WASHER_NAME;
                pDataParameters[3].Value = pWasherInformationRegisterEntity.VEND_PART_CODE;
                pDataParameters[4].Value = pWasherInformationRegisterEntity.USE_YN;
                pDataParameters[5].Value = pWasherInformationRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherInformationRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WasherInformationRegister_Info_Mst(WasherInformationRegisterEntity pWasherInformationRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - WasherInformationRegister_Info_Save(WasherInformationRegisterEntity pWasherInformationRegisterEntity, DataTable dt)
        public bool WasherInformationRegister_Info_Save(WasherInformationRegisterEntity pWasherInformationRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_washer_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_washer_name", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_washer_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_washer_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_washer_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_safe_stock", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_washer_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_washer_name", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_washer_standard", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_washer_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_washer_cost", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_safe_stock", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000)
                        };
                        break;
                }

                pDataParametersA[0].Value = pWasherInformationRegisterEntity.CRUD;
                pDataParametersA[1].Value = pWasherInformationRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pWasherInformationRegisterEntity.WASHER_CODE;
                pDataParametersA[3].Value = pWasherInformationRegisterEntity.WASHER_NAME;
                pDataParametersA[4].Value = pWasherInformationRegisterEntity.WASHER_STANDARD;
                pDataParametersA[5].Value = pWasherInformationRegisterEntity.WASHER_UNIT;
                pDataParametersA[6].Value = pWasherInformationRegisterEntity.VEND_PART_CODE;
                pDataParametersA[7].Value = pWasherInformationRegisterEntity.WASHER_COST;
                pDataParametersA[8].Value = pWasherInformationRegisterEntity.SAFE_STOCK;
                pDataParametersA[9].Value = pWasherInformationRegisterEntity.USE_YN;
                pDataParametersA[10].Value = pWasherInformationRegisterEntity.REMARK;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherInformationRegister_I10", pDataParametersA);

                pWasherInformationRegisterEntity.ERR_NO = pDataTableA.Rows[0]["p_err_no"].ToString();
                pWasherInformationRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["p_err_msg"].ToString();
                pWasherInformationRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["p_rtn_key"].ToString();
                pWasherInformationRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["p_rtn_sq"].ToString();
                pWasherInformationRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["p_rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override WasherInformationRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                WasherInformationRegisterEntity pWasherInformationRegisterEntity = new WasherInformationRegisterEntity();

                //pWasherInformationRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pWasherInformationRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class WasherInRegisterProvider : EntityManager<WasherInRegisterEntity>
    {
        #region 생성자 - WasherInRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public WasherInRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(WasherInRegisterEntity pWasherInRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(WasherInRegisterEntity pWasherInRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_washer_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_washer_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_washer_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_washer_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pWasherInRegisterEntity.CRUD;
                pDataParameters[1].Value = pWasherInRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pWasherInRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pWasherInRegisterEntity.WASHER_CODE;
                pDataParameters[4].Value = pWasherInRegisterEntity.WASHER_NAME;
                pDataParameters[5].Value = pWasherInRegisterEntity.USE_YN;
                pDataParameters[6].Value = pWasherInRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherInRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(WasherInRegisterEntity pWasherInRegisterEntity)",
                    pException
                );
            }
        }

        #endregion
        
        #region 정보 저장하기 - WasherInRegister_Info_Save(WasherInRegisterEntity pWasherInRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool WasherInRegister_Info_Save(WasherInRegisterEntity pWasherInRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_washer_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_washer_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pWasherInRegisterEntity.CRUD;
                pDataParametersA[1].Value = pWasherInRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pWasherInRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pWasherInRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pWasherInRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pWasherInRegisterEntity.INOUT_SEQ;
                pDataParametersA[6].Value = pWasherInRegisterEntity.WASHER_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pWasherInRegisterEntity.INOUT_QTY);
                pDataParametersA[8].Value = pWasherInRegisterEntity.PART_UNIT;
                pDataParametersA[9].Value = Convert.ToDecimal(pWasherInRegisterEntity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pWasherInRegisterEntity.COST);
                pDataParametersA[11].Value = pWasherInRegisterEntity.REFERENCE_ID;
                pDataParametersA[12].Value = pWasherInRegisterEntity.REMARK;
                pDataParametersA[13].Value = pWasherInRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherInRegister_I10", pDataParametersA);

                pWasherInRegisterEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pWasherInRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pWasherInRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pWasherInRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pWasherInRegisterEntity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pWasherInRegisterEntity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pWasherInRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override WasherInRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                WasherInRegisterEntity pWasherInRegisterEntity = new WasherInRegisterEntity();

                pWasherInRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pWasherInRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class WasherOutRegisterProvider : EntityManager<WasherOutRegisterEntity>
    {
        #region 생성자 - WasherOutRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public WasherOutRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(WasherOutRegisterEntity pWasherOutRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Material_In_Mst(WasherOutRegisterEntity pWasherOutRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_washer_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_washer_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_washer_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_washer_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pWasherOutRegisterEntity.CRUD;
                pDataParameters[1].Value = pWasherOutRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pWasherOutRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pWasherOutRegisterEntity.WASHER_CODE;
                pDataParameters[4].Value = pWasherOutRegisterEntity.WASHER_NAME;
                pDataParameters[5].Value = pWasherOutRegisterEntity.USE_YN;
                pDataParameters[6].Value = pWasherOutRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherOutRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(WasherOutRegisterEntity pWasherOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - WasherOutRegister_Info_Save(WasherOutRegisterEntity pWasherOutRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool WasherOutRegister_Info_Save(WasherOutRegisterEntity pWasherOutRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_washer_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_washer_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pWasherOutRegisterEntity.CRUD;
                pDataParametersA[1].Value = pWasherOutRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pWasherOutRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pWasherOutRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pWasherOutRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pWasherOutRegisterEntity.INOUT_SEQ;
                pDataParametersA[6].Value = pWasherOutRegisterEntity.WASHER_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pWasherOutRegisterEntity.INOUT_QTY);
                pDataParametersA[8].Value = pWasherOutRegisterEntity.PART_UNIT;
                pDataParametersA[9].Value = Convert.ToDecimal(pWasherOutRegisterEntity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pWasherOutRegisterEntity.COST);
                pDataParametersA[11].Value = pWasherOutRegisterEntity.REFERENCE_ID;
                pDataParametersA[12].Value = pWasherOutRegisterEntity.REMARK;
                pDataParametersA[13].Value = pWasherOutRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherOutRegister_I10", pDataParametersA);

                pWasherOutRegisterEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pWasherOutRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pWasherOutRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pWasherOutRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pWasherOutRegisterEntity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pWasherOutRegisterEntity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pWasherOutRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override WasherOutRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                WasherOutRegisterEntity pWasherOutRegisterEntity = new WasherOutRegisterEntity();

                pWasherOutRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pWasherOutRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class WasherStockStatusProvider : EntityManager<WasherStockStatusEntity>
    {
        #region 생성자 - WasherStockStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public WasherStockStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(WasherStockStatusEntity pWasherStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(WasherStockStatusEntity pWasherStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pWasherStockStatusEntity.CRUD;
                pDataParameters[1].Value = pWasherStockStatusEntity.LANGUAGE_TYPE;

                //pDataParameters[2].Value = pWasherStockStatusEntity.DATE_FROM;
                //pDataParameters[3].Value = pWasherStockStatusEntity.DATE_TO;
                //pDataParameters[4].Value = pWasherStockStatusEntity.PART_NAME;
                //pDataParameters[5].Value = pWasherStockStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherStockStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WasherStockStatus_Info_Mst(WasherStockStatusEntity pWasherStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(WasherStockStatusEntity pWasherStockStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(WasherStockStatusEntity pWasherStockStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pWasherStockStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pWasherStockStatusEntity.CRUD;
                pDataParametersA[2].Value = pWasherStockStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_WasherStockStatus_I10", pDataParametersA);

                pWasherStockStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pWasherStockStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pWasherStockStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pWasherStockStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pWasherStockStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pWasherStockStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pWasherStockStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pWasherStockStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pWasherStockStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pWasherStockStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pWasherStockStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pWasherStockStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(WasherStockStatusEntity pWasherStockStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - WasherStockStatus_Info_Filename(WasherStockStatusEntity pWasherStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pWasherStockStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable WasherStockStatus_Info_Filename(WasherStockStatusEntity pWasherStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pWasherStockStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pWasherStockStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "WasherStockStatus_Info_Filename(WasherStockStatusEntity pWasherStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(WasherStockStatusEntity pWasherStockStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(WasherStockStatusEntity pWasherStockStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pWasherStockStatusEntity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override WasherStockStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                WasherStockStatusEntity pWasherStockStatusEntity = new WasherStockStatusEntity();

                pWasherStockStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pWasherStockStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucMaterialPartListPopupProvider : EntityManager<ucMaterialPartListPopupEntity>
    {
        #region 생성자 - ucMaterialPartListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialPartListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucMaterialPartListPopup_Info_Return(ucMaterialPartListPopupEntity pucMaterialPartListPopupEntity)

        public DataTable ucMaterialPartListPopup_Info_Return(ucMaterialPartListPopupEntity pucMaterialPartListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pucMaterialPartListPopupEntity.CRUD;
                pDataParameters[1].Value = pucMaterialPartListPopupEntity.VEND_PART_CODE;
                pDataParameters[2].Value = pucMaterialPartListPopupEntity.PART_NAME;
                pDataParameters[3].Value = pucMaterialPartListPopupEntity.PART_REVISION_NO;
                pDataParameters[4].Value = pucMaterialPartListPopupEntity.PART_HIGH;
                pDataParameters[5].Value = pucMaterialPartListPopupEntity.PART_MIDDLE;
                pDataParameters[6].Value = pucMaterialPartListPopupEntity.PART_LOW;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialPartListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucMaterialPartListPopup_Info_Return(ucMaterialPartListPopupEntity pucMaterialPartListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucMaterialPartListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialPartListPopupEntity pucMaterialPartListPopupEntity = new ucMaterialPartListPopupEntity();
                return pucMaterialPartListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }
    public class ucMaterialPartListPopup_T01Provider : EntityManager<ucMaterialPartListPopup_T01Entity>
    {
        #region 생성자 - ucMaterialPartListPopup_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucMaterialPartListPopup_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucMaterialPartListPopup_T01_Info_Return(ucMaterialPartListPopup_T01Entity pucMaterialPartListPopup_T01Entity)

        public DataTable ucMaterialPartListPopup_T01_Info_Return(ucMaterialPartListPopup_T01Entity pucMaterialPartListPopup_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pucMaterialPartListPopup_T01Entity.CRUD;
                pDataParameters[1].Value = pucMaterialPartListPopup_T01Entity.VEND_PART_CODE;
                pDataParameters[2].Value = pucMaterialPartListPopup_T01Entity.PART_NAME;
                pDataParameters[3].Value = pucMaterialPartListPopup_T01Entity.PART_REVISION_NO;
                pDataParameters[4].Value = pucMaterialPartListPopup_T01Entity.PART_HIGH;
                pDataParameters[5].Value = pucMaterialPartListPopup_T01Entity.PART_MIDDLE;
                pDataParameters[6].Value = pucMaterialPartListPopup_T01Entity.PART_LOW;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucMaterialPartListPopup_T01_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucMaterialPartListPopup_T01_Info_Return(ucMaterialPartListPopup_T01Entity pucMaterialPartListPopup_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucMaterialPartListPopup_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucMaterialPartListPopup_T01Entity pucMaterialPartListPopup_T01Entity = new ucMaterialPartListPopup_T01Entity();
                return pucMaterialPartListPopup_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }
    public class ucPartDocumentListPopupProvider : EntityManager<ucPartDocumentListPopupEntity>
    {
        #region 생성자 - ucPartDocumentListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucPartDocumentListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 메인 조회하기 ucPartDocumentListPopup_Info_Main(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_Info_Main(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)


                };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopupEntity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopupEntity.PART_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopupEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pucPartDocumentListPopupEntity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_Info_Main(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회하기 ucPartDocumentListPopup_Info_Sub(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_Info_Sub(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_document_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_document_ver", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_document_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_document_ver", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopupEntity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopupEntity.DOCUMENT_TYPE;
                pDataParameters[2].Value = pucPartDocumentListPopupEntity.DOCUMENT_NAME;
                pDataParameters[3].Value = pucPartDocumentListPopupEntity.DOCUMENT_VER;

                pDataParameters[4].Value = pucPartDocumentListPopupEntity.CONTRACT_ID;
                pDataParameters[5].Value = pucPartDocumentListPopupEntity.CONTRACT_NUMBER;
                pDataParameters[6].Value = pucPartDocumentListPopupEntity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_R20", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_Info_Sub(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ucPartDocumentListPopup_Info_Save(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity, DataTable pDataTable)
        public bool ucPartDocumentListPopup_Info_Save(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity, DataTable pDataTable)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (pDataTable != null)
                {
                    pCount = pDataTable.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 15),
                                        new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_document_id", SqlDbType.NVarChar, 15),
                                        new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;

                        }

                        pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
                        pDataParameters[1].Value = pucPartDocumentListPopupEntity.USER_CODE;

                        pDataParameters[2].Value = pucPartDocumentListPopupEntity.PART_CODE;
                        pDataParameters[3].Value = pucPartDocumentListPopupEntity.PART_REVISION_NO;
                        pDataParameters[4].Value = pDataTable.Rows[a]["DOCUMENT_ID"].ToString();
                        pDataParameters[5].Value = pDataTable.Rows[a]["DOCUMENT_TYPE"].ToString();
                        pDataParameters[6].Value = pDataTable.Rows[a]["REMARK"].ToString();
                        pDataParameters[7].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

                        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_I10", pDataParameters);

                        if (pDataTableB.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pucPartDocumentListPopupEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                        pucPartDocumentListPopupEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_Info_Save(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity, DataTable pDataTable)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장실패
                else
                    _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucPartDocumentListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity = new ucPartDocumentListPopupEntity();
                pucPartDocumentListPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucPartDocumentListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }
    public class ucPartDocumentListPopup_T02Provider : EntityManager<ucPartDocumentListPopup_T02Entity>
    {
        #region 생성자 - ucPartDocumentListPopup_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucPartDocumentListPopup_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 메인 조회하기 ucPartDocumentListPopup_T02_Info_Main(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_T02_Info_Main(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),


                };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopup_T02Entity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopup_T02Entity.PART_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopup_T02Entity.PART_NAME;
                pDataParameters[3].Value = pucPartDocumentListPopup_T02Entity.VEND_PART_CODE;
                pDataParameters[4].Value = pucPartDocumentListPopup_T02Entity.USE_YN;
                //pDataParameters[3].Value = pucPartDocumentListPopup_T02Entity.USE_YN;
                pDataParameters[5].Value = pucPartDocumentListPopup_T02Entity.PART_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T02_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_T02_Info_Main(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회하기 ucPartDocumentListPopup_T02_Info_Sub(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_T02_Info_Sub(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                            //new MySqlParameter("@v_document_name", MySqlDbType.VarChar, 100),
                            //new MySqlParameter("@v_document_ver", MySqlDbType.VarChar, 10),
                            //new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                            //new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                            //new SqlParameter("@v_document_name", SqlDbType.NVarChar, 100),
                            //new SqlParameter("@v_document_ver", SqlDbType.NVarChar, 10),
                            //new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                            //new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopup_T02Entity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopup_T02Entity.PART_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE;
                //pDataParameters[2].Value = pucPartDocumentListPopup_T02Entity.DOCUMENT_NAME;
                //pDataParameters[3].Value = pucPartDocumentListPopup_T02Entity.DOCUMENT_VER;

                //pDataParameters[4].Value = pucPartDocumentListPopup_T02Entity.CONTRACT_ID;
                //pDataParameters[5].Value = pucPartDocumentListPopup_T02Entity.CONTRACT_NUMBER;
                pDataParameters[3].Value = pucPartDocumentListPopup_T02Entity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T02_R20", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_T02_Info_Sub(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        //#region 정보 저장하기 - ucPartDocumentListPopup_T02_Info_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity, DataTable pDataTable)
        //public bool ucPartDocumentListPopup_T02_Info_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity, DataTable pDataTable)
        //{
        //    bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
        //    int pCount = 0;
        //    _pDBManager.BeginTransaction();

        //    try
        //    {
        //        if (pDataTable != null)
        //        {
        //            pCount = pDataTable.Rows.Count;

        //            for (int a = 0; a < pCount; a++)
        //            {
        //                IDataParameter[] pDataParameters = null;

        //                switch (_pDBManager.DBManagerType.ToString())
        //                {
        //                    case "MySql":
        //                        pDataParameters = new IDataParameter[]
        //                        {
        //                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
        //                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
        //                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
        //                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
        //                                new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 15),
        //                                new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
        //                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
        //                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
        //                        };
        //                        break;

        //                    case "SQLServer":
        //                        pDataParameters = new IDataParameter[]
        //                        {
        //                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
        //                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
        //                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
        //                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
        //                                new SqlParameter("@v_document_id", SqlDbType.NVarChar, 15),
        //                                new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
        //                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
        //                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
        //                        };
        //                        break;

        //                }

        //                pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
        //                pDataParameters[1].Value = pucPartDocumentListPopup_T02Entity.USER_CODE;

        //                pDataParameters[2].Value = pucPartDocumentListPopup_T02Entity.PART_CODE;
        //                pDataParameters[3].Value = pucPartDocumentListPopup_T02Entity.PART_REVISION_NO;
        //                pDataParameters[4].Value = pDataTable.Rows[a]["DOCUMENT_ID"].ToString();
        //                pDataParameters[5].Value = pDataTable.Rows[a]["DOCUMENT_TYPE"].ToString();
        //                pDataParameters[6].Value = pDataTable.Rows[a]["REMARK"].ToString();
        //                pDataParameters[7].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

        //                DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T02_I10", pDataParameters);

        //                if (pDataTableB.Rows[0][0].ToString() != "00")
        //                {
        //                    pErrorYN = true;
        //                }

        //                pucPartDocumentListPopup_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
        //                pucPartDocumentListPopup_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

        //            }
        //        }
        //    }
        //    catch (ExceptionManager pExceptionManager)
        //    {
        //        pErrorYN = true;

        //        throw pExceptionManager;
        //    }
        //    catch (Exception pException)
        //    {
        //        pErrorYN = true;

        //        throw new ExceptionManager
        //        (
        //            this,
        //            "ucPartDocumentListPopup_T02_Info_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity, DataTable pDataTable)",
        //            pException
        //        );
        //    }
        //    finally
        //    {
        //        if (pErrorYN)
        //            _pDBManager.RollbackTransaction();  // 저장실패
        //        else
        //            _pDBManager.CommitTransaction();
        //    }

        //    return pErrorYN;
        //}

        //#endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucPartDocumentListPopup_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity = new ucPartDocumentListPopup_T02Entity();
                pucPartDocumentListPopup_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucPartDocumentListPopup_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion

        #region 정보 저장하기 - Document_Info_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pucPartDocumentListPopup_T02Entity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Document_Info_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {

                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_seq", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_file_name_1", MySqlDbType.VarChar, 500),
                                new MySqlParameter("@v_file_name_2", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_extension", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000)

                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {

                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_document_id", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_seq", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_file_name_1", SqlDbType.NVarChar, 500),
                                new SqlParameter("@v_file_name_2", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_extension", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000)

                                };
                                break;
                        }


                        pDataParameters[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();

                        pDataParameters[1].Value = pucPartDocumentListPopup_T02Entity.USER_CODE;
                        pDataParameters[2].Value = CoFAS_ConvertManager.StringEmpty2DbNull(dt.Rows[a]["DOCUMENT_ID"].ToString().ToUpper());
                        pDataParameters[3].Value = dt.Rows[a]["DOCUMENT_TYPE"].ToString();
                        pDataParameters[4].Value = dt.Rows[a]["PART_CODE"].ToString();
                        pDataParameters[5].Value = CoFAS_ConvertManager.StringEmpty2DbNull(dt.Rows[a]["SEQ"].ToString());
                        pDataParameters[6].Value = dt.Rows[a]["FILE_NAME_1"].ToString();
                        pDataParameters[7].Value = dt.Rows[a]["DOCUMENT_ID"].ToString().ToUpper() + dt.Rows[a]["EXTENSION"].ToString();//dt.Rows[a]["FILE_NAME_2"].ToString();
                        pDataParameters[8].Value = dt.Rows[a]["EXTENSION"].ToString();
                        pDataParameters[9].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper();
                        pDataParameters[10].Value = dt.Rows[a]["REMARK"].ToString();


                        //pDataParameters[4].Value = CoFAS_ConvertManager.StringEmpty2DbNull(dt.Rows[a]["SEQ"].ToString());
                        //pDataParameters[5].Value = dt.Rows[a]["DOCUMENT_NAME"].ToString();
                        //pDataParameters[6].Value = dt.Rows[a]["DOCUMENT_VER"].ToString();
                        //pDataParameters[7].Value = dt.Rows[a]["DOCUMENT_FILE_NAME"].ToString();
                        //pDataParameters[8].Value = dt.Rows[a]["CONTRACT_ID"].ToString();
                        //pDataParameters[9].Value = dt.Rows[a]["REMARK"].ToString();
                        //pDataParameters[10].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper();                   

                        DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T02_I10", pDataParameters);

                        if (pDataTable.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {
                            pucPartDocumentListPopup_T02Entity.CRUD = dt.Rows[a]["CRUD"].ToString().ToUpper();


                            //pucPartDocumentListPopup_T02Entity.DOCUMENT_BEFROE_FILE_NAME = dt.Rows[a]["FILE_NAME_1"].ToString(); //dt.Rows[a]["DOCUMENT_BEFROE_FILE_NAME"].ToString();
                            if (pucPartDocumentListPopup_T02Entity.CRUD == "U")
                            {
                                pucPartDocumentListPopup_T02Entity.FILE_NAME_2 = dt.Rows[a]["PART_CODE"].ToString() + dt.Rows[a]["SEQ"].ToString() + dt.Rows[a]["EXTENSION"].ToString();
                            }

                            else
                            {
                                pucPartDocumentListPopup_T02Entity.FILE_NAME_2 = dt.Rows[a]["PART_CODE"].ToString() + pDataTable.Rows[0]["rtn_seq"].ToString() + dt.Rows[a]["EXTENSION"].ToString();
                            }

                            pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL = dt.Rows[a]["DIRECTORY"].ToString() + "\\" + dt.Rows[a]["FILE_NAME_1"].ToString();
                            //pucPartDocumentListPopup_T02Entity.
                            pErrorYN = File_Save(pucPartDocumentListPopup_T02Entity) == 0 ? false : true;
                        }

                        pucPartDocumentListPopup_T02Entity.ERR_NO = pDataTable.Rows[0]["ERR_NO"].ToString();
                        pucPartDocumentListPopup_T02Entity.ERR_MSG = pDataTable.Rows[0]["ERR_MSG"].ToString();
                        pucPartDocumentListPopup_T02Entity.RTN_KEY = pDataTable.Rows[0]["RTN_KEY"].ToString();
                        pucPartDocumentListPopup_T02Entity.RTN_SEQ = pDataTable.Rows[0]["RTN_SEQ"].ToString();
                        pucPartDocumentListPopup_T02Entity.RTN_OTHERS = pDataTable.Rows[0]["RTN_OTHERS"].ToString();
                    }



                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Document_Info_Save(UcPartDocumentListPopup_T02Entity pUcPartDocumentListPopup_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN == true)
                    _pDBManager.RollbackTransaction();
                else
                    _pDBManager.CommitTransaction();

            }

            return pErrorYN;
        }

        #endregion

        #region OPENBUTTON으로 파일,파일명 삭제 - Document_File_Delete(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Document_File_Delete(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_seq", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_file_name_1", MySqlDbType.VarChar, 500),
                                new MySqlParameter("@v_file_name_2", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_extension", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_document_id", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_seq", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_file_name_1", SqlDbType.NVarChar, 500),
                                new SqlParameter("@v_file_name_2", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_extension", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000)
                        };
                        break;
                }


                pDataParameters[0].Value = pucPartDocumentListPopup_T02Entity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopup_T02Entity.USER_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopup_T02Entity.DOCUMENT_ID;
                pDataParameters[3].Value = pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE;
                pDataParameters[4].Value = pucPartDocumentListPopup_T02Entity.PART_CODE;
                pDataParameters[5].Value = pucPartDocumentListPopup_T02Entity.SEQ;
                pDataParameters[6].Value = pucPartDocumentListPopup_T02Entity.FILE_NAME_1;
                pDataParameters[7].Value = pucPartDocumentListPopup_T02Entity.FILE_NAME_2;
                pDataParameters[8].Value = pucPartDocumentListPopup_T02Entity.EXTENSION;
                pDataParameters[9].Value = pucPartDocumentListPopup_T02Entity.USE_YN;
                pDataParameters[10].Value = pucPartDocumentListPopup_T02Entity.REMARK;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T02_I10", pDataParameters);

                if (pDataTable.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

                pucPartDocumentListPopup_T02Entity.ERR_NO = pDataTable.Rows[0]["ERR_NO"].ToString();
                pucPartDocumentListPopup_T02Entity.ERR_MSG = pDataTable.Rows[0]["ERR_MSG"].ToString();
                pucPartDocumentListPopup_T02Entity.RTN_KEY = pDataTable.Rows[0]["RTN_KEY"].ToString();
                pucPartDocumentListPopup_T02Entity.RTN_SEQ = pDataTable.Rows[0]["RTN_SEQ"].ToString();
                pucPartDocumentListPopup_T02Entity.RTN_OTHERS = pDataTable.Rows[0]["RTN_OTHERS"].ToString();

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Document_File_Delete(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region ○ 파일 저장 - File_Save(string qFileName, string qFullFileName, string qBEFROE_FILENAME)
        private int File_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)//,  string qFileName, string qFullFileName, string qBEFROE_FILENAME)
        {
            try
            {
                if (pucPartDocumentListPopup_T02Entity.FILE_FLAG != "F")
                {

                    return 0;
                }
                // return 값
                // 1 : FileName == ""
                // 2 : FTP 연결 확인
                // 0 : 정상

                string strFTP_PATH = "";

                if (pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL == "") return 1;

                //byte[] data = CoFAS_ConvertManager.GetFileData(pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL);                
                //strFTP_PATH = string.Format(@"{0}{1}/", pucPartDocumentListPopup_T02Entity.FTP_PATH, "FILE_DATA");

                if (pucPartDocumentListPopup_T02Entity.CRUD == "C" && pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL != null) // 저장, 추가 생성
                {
                    byte[] data = CoFAS_ConvertManager.GetFileData(pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL);
                    strFTP_PATH = string.Format(@"{0}{1}/", pucPartDocumentListPopup_T02Entity.FTP_PATH, "FILE_DATA");

                    //if (CoFAS_FTPManager.FTPUpload_DataofByte_CheckDirectory(pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME, pDocumentInfoRegisterEntity.FTP_ID, pDocumentInfoRegisterEntity.FTP_PW, strFTP_PATH, pDocumentInfoRegisterEntity.DOCUMENT_TYPE, data)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                    if (CoFAS_FTPManager.FTPUpload_DataofStream_CheckDirectory(pucPartDocumentListPopup_T02Entity.FILE_NAME_2, pucPartDocumentListPopup_T02Entity.FTP_ID, pucPartDocumentListPopup_T02Entity.FTP_PW, strFTP_PATH, pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE, data, pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                    {
                        //CoFAS_DevExpressManager.ShowInformationMessage("저장 되었습니다.");
                        //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_SAVE);
                    }
                    else
                    {
                        //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                        //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                        return 2;
                    }
                }
                else if (pucPartDocumentListPopup_T02Entity.CRUD == "U" || pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL == null) // 업데이트
                {
                    byte[] data = CoFAS_ConvertManager.GetFileData(pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL);
                    strFTP_PATH = string.Format(@"{0}{1}/", pucPartDocumentListPopup_T02Entity.FTP_PATH, "FILE_DATA");

                    //업데이트는, 이전파일명으로 삭제하기
                    //qFileName -> _pFTP_BEFROE_FILENAME
                    //if (CoFAS_FTPManager.FTPDelete(qFileName, strFTP_PATH + _pSheetInfoRegisterEntity.WINDOW_NAME + "/", _pFTP_ID, _pFTP_PW))
                    CoFAS_FTPUtilManager qFTPUtil = new CoFAS_FTPUtilManager(strFTP_PATH + pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE + "/", pucPartDocumentListPopup_T02Entity.FTP_ID, pucPartDocumentListPopup_T02Entity.FTP_PW);

                    // if (pucPartDocumentListPopup_T02Entity.DOCUMENT_BEFROE_FILE_NAME == "") return 1;

                    if (CoFAS_FTPManager.FTPDelete(pucPartDocumentListPopup_T02Entity.FILE_NAME_2, strFTP_PATH + pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE + "/", pucPartDocumentListPopup_T02Entity.FTP_ID, pucPartDocumentListPopup_T02Entity.FTP_PW))
                    {
                        //if (CoFAS_FTPManager.FTPUpload_DataofByte_CheckDirectory_Encoding(pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME, pDocumentInfoRegisterEntity.FTP_ID, pDocumentInfoRegisterEntity.FTP_PW, strFTP_PATH, "DATA", data, pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        if (CoFAS_FTPManager.FTPUpload_DataofStream_CheckDirectory_Encoding(pucPartDocumentListPopup_T02Entity.FILE_NAME_2, pucPartDocumentListPopup_T02Entity.FTP_ID, pucPartDocumentListPopup_T02Entity.FTP_PW, strFTP_PATH, pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE, data, pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        {
                            //oFAS_DevExpressManager.ShowInformationMessage("수정 되었습니다.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_SAVE);
                        }

                        else
                        {
                            //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                            return 2;
                        }
                    }
                    //파일이 없는지 체크
                    else if (!qFTPUtil.IsFTPFileExsit(strFTP_PATH + pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE + "/" + pucPartDocumentListPopup_T02Entity.FILE_NAME_2))
                    {
                        //정상 처리

                        //if (CoFAS_FTPManager.FTPUpload_DataofByte_CheckDirectory_Encoding(pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME, pDocumentInfoRegisterEntity.FTP_ID, pDocumentInfoRegisterEntity.FTP_PW, strFTP_PATH, "DATA", data, pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        if (CoFAS_FTPManager.FTPUpload_DataofStream_CheckDirectory_Encoding(pucPartDocumentListPopup_T02Entity.FILE_NAME_2, pucPartDocumentListPopup_T02Entity.FTP_ID, pucPartDocumentListPopup_T02Entity.FTP_PW, strFTP_PATH, pucPartDocumentListPopup_T02Entity.DOCUMENT_TYPE, data, pucPartDocumentListPopup_T02Entity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        {
                            //CoFAS_DevExpressManager.ShowInformationMessage("수정 되었습니다.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_SAVE);
                        }
                        else
                        {
                            //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                            return 2;
                        }
                    }
                    else
                    {
                        //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                        //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                        return 2;
                    }

                }

            }
            //catch (ExceptionManager pExceptionManager)
            //{
            //    CoFAS_DevExpressManager.ShowErrorMessage(string.Format("{0}\n{1}", pExceptionManager.Exception.Message.ToString(), pExceptionManager.TargetSite.ToString()));
            //}
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "File_Save(ucPartDocumentListPopup_T02Entity pucPartDocumentListPopup_T02Entity)",
                    pException
                );
            }
            finally
            {
                pucPartDocumentListPopup_T02Entity.FILE_FLAG = "";

            }

            return 0;
        }
        #endregion

    }
    public class MaterialInformationRegister_T03Provider : EntityManager<MaterialInformationRegister_T03Entity>
    {
        #region 생성자 - MaterialInformationRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public MaterialInformationRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - MaterialInformationRegister_T03_Info_Mst(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMaterialInformationRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_T03_Info_Mst(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegister_T03Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegister_T03Entity.PART_NAME;
                pDataParameters[4].Value = pMaterialInformationRegister_T03Entity.PART_TYPE;
                pDataParameters[5].Value = pMaterialInformationRegister_T03Entity.VEND_PART_CODE;
                pDataParameters[6].Value = pMaterialInformationRegister_T03Entity.USE_YN;
                pDataParameters[7].Value = pMaterialInformationRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T03_Info_Mst(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - MaterialInformationRegister_T03_Info_Sub(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable MaterialInformationRegister_T03_Info_Sub(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMaterialInformationRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pMaterialInformationRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pMaterialInformationRegister_T03Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pMaterialInformationRegister_T03Entity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T03_Info_Sub(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialInformationRegister_T03_Info_Save(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialInformationRegister_T03_Info_Save(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_allergy_check", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_expiration_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_pdf_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 10),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_allergy_check", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_expiration_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_pdf_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pMaterialInformationRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pMaterialInformationRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialInformationRegister_T03Entity.PART_TYPE;
                pDataParametersA[3].Value = pMaterialInformationRegister_T03Entity.ALLERGY_CHECK;
                pDataParametersA[4].Value = pMaterialInformationRegister_T03Entity.PART_NAME;
                pDataParametersA[5].Value = pMaterialInformationRegister_T03Entity.PART_CODE;
                pDataParametersA[6].Value = pMaterialInformationRegister_T03Entity.PART_REVISION_NO;
                pDataParametersA[7].Value = pMaterialInformationRegister_T03Entity.VEND_PART_CODE;
                pDataParametersA[8].Value = pMaterialInformationRegister_T03Entity.PART_UNIT;
                pDataParametersA[9].Value = pMaterialInformationRegister_T03Entity.PART_STANDARD;
                pDataParametersA[10].Value = pMaterialInformationRegister_T03Entity.PART_MANUFACTURER;
                pDataParametersA[11].Value = pMaterialInformationRegister_T03Entity.PART_COST;
                pDataParametersA[12].Value = pMaterialInformationRegister_T03Entity.PART_SAFE_STOCK;
                pDataParametersA[13].Value = pMaterialInformationRegister_T03Entity.PART_START_DATE;
                pDataParametersA[14].Value = pMaterialInformationRegister_T03Entity.PART_END_DATE;
                pDataParametersA[15].Value = pMaterialInformationRegister_T03Entity.EXPIRATION_DATE;
                pDataParametersA[16].Value = pMaterialInformationRegister_T03Entity.SALE_YN;
                pDataParametersA[17].Value = pMaterialInformationRegister_T03Entity.PURC_YN;
                pDataParametersA[18].Value = pMaterialInformationRegister_T03Entity.OUTT_YN;
                pDataParametersA[19].Value = pMaterialInformationRegister_T03Entity.REMARK;
                pDataParametersA[20].Value = pMaterialInformationRegister_T03Entity.PART_PDF_NAME;
                pDataParametersA[21].Value = pMaterialInformationRegister_T03Entity.USE_YN;
                pDataParametersA[22].Value = pMaterialInformationRegister_T03Entity.PART_UNITCOST_CURRENCY_CODE;
                
                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialInformation_T01_I10", pDataParametersA);

                pMaterialInformationRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pMaterialInformationRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pMaterialInformationRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pMaterialInformationRegister_T03Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pMaterialInformationRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pMaterialInformationRegister_T03Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pMaterialInformationRegister_T03Entity.PART_CODE = pMaterialInformationRegister_T03Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pMaterialInformationRegister_T03Entity.USER_CODE;

                            pDataParametersB[2].Value = pMaterialInformationRegister_T03Entity.PART_CODE;
                            pDataParametersB[3].Value = pMaterialInformationRegister_T03Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pMaterialInformationRegister_T03Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pMaterialInformationRegister_T03Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pMaterialInformationRegister_T03Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pMaterialInformationRegister_T03Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pMaterialInformationRegister_T03Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInformationRegister_T03_Info_Save(MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override MaterialInformationRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialInformationRegister_T03Entity pMaterialInformationRegister_T03Entity = new MaterialInformationRegister_T03Entity();

                //pMaterialInformationRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pMaterialInformationRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class MaterialOrderRegister_T01Provider : EntityManager<MaterialOrderRegister_T01Entity>
    {
        public MaterialOrderRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #region 개체 구하기 - GetEntity(pDataRow)

        public override MaterialOrderRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity = new MaterialOrderRegister_T01Entity();

                pMaterialOrderRegister_T01Entity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pMaterialOrderRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        public DataTable MaterialOrderRegister_T01_R10(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_REFERENCE_ID".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code   ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_REFERENCE_ID".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_vend_part_code   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pMaterialOrderRegister_T01Entity.DATE_FROM;
                pDataParameters[2].Value = pMaterialOrderRegister_T01Entity.DATE_TO;
                pDataParameters[3].Value = pMaterialOrderRegister_T01Entity.ORDER_ID;
                pDataParameters[4].Value = pMaterialOrderRegister_T01Entity.REFERENCE_ID;
                pDataParameters[5].Value = pMaterialOrderRegister_T01Entity.USE_YN;
                pDataParameters[6].Value = pMaterialOrderRegister_T01Entity.VEND_CODE;
                pDataParameters[7].Value = pMaterialOrderRegister_T01Entity.VEND_NAME;
                pDataParameters[8].Value = pMaterialOrderRegister_T01Entity.PART_CODE;
                pDataParameters[9].Value = pMaterialOrderRegister_T01Entity.PART_NAME;
                pDataParameters[10].Value = pMaterialOrderRegister_T01Entity.VEND_PART_CDOE;
                pDataParameters[11].Value = pMaterialOrderRegister_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T01_R10(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)",
                    pException
                );
            }
        }
        public DataTable MaterialOrderRegister_T01_R20(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pMaterialOrderRegister_T01Entity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T01_R20(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pMaterialOrderRegister_T01Entity.VEND_CODE;
                pDataParameters[2].Value = pMaterialOrderRegister_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R30", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_Sheet_Data(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;

                }

                pDataParameters[0].Value = pMaterialOrderRegister_T01Entity.VEND_CODE;
                pDataParameters[1].Value = pMaterialOrderRegister_T01Entity.ORDER_ID;
                pDataParameters[2].Value = pMaterialOrderRegister_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)",
                    pException
                );
            }
        }
        #endregion

        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(MaterialOrderRegister_T01Entity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(MaterialOrderRegister_T01Entity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_T01_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool MaterialOrderRegister_T01_Info_Save(MaterialOrderRegister_T01Entity pMaterialOrderRegister_T01Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_contract_id           ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_contract_id           ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),

                        };
                        break;
                }
                pDataParametersA[0].Value = pMaterialOrderRegister_T01Entity.CRUD;
                pDataParametersA[1].Value = pMaterialOrderRegister_T01Entity.USER_CODE;
                pDataParametersA[2].Value = pMaterialOrderRegister_T01Entity.ORDER_ID;
                pDataParametersA[3].Value = pMaterialOrderRegister_T01Entity.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value = pMaterialOrderRegister_T01Entity.ORDER_SEQ;
                pDataParametersA[5].Value = pMaterialOrderRegister_T01Entity.VEND_CODE;
                pDataParametersA[6].Value = pMaterialOrderRegister_T01Entity.PART_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pMaterialOrderRegister_T01Entity.ORDER_QTY);
                pDataParametersA[8].Value = pMaterialOrderRegister_T01Entity.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value = pMaterialOrderRegister_T01Entity.REQUEST_LOCATION;
                pDataParametersA[10].Value = pMaterialOrderRegister_T01Entity.UNIT_CODE;
                pDataParametersA[11].Value = pMaterialOrderRegister_T01Entity.UNITCODT_CURRENCY_CODE;
                pDataParametersA[12].Value = Convert.ToDecimal(pMaterialOrderRegister_T01Entity.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pMaterialOrderRegister_T01Entity.COST);
                pDataParametersA[14].Value = pMaterialOrderRegister_T01Entity.CONTRACT_ID;
                pDataParametersA[15].Value = pMaterialOrderRegister_T01Entity.REMARK;
                pDataParametersA[16].Value = pMaterialOrderRegister_T01Entity.USE_YN;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOrderRegister_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pMaterialOrderRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pMaterialOrderRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pMaterialOrderRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pMaterialOrderRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pMaterialOrderRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_T01_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegister_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }
    public class frmRiskMaterialInfoRegisterProvider : EntityManager<frmRiskMaterialInfoRegisterEntity>
    {
        #region 생성자 - frmCategorySensorSettingsProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public frmRiskMaterialInfoRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - frmRiskMaterialInfoRegister_Info(frmRiskMaterialInfoRegisterEntity pfrmRiskMaterialInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pfrmCategorySensorSettingsEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable frmRiskMaterialInfoRegister_Info(frmRiskMaterialInfoRegisterEntity pfrmRiskMaterialInfoRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                            //new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10)


                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50)
                           // new SqlParameter("@v_part_revision_no", SqlDbType.VarChar, 10)
                        };
                        break;
                }

                pDataParameters[0].Value = pfrmRiskMaterialInfoRegisterEntity.CRUD;
                pDataParameters[1].Value = pfrmRiskMaterialInfoRegisterEntity.PART_CODE;
                //pDataParameters[2].Value = pfrmRiskMaterialInfoRegisterEntity.PART_REVISION_NO;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_frmRiskMaterialInfoRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "frmCategorySensorSettings_Info(frmCategorySensorSettingsEntity pfrmCategorySensorSettingsEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - frmRiskMaterialInfoRegister_Info_Save(frmRiskMaterialInfoRegisterEntity pfrmRiskMaterialInfoRegisterEntity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="frmRiskMaterialInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool frmRiskMaterialInfoRegister_Info_Save(frmRiskMaterialInfoRegisterEntity pfrmRiskMaterialInfoRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_dangerous_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_properties", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_severity_rating", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_designated_quantity", MySqlDbType.Decimal),
                                new MySqlParameter("@v_designated_quantity_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_storage_management_plan", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_dangerous_type", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_properties", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_severity_rating", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_designated_quantity", SqlDbType.Decimal),
                                new SqlParameter("@v_designated_quantity_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_storage_management_plan", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pfrmRiskMaterialInfoRegisterEntity.CRUD;
                pDataParameters[1].Value = pfrmRiskMaterialInfoRegisterEntity.USER_CODE;
                pDataParameters[2].Value = pfrmRiskMaterialInfoRegisterEntity.PART_CODE;
                pDataParameters[3].Value = pfrmRiskMaterialInfoRegisterEntity.DANGEROUS_TYPE;
                pDataParameters[4].Value = pfrmRiskMaterialInfoRegisterEntity.PROPERTIES;
                pDataParameters[5].Value = pfrmRiskMaterialInfoRegisterEntity.SEVERITY_RATING;
                pDataParameters[6].Value = pfrmRiskMaterialInfoRegisterEntity.DESIGNATED_QUANTITY;
                pDataParameters[7].Value = pfrmRiskMaterialInfoRegisterEntity.DESIGNATED_QUANTITY_UNIT;
                pDataParameters[8].Value = pfrmRiskMaterialInfoRegisterEntity.STORAGE_MANAGEMENT_PLAN;
                pDataParameters[9].Value = pfrmRiskMaterialInfoRegisterEntity.REMARK;
                pDataParameters[10].Value = pfrmRiskMaterialInfoRegisterEntity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_frmRiskMaterialInfoRegister_I10", pDataParameters);

                pfrmRiskMaterialInfoRegisterEntity.ERR_NO = pDataTable.Rows[0]["ERR_NO"].ToString();
                pfrmRiskMaterialInfoRegisterEntity.ERR_MSG = pDataTable.Rows[0]["ERR_MSG"].ToString();
                pfrmRiskMaterialInfoRegisterEntity.RTN_KEY = pDataTable.Rows[0]["RTN_KEY"].ToString();
                pfrmRiskMaterialInfoRegisterEntity.RTN_SEQ = pDataTable.Rows[0]["RTN_SEQ"].ToString();
                pfrmRiskMaterialInfoRegisterEntity.RTN_OTHERS = pDataTable.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTable.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "frmRiskMaterialInfoRegister_Info_Save(frmRiskMaterialInfoRegisterEntity pfrmRiskMaterialInfoRegisterEntity)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN == true)
                    _pDBManager.RollbackTransaction();
                else
                    _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override frmRiskMaterialInfoRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                frmRiskMaterialInfoRegisterEntity pfrmRiskMaterialInfoRegisterEntity = new frmRiskMaterialInfoRegisterEntity();

                //pProcessCodeMstRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pfrmRiskMaterialInfoRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }


}
