using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.Data.SqlClient;
using MySql.Data.MySqlClient;

using CoFAS_MES.UI.PM.Entity;

using CoFAS_MES.CORE.Entity;
using CoFAS_MES.CORE.Function;
using System.Data;

namespace CoFAS_MES.UI.PM.Data
{
    public class SampleRegisterProvider : EntityManager<SampleRegisterEntity>
    {
        #region 생성자 - GridInfoRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public SampleRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(SampleRegisterEntity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.CORP_CODE;
                pDataParameters[1].Value = pSampleRegisterEntity.CRUD;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SampleRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(SampleRegisterEntity pSampleRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(SampleRegisterEntity pSampleRegisterEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pSampleRegisterEntity.CORP_CODE;
                pDataParametersA[1].Value = pSampleRegisterEntity.CRUD;
                pDataParametersA[2].Value = pSampleRegisterEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SampleRegister_I10", pDataParametersA);

                pSampleRegisterEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pSampleRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pSampleRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pSampleRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pSampleRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                                    };
                                    break;
                            }

                            pDataParametersB[0].Value = pSampleRegisterEntity.CORP_CODE;
                            pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[2].Value = pSampleRegisterEntity.USER_CODE;

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pSampleRegisterEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pSampleRegisterEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                            pSampleRegisterEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                            pSampleRegisterEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                            pSampleRegisterEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(SampleRegisterEntity pSampleRegisterEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override SampleRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                SampleRegisterEntity pSampleRegisterEntity = new SampleRegisterEntity();

                pSampleRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pSampleRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInRegisterProvider : EntityManager<ProductInRegisterEntity>
    {
        #region 생성자 - ProductInRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInRegister_Info_Save(ProductInRegisterEntity pProductInRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInRegister_Info(ProductInRegisterEntity pProductInRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 20)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductInRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pProductInRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pProductInRegisterEntity.PART_CODE;
                pDataParameters[4].Value = pProductInRegisterEntity.PART_NAME;
                pDataParameters[5].Value = pProductInRegisterEntity.VEND_CODE;
                pDataParameters[6].Value = pProductInRegisterEntity.VEND_NAME;
                pDataParameters[7].Value = pProductInRegisterEntity.REFERENCE_ID;
                pDataParameters[8].Value = pProductInRegisterEntity.INOUT_CODE;
                pDataParameters[9].Value = pProductInRegisterEntity.USE_YN;
                pDataParameters[10].Value = pProductInRegisterEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInRegister_Info_Save(ProductInRegisterEntity pProductInRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        public bool ProductInRegister_Info_Save(ProductInRegisterEntity pProductInRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInRegisterEntity.CRUD;
                pDataParametersA[1].Value = pProductInRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pProductInRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductInRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pProductInRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pProductInRegisterEntity.INOUT_SEQ;
                pDataParametersA[6].Value = pProductInRegisterEntity.INOUT_CODE;
                pDataParametersA[7].Value = pProductInRegisterEntity.PART_CODE;
                pDataParametersA[8].Value = pProductInRegisterEntity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pProductInRegisterEntity.INOUT_QTY);
                pDataParametersA[10].Value = pProductInRegisterEntity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInRegisterEntity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pProductInRegisterEntity.COST);
                pDataParametersA[13].Value = pProductInRegisterEntity.REFERENCE_ID;
                pDataParametersA[14].Value = pProductInRegisterEntity.REMARK;
                pDataParametersA[15].Value = pProductInRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_I10", pDataParametersA);

                pProductInRegisterEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pProductInRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pProductInRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pProductInRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pProductInRegisterEntity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pProductInRegisterEntity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pProductInRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInRegisterEntity pProductInRegisterEntity = new ProductInRegisterEntity();

                pProductInRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInRegister_T04Provider : EntityManager<ProductInRegister_T04Entity>
    {
        #region 생성자 - ProductInRegister_T04Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInRegister_T04Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInRegister_T04_Info_Save(ProductInRegister_T04Entity pProductInRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInRegister_T04_Info(ProductInRegister_T04Entity pProductInRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 20)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductInRegister_T04Entity.DATE_FROM;
                pDataParameters[2].Value = pProductInRegister_T04Entity.DATE_TO;
                pDataParameters[3].Value = pProductInRegister_T04Entity.PART_CODE;
                pDataParameters[4].Value = pProductInRegister_T04Entity.PART_NAME;
                pDataParameters[5].Value = pProductInRegister_T04Entity.VEND_CODE;
                pDataParameters[6].Value = pProductInRegister_T04Entity.VEND_NAME;
                pDataParameters[7].Value = pProductInRegister_T04Entity.REFERENCE_ID;
                pDataParameters[8].Value = pProductInRegister_T04Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductInRegister_T04Entity.USE_YN;
                pDataParameters[10].Value = pProductInRegister_T04Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T04_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInRegister_T04_Info_Save(ProductInRegister_T04Entity pProductInRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool ProductInRegister_T04_Info_Save(ProductInRegister_T04Entity pProductInRegister_T04Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_location", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_location", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInRegister_T04Entity.CRUD;
                pDataParametersA[1].Value = pProductInRegister_T04Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInRegister_T04Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductInRegister_T04Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductInRegister_T04Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductInRegister_T04Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pProductInRegister_T04Entity.INOUT_CODE;
                pDataParametersA[7].Value = pProductInRegister_T04Entity.PART_CODE;
                pDataParametersA[8].Value = pProductInRegister_T04Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pProductInRegister_T04Entity.INOUT_QTY);
                pDataParametersA[10].Value = pProductInRegister_T04Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInRegister_T04Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pProductInRegister_T04Entity.COST);
                pDataParametersA[13].Value = pProductInRegister_T04Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pProductInRegister_T04Entity.REMARK;
                pDataParametersA[15].Value = pProductInRegister_T04Entity.USE_YN;
                pDataParametersA[16].Value = pProductInRegister_T04Entity.LOCATION;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T04_I10", pDataParametersA);

                pProductInRegister_T04Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pProductInRegister_T04Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pProductInRegister_T04Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pProductInRegister_T04Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pProductInRegister_T04Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pProductInRegister_T04Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pProductInRegister_T04Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInRegister_T04Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInRegister_T04Entity pProductInRegister_T04Entity = new ProductInRegister_T04Entity();

                pProductInRegister_T04Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInRegister_T04Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductInRegister_T02Provider : EntityManager<ProductInRegister_T02Entity>
    {
        #region 생성자 - ProductInRegister_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInRegister_T02_Info_Save(ProductInRegister_T02Entity pProductInRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInRegister_T02_Info(ProductInRegister_T02Entity pProductInRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 20)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductInRegister_T02Entity.DATE_FROM;
                pDataParameters[2].Value = pProductInRegister_T02Entity.DATE_TO;
                pDataParameters[3].Value = pProductInRegister_T02Entity.PART_CODE;
                pDataParameters[4].Value = pProductInRegister_T02Entity.PART_NAME;
                pDataParameters[5].Value = pProductInRegister_T02Entity.VEND_CODE;
                pDataParameters[6].Value = pProductInRegister_T02Entity.VEND_NAME;
                pDataParameters[7].Value = pProductInRegister_T02Entity.REFERENCE_ID;
                pDataParameters[8].Value = pProductInRegister_T02Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductInRegister_T02Entity.USE_YN;
                pDataParameters[10].Value = pProductInRegister_T02Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T02_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInRegister_T02_Info_Save(ProductInRegister_T02Entity pProductInRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool ProductInRegister_T02_Info_Save(ProductInRegister_T02Entity pProductInRegister_T02Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_end_date", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_end_date", SqlDbType.VarChar,20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pProductInRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInRegister_T02Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductInRegister_T02Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductInRegister_T02Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductInRegister_T02Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pProductInRegister_T02Entity.INOUT_CODE;
                pDataParametersA[7].Value = pProductInRegister_T02Entity.PART_CODE;
                pDataParametersA[8].Value = pProductInRegister_T02Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pProductInRegister_T02Entity.INOUT_QTY);
                pDataParametersA[10].Value = pProductInRegister_T02Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInRegister_T02Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pProductInRegister_T02Entity.COST);
                pDataParametersA[13].Value = pProductInRegister_T02Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pProductInRegister_T02Entity.REMARK;
                pDataParametersA[15].Value = pProductInRegister_T02Entity.USE_YN;
                pDataParametersA[16].Value = pProductInRegister_T02Entity.END_DATE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T02_I10", pDataParametersA);

                pProductInRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pProductInRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pProductInRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pProductInRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pProductInRegister_T02Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pProductInRegister_T02Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pProductInRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        public bool ProductInRegister_T02_Info_Check_Save(ProductInRegister_T02Entity pProductInRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_reference_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_sampling_date             ".Trim(), MySqlDbType.VarChar, 8),
                                            new MySqlParameter("@v_sampling_result             ".Trim(), MySqlDbType.Decimal)


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_reference_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_sampling_date             ".Trim(), SqlDbType.VarChar, 8),
                                            new SqlParameter("@v_sampling_result           ".Trim(), SqlDbType.Decimal)

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pProductInRegister_T02Entity.CRUD;
                            pDataParametersA[1].Value = pProductInRegister_T02Entity.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["INOUT_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                            pDataParametersA[4].Value = String.Format("{0:yyyyMMdd}", Convert.ToDateTime(dt.Rows[a]["SAMPLING_DATE"].ToString()));// dt.Rows[a]["SAMPLING_DATE"].ToString().ToUpper();
                            pDataParametersA[5].Value = dt.Rows[a]["INPUT"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T02_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pProductInRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pProductInRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pProductInRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pProductInRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pProductInRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialInRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialInRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInRegister_T02Entity pProductInRegister_T02Entity = new ProductInRegister_T02Entity();

                pProductInRegister_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductInRegister_T01Provider : EntityManager<ProductInRegister_T01Entity>
    {
        #region 생성자 - ProductInRegister_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInRegister_Info(ProductInRegister_T01Entity pProductInRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInRegister_Info(ProductInRegister_T01Entity pProductInRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 20)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pProductInRegister_T01Entity.DATE_FROM;
                pDataParameters[2].Value = pProductInRegister_T01Entity.DATE_TO;
                pDataParameters[3].Value = pProductInRegister_T01Entity.PART_CODE;
                pDataParameters[4].Value = pProductInRegister_T01Entity.VEND_PART_CODE;
                pDataParameters[5].Value = pProductInRegister_T01Entity.PART_NAME;
                pDataParameters[6].Value = pProductInRegister_T01Entity.VEND_CODE;
                pDataParameters[7].Value = pProductInRegister_T01Entity.VEND_NAME;
                pDataParameters[8].Value = pProductInRegister_T01Entity.REFERENCE_ID;
                pDataParameters[9].Value = pProductInRegister_T01Entity.INOUT_CODE;
                pDataParameters[10].Value = pProductInRegister_T01Entity.USE_YN;
                pDataParameters[11].Value = pProductInRegister_T01Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T01_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInRegister_Info(ProductInRegister_T01Entity pProductInRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool ProductInRegister_Info_Save(ProductInRegister_T01Entity pProductInRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int i = 0; i < pCount; i++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                                };
                                break;
                        }

                        pDataParametersA[0].Value = dt.Rows[i]["CRUD"].ToString();
                        pDataParametersA[1].Value = pProductInRegister_T01Entity.CRUD;
                        pDataParametersA[2].Value = "I";
                        pDataParametersA[3].Value = dt.Rows[i]["INOUT_ID"].ToString();
                        if (dt.Rows[i]["INOUT_DATE"].ToString().Length > 8)
                        {
                            pDataParametersA[4].Value = dt.Rows[i]["INOUT_DATE"].ToString().Substring(0, 10).Replace("-", "").ToString();
                        }
                        else
                        {
                            pDataParametersA[4].Value = dt.Rows[i]["INOUT_DATE"].ToString();
                        }
                        pDataParametersA[5].Value = dt.Rows[i]["INOUT_SEQ"].ToString();
                        pDataParametersA[6].Value = dt.Rows[i]["INOUT_CODE"].ToString();
                        pDataParametersA[7].Value = dt.Rows[i]["PART_CODE"].ToString();
                        pDataParametersA[8].Value = dt.Rows[i]["VEND_CODE"].ToString();
                        pDataParametersA[9].Value = Convert.ToDecimal(dt.Rows[i]["INOUT_QTY"].ToString());
                        pDataParametersA[10].Value = dt.Rows[i]["UNIT_CODE"].ToString();
                        pDataParametersA[11].Value = Convert.ToDecimal(dt.Rows[i]["UNITCOST"].ToString());
                        pDataParametersA[12].Value = Convert.ToDecimal(dt.Rows[i]["COST"].ToString());
                        pDataParametersA[13].Value = dt.Rows[i]["REFERENCE_ID"].ToString();
                        pDataParametersA[14].Value = dt.Rows[i]["REMARK"].ToString();
                        pDataParametersA[15].Value = dt.Rows[i]["USE_YN"].ToString();

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T01_I10", pDataParametersA);

                        pProductInRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                        pProductInRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                        pProductInRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                        pProductInRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                        pProductInRegister_T01Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                        pProductInRegister_T01Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                        pProductInRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {

                        }
                    }
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInRegister_T01Entity pProductInRegister_T01Entity = new ProductInRegister_T01Entity();

                pProductInRegister_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInRegister_T05Provider : EntityManager<ProductInRegister_T05Entity>
    {
        #region 생성자 - ProductInRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInRegister_T05Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInRegister_Info_Save(ProductInRegisterEntity pProductInRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInRegister_Info(ProductInRegister_T05Entity pProductInRegister_T05Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 150),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 150),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 20)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInRegister_T05Entity.CRUD;
                pDataParameters[1].Value = pProductInRegister_T05Entity.DATE_FROM;
                pDataParameters[2].Value = pProductInRegister_T05Entity.DATE_TO;
                pDataParameters[3].Value = pProductInRegister_T05Entity.PART_CODE;
                pDataParameters[4].Value = pProductInRegister_T05Entity.PART_NAME;
                pDataParameters[5].Value = pProductInRegister_T05Entity.VEND_CODE;
                pDataParameters[6].Value = pProductInRegister_T05Entity.VEND_NAME;
                pDataParameters[7].Value = pProductInRegister_T05Entity.REFERENCE_ID;
                pDataParameters[8].Value = pProductInRegister_T05Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductInRegister_T05Entity.USE_YN;
                pDataParameters[10].Value = pProductInRegister_T05Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T05_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInRegister_Info_Save(ProductInRegisterEntity pProductInRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        public bool ProductInRegister_Info_Save(ProductInRegister_T05Entity pProductInRegister_T05Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInRegister_T05Entity.CRUD;
                pDataParametersA[1].Value = pProductInRegister_T05Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInRegister_T05Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductInRegister_T05Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductInRegister_T05Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductInRegister_T05Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pProductInRegister_T05Entity.INOUT_CODE;
                pDataParametersA[7].Value = pProductInRegister_T05Entity.PART_CODE;
                pDataParametersA[8].Value = pProductInRegister_T05Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pProductInRegister_T05Entity.INOUT_QTY);
                pDataParametersA[10].Value = pProductInRegister_T05Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInRegister_T05Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pProductInRegister_T05Entity.COST);
                pDataParametersA[13].Value = pProductInRegister_T05Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pProductInRegister_T05Entity.REMARK;
                pDataParametersA[15].Value = pProductInRegister_T05Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_T05_I10", pDataParametersA);

                pProductInRegister_T05Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pProductInRegister_T05Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pProductInRegister_T05Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pProductInRegister_T05Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pProductInRegister_T05Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pProductInRegister_T05Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pProductInRegister_T05Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInRegister_T05Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInRegister_T05Entity pProductInRegisterEntity = new ProductInRegister_T05Entity();

                pProductInRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductStockStatus_T01Provider : EntityManager<ProductStockStatus_T01Entity>
    {
        #region 생성자 - ProductStockStatus_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductStockStatus_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductStockStatus_T01Entity pProductStockStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductStockStatus_T01Entity pProductStockStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T01Entity.CRUD;
                pDataParameters[1].Value = pProductStockStatus_T01Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductStockStatus_T01Entity.PART_NAME;
                pDataParameters[3].Value = pProductStockStatus_T01Entity.PART_CODE;
                pDataParameters[4].Value = pProductStockStatus_T01Entity.PART_TYPE;

                //pDataParameters[2].Value = pProductStockStatus_T01Entity.DATE_FROM;
                //pDataParameters[3].Value = pProductStockStatus_T01Entity.DATE_TO;
                //pDataParameters[4].Value = pProductStockStatus_T01Entity.PART_NAME;
                //pDataParameters[5].Value = pProductStockStatus_T01Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T01_Info_Mst(ProductStockStatus_T01Entity pProductStockStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductStockStatus_T01Entity pProductStockStatus_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductStockStatus_T01Entity pProductStockStatus_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductStockStatus_T01Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductStockStatus_T01Entity.CRUD;
                pDataParametersA[2].Value = pProductStockStatus_T01Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T01_I10", pDataParametersA);

                pProductStockStatus_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductStockStatus_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductStockStatus_T01Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductStockStatus_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductStockStatus_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductStockStatus_T01Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductStockStatus_T01Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductStockStatus_T01Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductStockStatus_T01Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductStockStatus_T01Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductStockStatus_T01Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductStockStatus_T01Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductStockStatus_T01Entity pProductStockStatus_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductStockStatus_T01_Info_Filename(ProductStockStatus_T01Entity pProductStockStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductStockStatus_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductStockStatus_T01_Info_Filename(ProductStockStatus_T01Entity pProductStockStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductStockStatus_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T01_Info_Filename(ProductStockStatus_T01Entity pProductStockStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductStockStatus_T01Entity pProductStockStatus_T01Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductStockStatus_T01Entity pProductStockStatus_T01Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductStockStatus_T01Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductStockStatus_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductStockStatus_T01Entity pProductStockStatus_T01Entity = new ProductStockStatus_T01Entity();

                pProductStockStatus_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductStockStatus_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductInStatusProvider : EntityManager<ProductInStatusEntity>
    {
        #region 생성자 - ProductInStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductInStatusEntity pProductInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductInStatusEntity pProductInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductInStatusEntity.CORP_CODE;
                pDataParameters[1].Value = pProductInStatusEntity.CRUD;
                pDataParameters[2].Value = pProductInStatusEntity.DATE_FROM;
                pDataParameters[3].Value = pProductInStatusEntity.DATE_TO;
                pDataParameters[4].Value = pProductInStatusEntity.PART_NAME;
                pDataParameters[5].Value = pProductInStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductInStatusEntity pProductInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductInStatusEntity pProductInStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductInStatusEntity pProductInStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pProductInStatusEntity.CRUD;
                pDataParametersA[2].Value = pProductInStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInStatus_I10", pDataParametersA);

                pProductInStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductInStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductInStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductInStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductInStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductInStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductInStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductInStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductInStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductInStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductInStatusEntity pProductInStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInStatusEntity pProductInStatusEntity = new ProductInStatusEntity();

                pProductInStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion


        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(ProductInStatusEntity pProductInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(ProductInStatusEntity pProductInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductInStatusEntity.CORP_CODE;
                pDataParameters[1].Value = pProductInStatusEntity.WINDOW_NAME;


                DataTable pDatatable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R30", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDatatable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(ProductInStatusEntity pProductInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
      //  public DataTable Sheet_Info_Sheet_Data(ProductInStatusEntity pProductInStatusEntity)
        public DataSet Sheet_Info_Sheet_Data(ProductInStatusEntity pProductInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductInStatusEntity.CRUD;
                pDataParameters[1].Value = pProductInStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pProductInStatusEntity.DATE_TO;
                pDataParameters[3].Value = pProductInStatusEntity.PART_CODE;
                pDataParameters[4].Value = pProductInStatusEntity.PART_NAME;
                pDataParameters[5].Value = pProductInStatusEntity.VEND_CODE;
                pDataParameters[6].Value = pProductInStatusEntity.VEND_NAME;


                //DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInStatus_R10", pDataParameters);
                DataSet pDataSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ProductInStatus_R10", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                // return pDataTable;
                return pDataSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)",
                    pException
                );
            }
        }
        #endregion


        #region 파일명 조회하기 - ProductNotOutStatus_Info_Filename(ProductNotOutStatusEntity pProductNotOutStatusEntity)
        public DataTable ProductInStatus_Info_Filename(ProductInStatusEntity pProductInStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductInStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pProductInStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInStatus_Info_Filename(ProductInStatusEntity pProductInStatusEntity)",
                    pException
                );
            }
        }

#endregion

        #region XML파일 다운로드 - Templete_Download(ProductInStatusEntity pProductInStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductInStatusEntity pProductInStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }
        #endregion

    }

    public class ProductInOutStatus_T50Provider : EntityManager<ProductInOutStatus_T50Entity>
    {
        #region 생성자 - ProductInOutStatus_T50Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInOutStatus_T50Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductInOutStatus_T50Entity.CORP_CODE;
                pDataParameters[1].Value = pProductInOutStatus_T50Entity.CRUD;
                pDataParameters[2].Value = pProductInOutStatus_T50Entity.DATE_FROM;
                pDataParameters[3].Value = pProductInOutStatus_T50Entity.DATE_TO;
                pDataParameters[4].Value = pProductInOutStatus_T50Entity.PART_NAME;
                pDataParameters[5].Value = pProductInOutStatus_T50Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInOutStatus_T50_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInOutStatus_T50Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductInOutStatus_T50Entity.CRUD;
                pDataParametersA[2].Value = pProductInOutStatus_T50Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInOutStatus_T50_I10", pDataParametersA);

                pProductInOutStatus_T50Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInOutStatus_T50Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInOutStatus_T50Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductInOutStatus_T50Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductInOutStatus_T50Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductInOutStatus_T50Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductInOutStatus_T50Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductInOutStatus_T50Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductInOutStatus_T50Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductInOutStatus_T50Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductInOutStatus_T50Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductInOutStatus_T50Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInOutStatus_T50Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity = new ProductInOutStatus_T50Entity();

                pProductInOutStatus_T50Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInOutStatus_T50Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion


        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInOutStatus_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductInOutStatus_T50Entity.CORP_CODE;
                pDataParameters[1].Value = pProductInOutStatus_T50Entity.WINDOW_NAME;


                DataTable pDatatable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R30", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDatatable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
      //  public DataTable Sheet_Info_Sheet_Data(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)
        public DataSet Sheet_Info_Sheet_Data(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductInOutStatus_T50Entity.CRUD;
                pDataParameters[1].Value = pProductInOutStatus_T50Entity.DATE_FROM;
                pDataParameters[2].Value = pProductInOutStatus_T50Entity.DATE_TO;
                pDataParameters[3].Value = pProductInOutStatus_T50Entity.PART_CODE;
                pDataParameters[4].Value = pProductInOutStatus_T50Entity.PART_NAME;
                pDataParameters[5].Value = pProductInOutStatus_T50Entity.VEND_CODE;
                pDataParameters[6].Value = pProductInOutStatus_T50Entity.VEND_NAME;


                //DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInOutStatus_T50_R10", pDataParameters);
                DataSet pDataSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ProductInOutStatus_T50_R10", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                // return pDataTable;
                return pDataSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(ProcessMaterialStockStatusEntity pProcessMaterialStockStatusEntity)",
                    pException
                );
            }
        }
        #endregion


        #region 파일명 조회하기 - ProductNotOutStatus_Info_Filename(ProductNotOutStatusEntity pProductNotOutStatusEntity)
        public DataTable ProductInOutStatus_T50_Info_Filename(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductInOutStatus_T50Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductInOutStatus_T50Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInOutStatus_T50_Info_Filename(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductInOutStatus_T50Entity pProductInOutStatus_T50Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }
        #endregion

    }

    public class ProductInOutStatusProvider : EntityManager<ProductInOutStatusEntity>
    {
        #region 생성자 - ProductInStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInOutStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductInStatusEntity pProductInStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInOut_Info(ProductInOutStatusEntity pProductInOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_type", MySqlDbType.VarChar,50),    
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                
                pDataParameters[0].Value = pProductInOutStatusEntity.CRUD;
                pDataParameters[1].Value = pProductInOutStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pProductInOutStatusEntity.DATE_TO;
                pDataParameters[3].Value = pProductInOutStatusEntity.PART_CODE;
                pDataParameters[4].Value = pProductInOutStatusEntity.VEND_CODE;
                pDataParameters[5].Value = pProductInOutStatusEntity.INOUT_TYPE;
                pDataParameters[6].Value = pProductInOutStatusEntity.INOUT_ID;



                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInOutStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductInStatusEntity pProductInStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInOutStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInOutStatusEntity pProductInOutStatusEntity = new ProductInOutStatusEntity();

                pProductInOutStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInOutStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    
    }

    public class ProductInOutStatus_T01Provider : EntityManager<ProductInOutStatus_T01Entity>
    {
        #region 생성자 - ProductInOutStatus_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInOutStatus_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 10)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 10)
                };
                        break;
                }

                pDataParameters[0].Value = pProductInOutStatus_T01Entity.CRUD;
                pDataParameters[1].Value = pProductInOutStatus_T01Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductInOutStatus_T01Entity.PART_CODE;
                pDataParameters[3].Value = pProductInOutStatus_T01Entity.PART_NAME;
                pDataParameters[4].Value = pProductInOutStatus_T01Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInOutStatus_T01Entity.VEND_PART_CODE;
                pDataParameters[6].Value = pProductInOutStatus_T01Entity.VEND_CODE;
                pDataParameters[7].Value = pProductInOutStatus_T01Entity.INOUT_TYPE;
                pDataParameters[8].Value = pProductInOutStatus_T01Entity.DATE_FROM;
                pDataParameters[9].Value = pProductInOutStatus_T01Entity.DATE_TO;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInOutStatus_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInOutStatus_T01_Info_Mst(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInOutStatus_T01Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductInOutStatus_T01Entity.CRUD;
                pDataParametersA[2].Value = pProductInOutStatus_T01Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInOutStatus_T01_I10", pDataParametersA);

                pProductInOutStatus_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInOutStatus_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInOutStatus_T01Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductInOutStatus_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductInOutStatus_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductInOutStatus_T01Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductInOutStatus_T01Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductInOutStatus_T01Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductInOutStatus_T01Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductInOutStatus_T01Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductInOutStatus_T01Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductInOutStatus_T01Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductInOutStatus_T01_Info_Filename(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInOutStatus_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInOutStatus_T01_Info_Filename(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductInOutStatus_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductInOutStatus_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInOutStatus_T01_Info_Filename(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductInOutStatus_T01Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInOutStatus_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInOutStatus_T01Entity pProductInOutStatus_T01Entity = new ProductInOutStatus_T01Entity();

                pProductInOutStatus_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInOutStatus_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInStatus_T02Provider : EntityManager<ProductInStatus_T02Entity>
    {
        #region 생성자 - ProductInStatus_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductInStatus_T02Entity pProductInStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductInStatus_T02Entity pProductInStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 10)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 10)
                };
                        break;
                }

                pDataParameters[0].Value = pProductInStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pProductInStatus_T02Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductInStatus_T02Entity.PART_CODE;
                pDataParameters[3].Value = pProductInStatus_T02Entity.PART_NAME;
                pDataParameters[4].Value = pProductInStatus_T02Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInStatus_T02Entity.VEND_PART_CODE;
                pDataParameters[6].Value = pProductInStatus_T02Entity.VEND_CODE;
                pDataParameters[7].Value = pProductInStatus_T02Entity.INOUT_TYPE;
                pDataParameters[8].Value = pProductInStatus_T02Entity.DATE_FROM;
                pDataParameters[9].Value = pProductInStatus_T02Entity.DATE_TO;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInStatus_T02_Info_Mst(ProductInStatus_T02Entity pProductInStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductInStatus_T02Entity pProductInStatus_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductInStatus_T02Entity pProductInStatus_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInStatus_T02Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductInStatus_T02Entity.CRUD;
                pDataParametersA[2].Value = pProductInStatus_T02Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInStatus_T02_I10", pDataParametersA);

                pProductInStatus_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInStatus_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInStatus_T02Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductInStatus_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductInStatus_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductInStatus_T02Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductInStatus_T02Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductInStatus_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductInStatus_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductInStatus_T02Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductInStatus_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductInStatus_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductInStatus_T02Entity pProductInStatus_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductInStatus_T02_Info_Filename(ProductInStatus_T02Entity pProductInStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInStatus_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInStatus_T02_Info_Filename(ProductInStatus_T02Entity pProductInStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductInStatus_T02Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductInStatus_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInStatus_T02_Info_Filename(ProductInStatus_T02Entity pProductInStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductInStatus_T02Entity pProductInStatus_T02Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductInStatus_T02Entity pProductInStatus_T02Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductInStatus_T02Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInStatus_T02Entity pProductInStatus_T02Entity = new ProductInStatus_T02Entity();

                pProductInStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    
    public class ProductOutStatus_T02Provider : EntityManager<ProductOutStatus_T02Entity>
    {
        #region 생성자 - ProductOutStatus_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductOutStatus_T02Entity pProductOutStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductOutStatus_T02Entity pProductOutStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 10)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 10),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar, 10)
                };
                        break;
                }

                pDataParameters[0].Value = pProductOutStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pProductOutStatus_T02Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductOutStatus_T02Entity.PART_CODE;
                pDataParameters[3].Value = pProductOutStatus_T02Entity.PART_NAME;
                pDataParameters[4].Value = pProductOutStatus_T02Entity.PART_TYPE;
                pDataParameters[5].Value = pProductOutStatus_T02Entity.VEND_PART_CODE;
                pDataParameters[6].Value = pProductOutStatus_T02Entity.VEND_CODE;
                pDataParameters[7].Value = pProductOutStatus_T02Entity.INOUT_TYPE;
                pDataParameters[8].Value = pProductOutStatus_T02Entity.DATE_FROM;
                pDataParameters[9].Value = pProductOutStatus_T02Entity.DATE_TO;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductOutStatus_T02_Info_Mst(ProductOutStatus_T02Entity pProductOutStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductOutStatus_T02Entity pProductOutStatus_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductOutStatus_T02Entity pProductOutStatus_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductOutStatus_T02Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductOutStatus_T02Entity.CRUD;
                pDataParametersA[2].Value = pProductOutStatus_T02Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutStatus_T02_I10", pDataParametersA);

                pProductOutStatus_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductOutStatus_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductOutStatus_T02Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductOutStatus_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductOutStatus_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductOutStatus_T02Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductOutStatus_T02Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductOutStatus_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductOutStatus_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductOutStatus_T02Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductOutStatus_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductOutStatus_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductOutStatus_T02Entity pProductOutStatus_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductOutStatus_T02_Info_Filename(ProductOutStatus_T02Entity pProductOutStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutStatus_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutStatus_T02_Info_Filename(ProductOutStatus_T02Entity pProductOutStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductOutStatus_T02Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductOutStatus_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductOutStatus_T02_Info_Filename(ProductOutStatus_T02Entity pProductOutStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductOutStatus_T02Entity pProductOutStatus_T02Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductOutStatus_T02Entity pProductOutStatus_T02Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductOutStatus_T02Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutStatus_T02Entity pProductOutStatus_T02Entity = new ProductOutStatus_T02Entity();

                pProductOutStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductStockStatus_T05Provider : EntityManager<ProductStockStatus_T05Entity>
    {
        #region 생성자 - ProductStockStatus_T05Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductStockStatus_T05Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductStockStatus_T05Entity pProductStockStatus_T05Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductStockStatus_T05Entity pProductStockStatus_T05Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 100),

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50)
                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T05Entity.CRUD;
                pDataParameters[1].Value = pProductStockStatus_T05Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductStockStatus_T05Entity.PART_NAME;
                pDataParameters[3].Value = pProductStockStatus_T05Entity.PART_CODE;
                pDataParameters[4].Value = pProductStockStatus_T05Entity.PART_TYPE;
                pDataParameters[5].Value = "";// pProductStockStatus_T05Entity.VEND_PART_CODE;

                //pDataParameters[2].Value = pProductStockStatus_T05Entity.DATE_FROM;
                //pDataParameters[3].Value = pProductStockStatus_T05Entity.DATE_TO;
                //pDataParameters[4].Value = pProductStockStatus_T05Entity.PART_NAME;
                //pDataParameters[5].Value = pProductStockStatus_T05Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T05_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T05_Info_Mst(ProductStockStatus_T05Entity pProductStockStatus_T05Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductStockStatus_T05Entity pProductStockStatus_T05Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductStockStatus_T05Entity pProductStockStatus_T05Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductStockStatus_T05Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductStockStatus_T05Entity.CRUD;
                pDataParametersA[2].Value = pProductStockStatus_T05Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T05_I10", pDataParametersA);

                pProductStockStatus_T05Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductStockStatus_T05Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductStockStatus_T05Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductStockStatus_T05Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductStockStatus_T05Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductStockStatus_T05Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductStockStatus_T05Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductStockStatus_T05Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductStockStatus_T05Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductStockStatus_T05Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductStockStatus_T05Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductStockStatus_T05Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductStockStatus_T05Entity pProductStockStatus_T05Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductStockStatus_T05_Info_Filename(ProductStockStatus_T05Entity pProductStockStatus_T05Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductStockStatus_T05Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductStockStatus_T05_Info_Filename(ProductStockStatus_T05Entity pProductStockStatus_T05Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T05Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductStockStatus_T05Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T05_Info_Filename(ProductStockStatus_T05Entity pProductStockStatus_T05Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductStockStatus_T05Entity pProductStockStatus_T05Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductStockStatus_T05Entity pProductStockStatus_T05Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductStockStatus_T05Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductStockStatus_T05Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductStockStatus_T05Entity pProductStockStatus_T05Entity = new ProductStockStatus_T05Entity();

                pProductStockStatus_T05Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductStockStatus_T05Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductOutRegisterProvider : EntityManager<ProductOutRegisterEntity>
    {
        #region 생성자 - ProductOutRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductOutRegister_Info_Mst(ProductOutRegisterEntity pProductOutRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_Info_Mst(ProductOutRegisterEntity pProductOutRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductOutRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductOutRegisterEntity.DATE_FROM;
                pDataParameters[2].Value = pProductOutRegisterEntity.DATE_TO;
                pDataParameters[3].Value = pProductOutRegisterEntity.PART_CODE;
                pDataParameters[4].Value = pProductOutRegisterEntity.PART_NAME;
                pDataParameters[5].Value = pProductOutRegisterEntity.VEND_NAME;
                pDataParameters[6].Value = pProductOutRegisterEntity.REFERENCE_ID;
                pDataParameters[7].Value = pProductOutRegisterEntity.INOUT_ID;
                pDataParameters[8].Value = pProductOutRegisterEntity.INOUT_CODE;
                pDataParameters[9].Value = pProductOutRegisterEntity.USE_YN;
                pDataParameters[10].Value = pProductOutRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductOutRegister_Info_Save(ProductOutRegisterEntity pMaterialOrderStatusEntity, DataTable dt)       
        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOutRegister_Info_Save(ProductOutRegisterEntity pProductOutRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }
                
                pDataParametersA[0].Value = pProductOutRegisterEntity.CRUD;
                pDataParametersA[1].Value = pProductOutRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pProductOutRegisterEntity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductOutRegisterEntity.INOUT_ID;
                pDataParametersA[4].Value = pProductOutRegisterEntity.INOUT_DATE;
                pDataParametersA[5].Value = pProductOutRegisterEntity.INOUT_CODE;
                pDataParametersA[6].Value = pProductOutRegisterEntity.PART_CODE;
                pDataParametersA[7].Value = pProductOutRegisterEntity.VEND_CODE;
                pDataParametersA[8].Value = pProductOutRegisterEntity.INOUT_QTY.Replace(",","");
                pDataParametersA[9].Value = Convert.ToDecimal(pProductOutRegisterEntity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pProductOutRegisterEntity.COST);
                pDataParametersA[11].Value = pProductOutRegisterEntity.REFERENCE_ID;
                pDataParametersA[12].Value = pProductOutRegisterEntity.REMARK;
                pDataParametersA[13].Value = pProductOutRegisterEntity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_I10", pDataParametersA);

                pProductOutRegisterEntity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pProductOutRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pProductOutRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductOutRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOutRegister_Info_Save(ProductOutRegisterEntity pProductOutRegisterEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutRegisterEntity pProductOutRegisterEntity = new ProductOutRegisterEntity();

                //pProductOutRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductOutRegister_T02Provider : EntityManager<ProductOutRegister_T02Entity>
    {
        #region 생성자 - ProductOutRegister_T02Provider(DBManager pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductOutRegister_Info_Mst(ProductOutRegister_T02Entity pProductOutRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_Info_Mst(ProductOutRegister_T02Entity pProductOutRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductOutRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductOutRegister_T02Entity.DATE_FROM;
                pDataParameters[2].Value = pProductOutRegister_T02Entity.DATE_TO;
                pDataParameters[3].Value = pProductOutRegister_T02Entity.PART_CODE;
                pDataParameters[4].Value = pProductOutRegister_T02Entity.VEND_PART_CODE;
                pDataParameters[5].Value = pProductOutRegister_T02Entity.PART_NAME;
                pDataParameters[6].Value = pProductOutRegister_T02Entity.VEND_NAME;
                pDataParameters[7].Value = pProductOutRegister_T02Entity.REFERENCE_ID;
                pDataParameters[8].Value = pProductOutRegister_T02Entity.INOUT_ID;
                pDataParameters[9].Value = pProductOutRegister_T02Entity.INOUT_CODE;
                pDataParameters[10].Value = pProductOutRegister_T02Entity.USE_YN;
                pDataParameters[11].Value = pProductOutRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductOutRegister_Info_Mst(ProductOutRegister_T01Entity pProductOutRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductOutRegister_Info_Save(ProductOutRegister_T01Entity pProductOutRegister_T02Entity, DataTable dt)
        /// <summary>
        /// 
        /// </summary>
        /// <param name="pProductOutRegister_T01Entity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOutRegister_Info_Save(ProductOutRegister_T02Entity pProductOutRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int i = 0; i < pCount; i++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;
                        }

                        pDataParametersA[0].Value = dt.Rows[i]["CRUD"].ToString();
                        pDataParametersA[1].Value = pProductOutRegister_T02Entity.CRUD;
                        pDataParametersA[2].Value = "O";
                        pDataParametersA[3].Value = dt.Rows[i]["INOUT_ID"].ToString();
                        if (dt.Rows[i]["INOUT_DATE"].ToString().Length > 8)
                        {
                            pDataParametersA[4].Value = dt.Rows[i]["INOUT_DATE"].ToString().Substring(0, 10).Replace("-", "").ToString();
                        }
                        else
                        {
                            pDataParametersA[4].Value = dt.Rows[i]["INOUT_DATE"].ToString();
                        }
                        pDataParametersA[5].Value = dt.Rows[i]["INOUT_CODE"].ToString();
                        pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                        pDataParametersA[7].Value = dt.Rows[i]["VEND_CODE"].ToString();
                        pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["INOUT_QTY"].ToString());
                        pDataParametersA[9].Value = Convert.ToDecimal(dt.Rows[i]["UNITCOST"].ToString());
                        pDataParametersA[10].Value = Convert.ToDecimal(dt.Rows[i]["COST"].ToString());
                        pDataParametersA[11].Value = dt.Rows[i]["REFERENCE_ID"].ToString();
                        pDataParametersA[12].Value = dt.Rows[i]["REMARK"].ToString();
                        pDataParametersA[13].Value = dt.Rows[i]["USE_YN"].ToString();

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T02_I10", pDataParametersA);

                        pProductOutRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                        pProductOutRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                        pProductOutRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                        pProductOutRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOutRegister_Info_Save(ProductOutRegister_T01Entity pProductOutRegister_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutRegister_T02Entity pProductOutRegister_T01Entity = new ProductOutRegister_T02Entity();

                //pProductOutRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductOutRegister_T03Provider : EntityManager<ProductOutRegister_T03Entity>
    {
        #region 생성자 - ProductOutRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion
        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet Sheet_Info_Sheet_Data(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_user_name", MySqlDbType.VarChar, 50),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_user_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductOutRegister_T03Entity.VEND_CODE;
                pDataParameters[1].Value = pProductOutRegister_T03Entity.INOUT_ID;
                pDataParameters[2].Value = pProductOutRegister_T03Entity.LANGUAGE_TYPE;
                pDataParameters[3].Value = pProductOutRegister_T03Entity.USER_NAME;


                DataSet pDataTable = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_SheetInfoRegister_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(MaterialOrderRegisterEntity_Request pMaterialOrderRegisterEntity_Request)",
                    pException
                );
            }
        }
        #endregion
        //#region 마스터 조회하기 - Sample_Info_Mst(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)

        ///// <summary>
        ///// 조회하기
        ///// </summary>
        ///// <param name="pProductOutRegister_T03Entity">엔티티 정보</param>
        ///// <returns>조회 목록</returns>
        //public DataTable Sample_Info_Mst(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)
        //{
        //    try
        //    {
        //        IDataParameter[] pDataParameters = null;

        //        switch (_pDBManager.DBManagerType.ToString())
        //        {
        //            case "MySql":
        //                pDataParameters = new IDataParameter[]
        //                {
        //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
        //                    new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
        //                    new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
        //                    new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
        //                    new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
        //                    new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
        //                };
        //                break;

        //            case "SQLServer":
        //                pDataParameters = new IDataParameter[]
        //                {
        //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
        //                    new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
        //                    new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
        //                    new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
        //                    new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
        //                    new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
        //                };
        //                break;
        //        }

        //        pDataParameters[0].Value = pProductOutRegister_T03Entity.CRUD;
        //        pDataParameters[1].Value = pProductOutRegister_T03Entity.DATE_FROM;
        //        pDataParameters[2].Value = pProductOutRegister_T03Entity.DATE_TO;
        //        pDataParameters[3].Value = pProductOutRegister_T03Entity.PART_CODE;
        //        pDataParameters[4].Value = pProductOutRegister_T03Entity.PART_NAME;
        //        pDataParameters[5].Value = pProductOutRegister_T03Entity.VEND_NAME;


        //        DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T03_R10", pDataParameters);

        //        //if (pDataTable != null)
        //        //{
        //        //    GetEntity(pDataTable.Rows[0]);
        //        //}

        //        return pDataTable;
        //    }
        //    catch (ExceptionManager pExceptionManager)
        //    {
        //        throw pExceptionManager;
        //    }
        //    catch (Exception pException)
        //    {
        //        throw new ExceptionManager
        //        (
        //            this,
        //            "Sample_Info_Mst(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)",
        //            pException
        //        );
        //    }
        //}

        //#endregion
        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;

                }

                pDataParameters[0].Value = pProductOutRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductOutRegister_T03Entity.WINDOW_NAME;
                pDataParameters[2].Value = pProductOutRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R20", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion
        #region 마스터 조회하기 - ProductOutRegister_T03_Info_Mst(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_T03_Info_Mst(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductOutRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductOutRegister_T03Entity.DATE_FROM;
                pDataParameters[2].Value = pProductOutRegister_T03Entity.DATE_TO;
                pDataParameters[3].Value = pProductOutRegister_T03Entity.PART_CODE;
                pDataParameters[4].Value = pProductOutRegister_T03Entity.PART_NAME;
                pDataParameters[5].Value = pProductOutRegister_T03Entity.VEND_NAME;
                pDataParameters[6].Value = pProductOutRegister_T03Entity.REFERENCE_ID;
                pDataParameters[7].Value = pProductOutRegister_T03Entity.INOUT_ID;
                pDataParameters[8].Value = pProductOutRegister_T03Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductOutRegister_T03Entity.USE_YN;
                pDataParameters[10].Value = pProductOutRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T03_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductOutRegister_T03_Info_Save(ProductOutRegister_T03Entity pMaterialOrderStatusEntity, DataTable dt)       
        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOutRegister_T03_Info_Save(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductOutRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pProductOutRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pProductOutRegister_T03Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductOutRegister_T03Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductOutRegister_T03Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductOutRegister_T03Entity.INOUT_CODE;
                pDataParametersA[6].Value = pProductOutRegister_T03Entity.PART_CODE;
                pDataParametersA[7].Value = pProductOutRegister_T03Entity.VEND_CODE;
                pDataParametersA[8].Value = pProductOutRegister_T03Entity.INOUT_QTY;
                pDataParametersA[9].Value = pProductOutRegister_T03Entity.UNITCOST;
                pDataParametersA[10].Value = pProductOutRegister_T03Entity.COST;
                pDataParametersA[11].Value = pProductOutRegister_T03Entity.REFERENCE_ID;
                pDataParametersA[12].Value = pProductOutRegister_T03Entity.REMARK;
                pDataParametersA[13].Value = pProductOutRegister_T03Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T03_I10", pDataParametersA);

                pProductOutRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pProductOutRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pProductOutRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductOutRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOutRegister_T03_Info_Save(ProductOutRegister_T03Entity pProductOutRegister_T03Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        //#region 정보 저장하기 - Sample_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        ///// <summary>
        ///// 
        ///// </summary>
        ///// <param name="pGridInfoRegisterEntity"></param>
        ///// <param name="dt"></param>
        ///// <returns></returns>
        //public DataTable ProductOutRegister_T03_Info_Save(ProductOutRegister_T03Entity pProductOutRegister_T03Entity)
        //{
        //    bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
        //    int pCount = 0;
        //    DataTable pDataTableA;
        //    try
        //    {
        //        //마스터 저장
        //        IDataParameter[] pDataParametersA = null;

        //        switch (_pDBManager.DBManagerType.ToString())
        //        {
        //            case "MySql":
        //                pDataParametersA = new IDataParameter[]
        //                {
        //                        new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
        //                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
        //                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
        //                        new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
        //                        new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
        //                        new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
        //                        new MySqlParameter("@v_inout_seq", MySqlDbType.Int32),
        //                        new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
        //                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
        //                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
        //                        new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
        //                        new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
        //                        new MySqlParameter("@v_cost", MySqlDbType.Decimal),
        //                        new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
        //                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
        //                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),

        //                };
        //                break;

        //            case "SQLServer":
        //                pDataParametersA = new IDataParameter[]
        //                {
        //                        new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
        //                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
        //                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
        //                        new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
        //                        new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
        //                        new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
        //                        new SqlParameter("@v_inout_seq", SqlDbType.Int),
        //                        new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
        //                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
        //                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 20),
        //                        new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
        //                        new SqlParameter("@v_unitcost", SqlDbType.Decimal),
        //                        new SqlParameter("@v_cost", SqlDbType.Decimal),
        //                        new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
        //                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
        //                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
        //                };
        //                break;
        //        }

        //        pDataParametersA[0].Value = "";//pProductOutRegister_T03Entity.CORP_CODE;
        //        pDataParametersA[1].Value = pProductOutRegister_T03Entity.CRUD;
        //        pDataParametersA[2].Value = pProductOutRegister_T03Entity.USER_CODE;

        //        pDataParametersA[3].Value = pProductOutRegister_T03Entity.INOUT_TYPE;
        //        pDataParametersA[4].Value = pProductOutRegister_T03Entity.INOUT_ID;
        //        pDataParametersA[5].Value = pProductOutRegister_T03Entity.INOUT_DATE;
        //        pDataParametersA[6].Value = pProductOutRegister_T03Entity.INOUT_SEQ=="" ? "0" : pProductOutRegister_T03Entity.INOUT_SEQ;
        //        pDataParametersA[7].Value = pProductOutRegister_T03Entity.INOUT_CODE;
        //        pDataParametersA[8].Value = pProductOutRegister_T03Entity.PART_CODE;
        //        pDataParametersA[9].Value =  pProductOutRegister_T03Entity.VEND_CODE;
        //        pDataParametersA[10].Value = pProductOutRegister_T03Entity.INOUT_QTY;
        //        pDataParametersA[11].Value = pProductOutRegister_T03Entity.UNITCOST;
        //        pDataParametersA[12].Value = pProductOutRegister_T03Entity.COST;
        //        pDataParametersA[13].Value = pProductOutRegister_T03Entity.REFERENCE_ID;
        //        pDataParametersA[14].Value = pProductOutRegister_T03Entity.REMARK;
        //        pDataParametersA[15].Value = "Y";// pProductOutRegister_T03Entity.USE_YN;

        //        pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T03_I10", pDataParametersA);

        //        pProductOutRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
        //        pProductOutRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
        //        pProductOutRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
        //        pProductOutRegister_T03Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
        //        pProductOutRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

        //        if (pDataTableA.Rows[0][0].ToString() != "00")
        //        {
        //            pErrorYN = true;
        //        }
        //        else
        //        {
        //           // if (dt != null)
        //           // {
        //           //     pCount = dt.Rows.Count;
        //           //
        //           //     for (int a = 0; a < pCount; a++)
        //           //     {
        //           //         IDataParameter[] pDataParametersB = null;
        //           //
        //           //         switch (_pDBManager.DBManagerType.ToString())
        //           //         {
        //           //             case "MySql":
        //           //                 pDataParametersB = new IDataParameter[]
        //           //                 {
        //           //                     new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
        //           //                     new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
        //           //                     new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
        //           //                 };
        //           //                 break;
        //           //
        //           //             case "SQLServer":
        //           //                 pDataParametersB = new IDataParameter[]
        //           //                 {
        //           //                     new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
        //           //                     new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
        //           //                     new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
        //           //                 };
        //           //                 break;
        //           //         }
        //           //
        //           //         pDataParametersB[0].Value = pProductOutRegister_T03Entity.CORP_CODE;
        //           //         pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
        //           //         pDataParametersB[2].Value = pProductOutRegister_T03Entity.USER_CODE;
        //           //
        //           //         DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);
        //           //
        //           //         if (pDataTableB.Rows[0][0].ToString() != "00")
        //           //         {
        //           //             pErrorYN = true;
        //           //         }
        //           //
        //           //         pProductOutRegister_T03Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
        //           //         pProductOutRegister_T03Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
        //           //         pProductOutRegister_T03Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
        //           //         pProductOutRegister_T03Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
        //           //         pProductOutRegister_T03Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
        //           //     }
        //           // }
        //        }
        //        //if (pDataTable != null)
        //        //{
        //        //    GetEntity(pDataTable.Rows[0]);
        //        //}
        //    }
        //    catch (ExceptionManager pExceptionManager)
        //    {
        //        pErrorYN = true;

        //        throw pExceptionManager;
        //    }
        //    catch (Exception pException)
        //    {
        //        pErrorYN = true;

        //        throw new ExceptionManager
        //        (
        //            this,
        //            "Sample_Info_Save(ProductOutRegister_T03Entity pProductOutRegister_T03Entity, DataTable dt)",
        //            pException
        //        );
        //    }

        //    //return pErrorYN;
        //    return pDataTableA;
        //}

        //#endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutRegister_T03Entity pProductOutRegister_T03Entity = new ProductOutRegister_T03Entity();

                //pProductOutRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductOutRegister_T05Provider : EntityManager<ProductOutRegister_T05Entity>
    {
        #region 생성자 - ProductOutRegister_T05Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutRegister_T05Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductOutRegister_T05_Info_Mst(ProductOutRegister_T05Entity pProductOutRegister_T05Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutRegister_T05Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_T05_Info_Mst(ProductOutRegister_T05Entity pProductOutRegister_T05Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductOutRegister_T05Entity.CRUD;
                pDataParameters[1].Value = pProductOutRegister_T05Entity.DATE_FROM;
                pDataParameters[2].Value = pProductOutRegister_T05Entity.DATE_TO;
                pDataParameters[3].Value = pProductOutRegister_T05Entity.PART_CODE;
                pDataParameters[4].Value = pProductOutRegister_T05Entity.PART_NAME;
                pDataParameters[5].Value = pProductOutRegister_T05Entity.VEND_NAME;
                pDataParameters[6].Value = pProductOutRegister_T05Entity.REFERENCE_ID;
                pDataParameters[7].Value = pProductOutRegister_T05Entity.INOUT_ID;
                pDataParameters[8].Value = pProductOutRegister_T05Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductOutRegister_T05Entity.USE_YN;
                pDataParameters[10].Value = pProductOutRegister_T05Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T05_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductOutRegister_T05_Info_Save(ProductOutRegister_T05Entity pMaterialOrderStatusEntity, DataTable dt)       
        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOutRegister_T05_Info_Save(ProductOutRegister_T05Entity pProductOutRegister_T05Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_location", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_location", SqlDbType.VarChar, 15)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductOutRegister_T05Entity.CRUD;
                pDataParametersA[1].Value = pProductOutRegister_T05Entity.USER_CODE;
                pDataParametersA[2].Value = pProductOutRegister_T05Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductOutRegister_T05Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductOutRegister_T05Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductOutRegister_T05Entity.INOUT_CODE;
                pDataParametersA[6].Value = pProductOutRegister_T05Entity.PART_CODE;
                pDataParametersA[7].Value = pProductOutRegister_T05Entity.VEND_CODE;
                pDataParametersA[8].Value = pProductOutRegister_T05Entity.INOUT_QTY.Replace(",", "");
                pDataParametersA[9].Value = Convert.ToDecimal(pProductOutRegister_T05Entity.UNITCOST);
                pDataParametersA[10].Value = Convert.ToDecimal(pProductOutRegister_T05Entity.COST);
                pDataParametersA[11].Value = pProductOutRegister_T05Entity.REFERENCE_ID;
                pDataParametersA[12].Value = pProductOutRegister_T05Entity.REMARK;
                pDataParametersA[13].Value = pProductOutRegister_T05Entity.USE_YN;
                pDataParametersA[14].Value = pProductOutRegister_T05Entity.LOCATION;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T05_I10", pDataParametersA);

                pProductOutRegister_T05Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pProductOutRegister_T05Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pProductOutRegister_T05Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductOutRegister_T05Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOutRegister_T05_Info_Save(ProductOutRegister_T05Entity pProductOutRegister_T05Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion


        #region 바코드 프린트 COM_PORT 조회하기 - BarcodeLabelPrint_Info(BarcodeLabelPrintEntity pBarcodeLabelPrintEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pBarcodeLabelPrintEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_T05_COM_Info(string _language_type ,string _terminal_code)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_terminal_code", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_terminal_code", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = _language_type;
                pDataParameters[1].Value = _terminal_code;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_BarcodeLabelPrint_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion


        #region 바코드 프린트 CMD 조회하기 - BarcodeLabelPrint_Info(BarcodeLabelPrintEntity pBarcodeLabelPrintEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pBarcodeLabelPrintEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_T05_COM_Info2(string _language_type, string _terminal_code)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_terminal_code", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_terminal_code", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = _language_type;
                pDataParameters[1].Value = _terminal_code;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_BarcodeLabelPrint_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutRegister_T05Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutRegister_T05Entity pProductOutRegister_T05Entity = new ProductOutRegister_T05Entity();

                //pProductOutRegister_T05Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutRegister_T05Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucProductionOrderInfoPopup_T06Provider : EntityManager<ucProductionOrderInfoPopup_T06_Entity>
    {
        #region 생성자 - ucProductionOrderInfoPopup_T06Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucProductionOrderInfoPopup_T06Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region ○ 개체구하기

        public override ucProductionOrderInfoPopup_T06_Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucProductionOrderInfoPopup_T06_Entity pucProductionOrderInfoPopup_T06_Entity = new ucProductionOrderInfoPopup_T06_Entity();
                pucProductionOrderInfoPopup_T06_Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucProductionOrderInfoPopup_T06_Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        #region ○ 수주정보 조회하기

        public DataSet ucProductionOrderInfoPopup_T06_Return(ucProductionOrderInfoPopup_T06_Entity pucProductionOrderInfoPopup_T06_Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type",    SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pucProductionOrderInfoPopup_T06_Entity.CRUD;
                pDataParameters[1].Value = pucProductionOrderInfoPopup_T06_Entity.DATE_FROM;
                pDataParameters[2].Value = pucProductionOrderInfoPopup_T06_Entity.DATE_TO;
                pDataParameters[3].Value = pucProductionOrderInfoPopup_T06_Entity.PART_CODE;
                pDataParameters[4].Value = pucProductionOrderInfoPopup_T06_Entity.PART_NAME;
                pDataParameters[5].Value = pucProductionOrderInfoPopup_T06_Entity.VEND_CODE;
                pDataParameters[6].Value = pucProductionOrderInfoPopup_T06_Entity.VEND_NAME;
                pDataParameters[7].Value = pucProductionOrderInfoPopup_T06_Entity.LANGUAGE_TYPE;

                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucProductionOrderInfoPopup_T06_R10", pDataParameters);
                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductPlanInfo_Return(string pCRUD, string pPARTCODE, string pPARTNAME, string PARTTYPE)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductOutStatusProvider : EntityManager<ProductOutStatusEntity>
    {
        #region 생성자 - ProductOutStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductOutStatusEntity pProductOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductOutStatusEntity pProductOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductOutStatusEntity.CORP_CODE;
                pDataParameters[1].Value = pProductOutStatusEntity.CRUD;
                pDataParameters[2].Value = pProductOutStatusEntity.DATE_FROM;
                pDataParameters[3].Value = pProductOutStatusEntity.DATE_TO;
                pDataParameters[4].Value = pProductOutStatusEntity.PART_NAME;
                pDataParameters[5].Value = pProductOutStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductOutStatusEntity pProductOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductOutStatusEntity pProductOutStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductOutStatusEntity pProductOutStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductOutStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pProductOutStatusEntity.CRUD;
                pDataParametersA[2].Value = pProductOutStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutStatus_I10", pDataParametersA);

                pProductOutStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductOutStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductOutStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductOutStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductOutStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductOutStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductOutStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductOutStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductOutStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductOutStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductOutStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductOutStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductOutStatusEntity pProductOutStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutStatusEntity pProductOutStatusEntity = new ProductOutStatusEntity();

                pProductOutStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductTrackingStatusProvider : EntityManager<ProductTrackingStatusEntity>
    {
        #region 생성자 - ProductTrackingStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductTrackingStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductTrackingStatusEntity pProductTrackingStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductTrackingStatusEntity pProductTrackingStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@V_bar_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@V_bar_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductTrackingStatusEntity.CRUD;
                pDataParameters[1].Value = pProductTrackingStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pProductTrackingStatusEntity.DATE_TO;
                pDataParameters[3].Value = pProductTrackingStatusEntity.BAR_CODE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductTrackingStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductTrackingStatusEntity pProductTrackingStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductTrackingStatusEntity pProductTrackingStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductTrackingStatusEntity pProductTrackingStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductTrackingStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pProductTrackingStatusEntity.CRUD;
                pDataParametersA[2].Value = pProductTrackingStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductTrackingStatus_I10", pDataParametersA);

                pProductTrackingStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductTrackingStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductTrackingStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductTrackingStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductTrackingStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductTrackingStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductTrackingStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductTrackingStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductTrackingStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductTrackingStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductTrackingStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductTrackingStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductTrackingStatusEntity pProductTrackingStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductTrackingStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductTrackingStatusEntity pProductTrackingStatusEntity = new ProductTrackingStatusEntity();

                pProductTrackingStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductTrackingStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductStockStatusProvider : EntityManager<ProductStockStatusEntity>
    {
        #region 생성자 - ProductStockStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductStockStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductStockStatus_Mst(ProductStockStatusEntity pProductStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductStockStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductStockStatus_Mst(ProductStockStatusEntity pProductStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatusEntity.PART_TYPE;
                pDataParameters[1].Value = pProductStockStatusEntity.PART_CODE;
                pDataParameters[2].Value = pProductStockStatusEntity.PART_NAME;



                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_Mst(ProductStockStatusEntity pProductStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductStockStatusEntity pProductStockStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductStockStatusEntity pProductStockStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductStockStatusEntity.CORP_CODE;
                pDataParametersA[1].Value = pProductStockStatusEntity.CRUD;
                pDataParametersA[2].Value = pProductStockStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_I10", pDataParametersA);

                pProductStockStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductStockStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductStockStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductStockStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductStockStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductStockStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductStockStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductStockStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductStockStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductStockStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductStockStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductStockStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductStockStatusEntity pProductStockStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(ProductStockStatusEntity pProductStockStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductStockStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(ProductStockStatusEntity pProductStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductStockStatusEntity.WINDOW_NAME;


                DataTable pDatatable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R30", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDatatable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(ProductStockStatusEntity pProductStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductStockStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductStockStatusEntity pProductStockStatusEntity = new ProductStockStatusEntity();

                pProductStockStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductStockStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        #region 파일명 조회하기 - ProductNotOutStatus_Info_Filename(ProductNotOutStatusEntity pProductNotOutStatusEntity)
        public DataTable ProductStockStatus_Info_Filename(ProductStockStatusEntity pProductStockStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pProductStockStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_Info_Filename(ProductStockStatusEntity pProductStockStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductStockStatusEntity pProductStockStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductStockStatusEntity pProductStockStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }
        #endregion
    }
    public class ProductInformationRegisterProvider : EntityManager<ProductInformationRegisterEntity>
    {
        #region 생성자 - ProductInformationRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_Info_Mst(ProductInformationRegisterEntity pProductInformationRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_Info_Mst(ProductInformationRegisterEntity pProductInformationRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductInformationRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegisterEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegisterEntity.PART_NAME;
                pDataParameters[4].Value = pProductInformationRegisterEntity.PART_TYPE;
                pDataParameters[5].Value = pProductInformationRegisterEntity.USE_YN;
                pDataParameters[6].Value = pProductInformationRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_Info_Mst(ProductInformationRegisterEntity pProductInformationRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - ProductInformationRegister_Info_Sub(ProductInformationRegisterEntity pProductInformationRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_Info_Sub(ProductInformationRegisterEntity pProductInformationRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductInformationRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegisterEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegisterEntity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_Info_Sub(ProductInformationRegisterEntity pProductInformationRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_Info_Save(ProductInformationRegisterEntity pProductInformationRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_Info_Save(ProductInformationRegisterEntity pProductInformationRegisterEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 10),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegisterEntity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegisterEntity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegisterEntity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegisterEntity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegisterEntity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegisterEntity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegisterEntity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegisterEntity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegisterEntity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegisterEntity.PART_MANUFACTURER;
                pDataParametersA[10].Value = pProductInformationRegisterEntity.PART_COST;
                pDataParametersA[11].Value = pProductInformationRegisterEntity.PART_SAFE_STOCK;
                pDataParametersA[12].Value = pProductInformationRegisterEntity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegisterEntity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegisterEntity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegisterEntity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegisterEntity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegisterEntity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegisterEntity.IMAGE_NAME;
                pDataParametersA[19].Value = pProductInformationRegisterEntity.USE_YN;
                pDataParametersA[20].Value = pProductInformationRegisterEntity.PART_UNITCOST_CURRENCY_CODE;

                

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_I10", pDataParametersA);

                pProductInformationRegisterEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegisterEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegisterEntity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegisterEntity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegisterEntity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegisterEntity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegisterEntity.PART_CODE = pProductInformationRegisterEntity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegisterEntity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegisterEntity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegisterEntity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegisterEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegisterEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegisterEntity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegisterEntity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegisterEntity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_Info_Save(ProductInformationRegisterEntity pProductInformationRegisterEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegisterEntity pProductInformationRegisterEntity = new ProductInformationRegisterEntity();

                //pProductInformationRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductInformationRegister_T03Provider : EntityManager<ProductInformationRegister_T03Entity>
    {
        #region 생성자 - ProductInformationRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T03_Info_Mst(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T03_Info_Mst(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T03Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T03Entity.PART_NAME;
                pDataParameters[4].Value = pProductInformationRegister_T03Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInformationRegister_T03Entity.USE_YN;
                pDataParameters[6].Value = pProductInformationRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T03_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T03_Info_Mst(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - ProductInformationRegister_T03_Info_Sub(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T03_Info_Sub(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T03Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T03Entity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T03_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T03_Info_Sub(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T03_Info_Save(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T03_Info_Save(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                              //  new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 10),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                              //  new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T03Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T03Entity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegister_T03Entity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegister_T03Entity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegister_T03Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T03Entity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegister_T03Entity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegister_T03Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = pProductInformationRegister_T03Entity.PART_COST;
                pDataParametersA[11].Value = pProductInformationRegister_T03Entity.PART_SAFE_STOCK;
                pDataParametersA[12].Value = pProductInformationRegister_T03Entity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegister_T03Entity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegister_T03Entity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegister_T03Entity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegister_T03Entity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T03Entity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegister_T03Entity.IMAGE_NAME;
                pDataParametersA[19].Value = pProductInformationRegister_T03Entity.USE_YN;
               // pDataParametersA[20].Value = pProductInformationRegister_T03Entity.PART_UNITCOST_CURRENCY_CODE;



                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T03_I10", pDataParametersA);

                pProductInformationRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T03Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T03Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T03Entity.PART_CODE = pProductInformationRegister_T03Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T03Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T03Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T03Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T03_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T03Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T03Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T03Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T03Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T03Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T03_Info_Save(ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegister_T03Entity pProductInformationRegister_T03Entity = new ProductInformationRegister_T03Entity();

                //pProductInformationRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInformationRegister_T50Provider : EntityManager<ProductInformationRegister_T50Entity>
    {
        #region 생성자 - ProductInformationRegister_T50Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegister_T50Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T50_Info_Mst(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T50_Info_Mst(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T50Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T50Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T50Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T50Entity.PART_NAME;
                pDataParameters[4].Value = pProductInformationRegister_T50Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInformationRegister_T50Entity.USE_YN;
                pDataParameters[6].Value = pProductInformationRegister_T50Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T50_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T50_Info_Mst(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - ProductInformationRegister_T50_Info_Sub(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T50_Info_Sub(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T50Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T50Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T50Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T50Entity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T50_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T50_Info_Sub(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T50_Info_Save(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T50_Info_Save(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 10),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T50Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T50Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T50Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T50Entity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegister_T50Entity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegister_T50Entity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegister_T50Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T50Entity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegister_T50Entity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegister_T50Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = pProductInformationRegister_T50Entity.PART_COST;
                pDataParametersA[11].Value = pProductInformationRegister_T50Entity.PART_SAFE_STOCK;
                pDataParametersA[12].Value = pProductInformationRegister_T50Entity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegister_T50Entity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegister_T50Entity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegister_T50Entity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegister_T50Entity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T50Entity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegister_T50Entity.IMAGE_NAME;
                pDataParametersA[19].Value = pProductInformationRegister_T50Entity.USE_YN;
                pDataParametersA[20].Value = pProductInformationRegister_T50Entity.PART_UNITCOST_CURRENCY_CODE;



                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T50_I10", pDataParametersA);

                pProductInformationRegister_T50Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T50Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T50Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T50Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T50Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T50Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T50Entity.PART_CODE = pProductInformationRegister_T50Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T50Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T50Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T50Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T50_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T50Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T50Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T50Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T50Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T50Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T50_Info_Save(ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegister_T50Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegister_T50Entity pProductInformationRegister_T50Entity = new ProductInformationRegister_T50Entity();

                //pProductInformationRegister_T50Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegister_T50Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInformationRegister_T01Provider : EntityManager<ProductInformationRegister_T01Entity>
    {
        #region 생성자 - ProductInformationRegister_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T01_Info_Mst(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T01_Info_Mst(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T01Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T01Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T01Entity.VEND_PART_CODE;
                pDataParameters[4].Value = pProductInformationRegister_T01Entity.PART_NAME;
                pDataParameters[5].Value = pProductInformationRegister_T01Entity.PART_HIGH;
                pDataParameters[6].Value = pProductInformationRegister_T01Entity.PART_MIDDLE;
                pDataParameters[7].Value = pProductInformationRegister_T01Entity.PART_LOW;
                pDataParameters[8].Value = pProductInformationRegister_T01Entity.PART_START_DATE;
                pDataParameters[9].Value = pProductInformationRegister_T01Entity.PART_END_DATE;
                pDataParameters[10].Value = pProductInformationRegister_T01Entity.CONTRACT_NUMBER;
                pDataParameters[11].Value = pProductInformationRegister_T01Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T01_Info_Mst(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 단가 조회하기 - ProductInformationRegister_T01_Info_Sub(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T01_Info_Sub(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10)



                        };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T01Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductInformationRegister_T01Entity.PART_CODE;
                pDataParameters[3].Value = pProductInformationRegister_T01Entity.PART_REVISION_NO;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T01_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T01_Info_Sub(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 메인 정보 저장하기 - ProductInformationRegister_T01_Info_Save(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T01_Info_Save(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {

                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 4),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_contract_number_qty", MySqlDbType.Decimal, 18),
                                new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 4),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_contract_number_qty", SqlDbType.Decimal, 18),
                                new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;
                        }

                        pDataParametersA[0].Value = dt.Rows[a]["CRUD"].ToString();// pProductInformationRegister_T01Entity.CRUD;
                        pDataParametersA[1].Value = pProductInformationRegister_T01Entity.USER_CODE;
                        pDataParametersA[2].Value = dt.Rows[a]["PART_TYPE"].ToString();//pProductInformationRegister_T01Entity.PART_TYPE;
                        pDataParametersA[3].Value = dt.Rows[a]["PART_NAME"].ToString();//pProductInformationRegister_T01Entity.PART_NAME;
                        pDataParametersA[4].Value = dt.Rows[a]["PART_CODE"].ToString();//pProductInformationRegister_T01Entity.PART_CODE;
                        pDataParametersA[5].Value = dt.Rows[a]["PART_REVISION_NO"].ToString();

                        pDataParametersA[6].Value = dt.Rows[a]["VEND_PART_CODE"].ToString();//pProductInformationRegister_T01Entity.VEND_PART_CODE;
                        pDataParametersA[7].Value = dt.Rows[a]["PART_UNIT"].ToString();//pProductInformationRegister_T01Entity.PART_UNIT;
                        pDataParametersA[8].Value = dt.Rows[a]["PART_STANDARD"].ToString();//pProductInformationRegister_T01Entity.PART_STANDARD;
                        pDataParametersA[9].Value = dt.Rows[a]["PART_MANUFACTURER"].ToString();//pProductInformationRegister_T01Entity.PART_MANUFACTURER;

                        pDataParametersA[10].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();

                        pDataParametersA[11].Value = dt.Rows[a]["PART_COST"].ToString();//pProductInformationRegister_T01Entity.PART_COST;
                        pDataParametersA[12].Value = dt.Rows[a]["PART_SAFE_STOCK"].ToString();//pProductInformationRegister_T01Entity.PART_SAFE_STOCK;
                        pDataParametersA[13].Value = dt.Rows[a]["PART_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_START_DATE"].ToString();    //pProductInformationRegister_T01Entity.PART_START_DATE;
                        pDataParametersA[14].Value = dt.Rows[a]["PART_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_END_DATE"].ToString();//pProductInformationRegister_T01Entity.PART_END_DATE;
                        pDataParametersA[15].Value = dt.Rows[a]["SALE_YN"].ToString();//pProductInformationRegister_T01Entity.SALE_YN;
                        pDataParametersA[16].Value = dt.Rows[a]["PURC_YN"].ToString();//pProductInformationRegister_T01Entity.PURC_YN;
                        pDataParametersA[17].Value = dt.Rows[a]["OUTT_YN"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[18].Value = dt.Rows[a]["CONTRACT_ID"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[19].Value = dt.Rows[a]["CONTRACT_NUMBER_QTY"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[20].Value = dt.Rows[a]["PART_HIGH"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;
                        pDataParametersA[21].Value = dt.Rows[a]["PART_MIDDLE"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;
                        pDataParametersA[22].Value = dt.Rows[a]["PART_LOW"].ToString();//pProductInformationRegister_T01Entity.OUTT_YN;

                        pDataParametersA[23].Value = dt.Rows[a]["REMARK"].ToString();//pProductInformationRegister_T01Entity.REMARK;
                        pDataParametersA[24].Value = "";//pProductInformationRegister_T01Entity.IMAGE_NAME;
                        pDataParametersA[25].Value = dt.Rows[a]["USE_YN"].ToString();//pProductInformationRegister_T01Entity.USE_YN;

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T01_I10", pDataParametersA);

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pProductInformationRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                        pProductInformationRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                        pProductInformationRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                        pProductInformationRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                        pProductInformationRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
                    }
                }
               
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T01_Info_Save(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 단가 정보 저장하기 - ProductInformationRegister_T01_UnitCost_Save(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T01_UnitCost_Save(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {

                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //마스터 저장
                        IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;
                        }

                        if (pProductInformationRegister_T01Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                        {

                            pProductInformationRegister_T01Entity.PART_CODE = pProductInformationRegister_T01Entity.RTN_KEY;
                        }

                        pDataParametersA[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                        pDataParametersA[1].Value = pProductInformationRegister_T01Entity.USER_CODE;
                        pDataParametersA[2].Value = pProductInformationRegister_T01Entity.PART_CODE;
                        pDataParametersA[3].Value = pProductInformationRegister_T01Entity.PART_REVISION_NO;
                        pDataParametersA[4].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                        pDataParametersA[5].Value = dt.Rows[a]["VEND_CODE"].ToString();
                        pDataParametersA[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                        pDataParametersA[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                        pDataParametersA[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                        pDataParametersA[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                        pDataParametersA[10].Value = dt.Rows[a]["REMARK"].ToString();
                        pDataParametersA[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                        DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T01_I20", pDataParametersA);

                        if (pDataTableA.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }


                        pProductInformationRegister_T01Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                        pProductInformationRegister_T01Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                        pProductInformationRegister_T01Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                        pProductInformationRegister_T01Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                        pProductInformationRegister_T01Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T01_UnitCost_Save(ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegister_T01Entity pProductInformationRegister_T01Entity = new ProductInformationRegister_T01Entity();

                //pProductInformationRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInformationRegister_T02Provider : EntityManager<ProductInformationRegister_T02Entity>
    {
        #region 생성자 - ProductInformationRegister_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T02_Info_Mst(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T02_Info_Mst(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),

                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T02Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T02Entity.PART_NAME;
                pDataParameters[4].Value = pProductInformationRegister_T02Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInformationRegister_T02Entity.USE_YN;
                pDataParameters[6].Value = pProductInformationRegister_T02Entity.LANGUAGE_TYPE;
                pDataParameters[7].Value = pProductInformationRegister_T02Entity.VEND_PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T02_Info_Mst(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T02_Info_Mst(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T02_Info2(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                           



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_image_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = "R";
                pDataParameters[1].Value = pProductInformationRegister_T02Entity.IMAGE_NAME;
                pDataParameters[2].Value = pProductInformationRegister_T02Entity.PART_CODE;
                

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T02_Info_Mst(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - ProductInformationRegister_T02_Info_Sub(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T02_Info_Sub(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T02Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T02Entity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T02_Info_Sub(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T02_Info_Save(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T02_Info_Save(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 4),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_file_string", MySqlDbType.MediumBlob),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 4),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_file_string", SqlDbType.Binary),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T02Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T02Entity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegister_T02Entity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegister_T02Entity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegister_T02Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T02Entity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegister_T02Entity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegister_T02Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = Convert.ToDecimal(pProductInformationRegister_T02Entity.PART_COST);
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInformationRegister_T02Entity.PART_SAFE_STOCK);
                pDataParametersA[12].Value = pProductInformationRegister_T02Entity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegister_T02Entity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegister_T02Entity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegister_T02Entity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegister_T02Entity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T02Entity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegister_T02Entity.IMAGE_NAME;
                pDataParametersA[19].Value = pProductInformationRegister_T02Entity.FILE_STRING;
                pDataParametersA[20].Value = pProductInformationRegister_T02Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_I10", pDataParametersA);

                pProductInformationRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T02Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T02Entity.PART_CODE = pProductInformationRegister_T02Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T02Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T02Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T02Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T02Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T02_Info_Save(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T02_Info_Save(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T02_Info_Save2(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 4),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 4),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T02Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T02Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T02Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T02Entity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegister_T02Entity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegister_T02Entity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegister_T02Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T02Entity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegister_T02Entity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegister_T02Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = Convert.ToDecimal(pProductInformationRegister_T02Entity.PART_COST);
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInformationRegister_T02Entity.PART_SAFE_STOCK);
                pDataParametersA[12].Value = pProductInformationRegister_T02Entity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegister_T02Entity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegister_T02Entity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegister_T02Entity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegister_T02Entity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T02Entity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegister_T02Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_I11", pDataParametersA);

                pProductInformationRegister_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T02Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T02Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T02Entity.PART_CODE = pProductInformationRegister_T02Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T02Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T02Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T02Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T02Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T02_Info_Save(ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegister_T02Entity pProductInformationRegister_T02Entity = new ProductInformationRegister_T02Entity();

                //pProductInformationRegister_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInformationRegister_T06Provider : EntityManager<ProductInformationRegister_T06Entity>
    {
        #region 생성자 - ProductInformationRegister_T06Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegister_T06Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T06_Info_Mst(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T06Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T06_Info_Mst(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),

                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T06Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T06Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T06Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T06Entity.PART_NAME;
                pDataParameters[4].Value = pProductInformationRegister_T06Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInformationRegister_T06Entity.USE_YN;
                pDataParameters[6].Value = pProductInformationRegister_T06Entity.LANGUAGE_TYPE;
                pDataParameters[7].Value = pProductInformationRegister_T06Entity.VEND_PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T06_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T06_Info_Mst(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T06_Info_Mst(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T06Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T06_Info2(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)




                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_image_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = "R";
                pDataParameters[1].Value = pProductInformationRegister_T06Entity.IMAGE_NAME;
                pDataParameters[2].Value = pProductInformationRegister_T06Entity.PART_CODE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T06_Info_Mst(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - ProductInformationRegister_T06_Info_Sub(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T06_Info_Sub(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T06Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T06Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T06Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T06Entity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T06_Info_Sub(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T06_Info_Save(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T06_Info_Save(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 4),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_in_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_file_string", MySqlDbType.MediumBlob),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 4),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_in_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_image_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_file_string", SqlDbType.Binary),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T06Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T06Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T06Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T06Entity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegister_T06Entity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegister_T06Entity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegister_T06Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T06Entity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegister_T06Entity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegister_T06Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = Convert.ToDecimal(pProductInformationRegister_T06Entity.PART_COST);
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInformationRegister_T06Entity.PART_IN_COST);
                pDataParametersA[12].Value = pProductInformationRegister_T06Entity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegister_T06Entity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegister_T06Entity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegister_T06Entity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegister_T06Entity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T06Entity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegister_T06Entity.IMAGE_NAME;
                pDataParametersA[19].Value = pProductInformationRegister_T06Entity.FILE_STRING;
                pDataParametersA[20].Value = pProductInformationRegister_T06Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T06_I10", pDataParametersA);

                pProductInformationRegister_T06Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T06Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T06Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T06Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T06Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T06Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T06Entity.PART_CODE = pProductInformationRegister_T06Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T06Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T06Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T06Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T06Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T06Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T06Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T06Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T06Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T06_Info_Save(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T06_Info_Save(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T06_Info_Save2(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 4),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_in_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_vend", MySqlDbType.VarChar, 50),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 4),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_in_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_vend", SqlDbType.NVarChar, 50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T06Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T06Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T06Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T06Entity.PART_NAME;
                pDataParametersA[4].Value = pProductInformationRegister_T06Entity.PART_CODE;
                pDataParametersA[5].Value = pProductInformationRegister_T06Entity.PART_REVISION_NO;
                pDataParametersA[6].Value = pProductInformationRegister_T06Entity.VEND_PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T06Entity.PART_UNIT;
                pDataParametersA[8].Value = pProductInformationRegister_T06Entity.PART_STANDARD;
                pDataParametersA[9].Value = pProductInformationRegister_T06Entity.PART_MANUFACTURER;
                pDataParametersA[10].Value = Convert.ToDecimal(pProductInformationRegister_T06Entity.PART_COST);
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInformationRegister_T06Entity.PART_IN_COST);
                pDataParametersA[12].Value = pProductInformationRegister_T06Entity.PART_START_DATE;
                pDataParametersA[13].Value = pProductInformationRegister_T06Entity.PART_END_DATE;
                pDataParametersA[14].Value = pProductInformationRegister_T06Entity.SALE_YN;
                pDataParametersA[15].Value = pProductInformationRegister_T06Entity.PURC_YN;
                pDataParametersA[16].Value = pProductInformationRegister_T06Entity.OUTT_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T06Entity.REMARK;
                pDataParametersA[18].Value = pProductInformationRegister_T06Entity.USE_YN;
                pDataParametersA[19].Value = pProductInformationRegister_T06Entity.VEND_CODE2;
                
                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T06_I11", pDataParametersA);

                pProductInformationRegister_T06Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T06Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T06Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T06Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T06Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T06Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T06Entity.PART_CODE = pProductInformationRegister_T06Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T06Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T06Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T06Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T02_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T06Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T06Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T06Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T06Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T06Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T06_Info_Save(ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegister_T06Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegister_T06Entity pProductInformationRegister_T06Entity = new ProductInformationRegister_T06Entity();

                //pProductInformationRegister_T06Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegister_T06Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }


    public class ucProductionPartListPopupProvider : EntityManager<ucProductionPartListPopupEntity>
    {
        #region 생성자 - ucProductionPartListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucProductionPartListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucProductionPartListPopup_Info_Return(ucProductionPartListPopupEntity pucProductionPartListPopupEntity)

        public DataTable ucProductionPartListPopup_Info_Return(ucProductionPartListPopupEntity pucProductionPartListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pucProductionPartListPopupEntity.CRUD;
                pDataParameters[1].Value = pucProductionPartListPopupEntity.VEND_PART_CODE;
                pDataParameters[2].Value = pucProductionPartListPopupEntity.PART_NAME;
                pDataParameters[3].Value = pucProductionPartListPopupEntity.PART_REVISION_NO;
                pDataParameters[4].Value = pucProductionPartListPopupEntity.PART_HIGH;
                pDataParameters[5].Value = pucProductionPartListPopupEntity.PART_MIDDLE;
                pDataParameters[6].Value = pucProductionPartListPopupEntity.PART_LOW;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucProductionPartListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucProductionPartListPopup_Info_Return(ucProductionPartListPopupEntity pucProductionPartListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucProductionPartListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucProductionPartListPopupEntity pucProductionPartListPopupEntity = new ucProductionPartListPopupEntity();
                return pucProductionPartListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }

    public class ucVendCostInfoListPopupProvider : EntityManager<ucVendCostInfoListPopupEntity>
    {
        #region 생성자 - ucVendCostInfoListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucVendCostInfoListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucVendCostInfoListPopup_Info_Return(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucVendCostInfoListPopup_Info_Return(ucVendCostInfoListPopupEntity pucVendCostInfoListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pucVendCostInfoListPopupEntity.CRUD;
                pDataParameters[1].Value = pucVendCostInfoListPopupEntity.PART_CODE;
                pDataParameters[2].Value = pucVendCostInfoListPopupEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pucVendCostInfoListPopupEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucVendCostInfoListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucVendCostInfoListPopup_Info_Return(ucVendCostInfoListPopupEntity pucVendCostInfoListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ucVendCostInfoListPopup_Info_Save(ucVendCostInfoListPopupEntity pucVendCostInfoListPopupEntity, DataTable pDataTable)

        public bool ucVendCostInfoListPopup_Info_Save(ucVendCostInfoListPopupEntity pucVendCostInfoListPopupEntity, DataTable pDataTable)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (pDataTable != null)
                {
                    pCount = pDataTable.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;

                        }

                        pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
                        pDataParameters[1].Value = pucVendCostInfoListPopupEntity.USER_CODE;

                        pDataParameters[2].Value = pucVendCostInfoListPopupEntity.PART_CODE;
                        pDataParameters[3].Value = pucVendCostInfoListPopupEntity.PART_REVISION_NO;
                        pDataParameters[4].Value = pDataTable.Rows[a]["VEND_CODE"].ToString();
                        pDataParameters[5].Value = pDataTable.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                        pDataParameters[6].Value = pDataTable.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                        pDataParameters[7].Value = pDataTable.Rows[a]["PART_UNITCOST"].ToString();
                        pDataParameters[8].Value = pDataTable.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(pDataTable.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : pDataTable.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                        pDataParameters[9].Value = pDataTable.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(pDataTable.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : pDataTable.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                        pDataParameters[10].Value = pDataTable.Rows[a]["REMARK"].ToString();
                        pDataParameters[11].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

                        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucVendCostInfoListPopup_I10", pDataParameters);

                        if (pDataTableB.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pucVendCostInfoListPopupEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                        pucVendCostInfoListPopupEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ucVendCostInfoListPopup_Info_Save(ucVendCostInfoListPopupEntity pucVendCostInfoListPopupEntity, DataTable pDataTable)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장실패
                else
                    _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucVendCostInfoListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucVendCostInfoListPopupEntity pucVendCostInfoListPopupEntity = new ucVendCostInfoListPopupEntity();
                pucVendCostInfoListPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucVendCostInfoListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }

    public class ucPartDocumentListPopupProvider : EntityManager<ucPartDocumentListPopupEntity>
    {
        #region 생성자 - ucPartDocumentListPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucPartDocumentListPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 메인 조회하기 ucPartDocumentListPopup_Info_Main(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_Info_Main(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)


                };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopupEntity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopupEntity.PART_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopupEntity.PART_REVISION_NO;
                pDataParameters[3].Value = pucPartDocumentListPopupEntity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_Info_Main(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회하기 ucPartDocumentListPopup_Info_Sub(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_Info_Sub(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_document_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_document_ver", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_document_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_document_ver", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopupEntity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopupEntity.DOCUMENT_TYPE;
                pDataParameters[2].Value = pucPartDocumentListPopupEntity.DOCUMENT_NAME;
                pDataParameters[3].Value = pucPartDocumentListPopupEntity.DOCUMENT_VER;

                pDataParameters[4].Value = pucPartDocumentListPopupEntity.CONTRACT_ID;
                pDataParameters[5].Value = pucPartDocumentListPopupEntity.CONTRACT_NUMBER;
                pDataParameters[6].Value = pucPartDocumentListPopupEntity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_R20", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_Info_Sub(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ucPartDocumentListPopup_Info_Save(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity, DataTable pDataTable)
        public bool ucPartDocumentListPopup_Info_Save(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity, DataTable pDataTable)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (pDataTable != null)
                {
                    pCount = pDataTable.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 15),
                                        new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_document_id", SqlDbType.NVarChar, 15),
                                        new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                };
                                break;

                        }

                        pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
                        pDataParameters[1].Value = pucPartDocumentListPopupEntity.USER_CODE;

                        pDataParameters[2].Value = pucPartDocumentListPopupEntity.PART_CODE;
                        pDataParameters[3].Value = pucPartDocumentListPopupEntity.PART_REVISION_NO;
                        pDataParameters[4].Value = pDataTable.Rows[a]["DOCUMENT_ID"].ToString();
                        pDataParameters[5].Value = pDataTable.Rows[a]["DOCUMENT_TYPE"].ToString();
                        pDataParameters[6].Value = pDataTable.Rows[a]["REMARK"].ToString();
                        pDataParameters[7].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

                        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_I10", pDataParameters);

                        if (pDataTableB.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }

                        pucPartDocumentListPopupEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                        pucPartDocumentListPopupEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_Info_Save(ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity, DataTable pDataTable)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장실패
                else
                    _pDBManager.CommitTransaction();
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucPartDocumentListPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucPartDocumentListPopupEntity pucPartDocumentListPopupEntity = new ucPartDocumentListPopupEntity();
                pucPartDocumentListPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucPartDocumentListPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }

    public class ucPartDocumentListPopup_T01Provider : EntityManager<ucPartDocumentListPopup_T01Entity>
    {
        #region 생성자 - ucPartDocumentListPopup_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucPartDocumentListPopup_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 메인 조회하기 ucPartDocumentListPopup_T01_Info_Main(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_T01_Info_Main(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 400),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 100),                            
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 400),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),


                };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopup_T01Entity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopup_T01Entity.PART_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopup_T01Entity.PART_NAME;
                pDataParameters[3].Value = pucPartDocumentListPopup_T01Entity.VEND_PART_CODE;
                pDataParameters[4].Value = pucPartDocumentListPopup_T01Entity.USE_YN;
                //pDataParameters[3].Value = pucPartDocumentListPopup_T01Entity.USE_YN;
                pDataParameters[5].Value = pucPartDocumentListPopup_T01Entity.PART_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T01_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_T01_Info_Main(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 서브 조회하기 ucPartDocumentListPopup_T01_Info_Sub(string pCRUD, string pPART_CODE, string pPART_REVISION_NO, string pLANGUAGE_TYPE)

        public DataTable ucPartDocumentListPopup_T01_Info_Sub(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                            //new MySqlParameter("@v_document_name", MySqlDbType.VarChar, 100),
                            //new MySqlParameter("@v_document_ver", MySqlDbType.VarChar, 10),
                            //new MySqlParameter("@v_contract_id", MySqlDbType.VarChar, 15),
                            //new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 15),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                            //new SqlParameter("@v_document_name", SqlDbType.NVarChar, 100),
                            //new SqlParameter("@v_document_ver", SqlDbType.NVarChar, 10),
                            //new SqlParameter("@v_contract_id", SqlDbType.NVarChar, 15),
                            //new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 15),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pucPartDocumentListPopup_T01Entity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopup_T01Entity.PART_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE;
                //pDataParameters[2].Value = pucPartDocumentListPopup_T01Entity.DOCUMENT_NAME;
                //pDataParameters[3].Value = pucPartDocumentListPopup_T01Entity.DOCUMENT_VER;

                //pDataParameters[4].Value = pucPartDocumentListPopup_T01Entity.CONTRACT_ID;
                //pDataParameters[5].Value = pucPartDocumentListPopup_T01Entity.CONTRACT_NUMBER;
                pDataParameters[3].Value = pucPartDocumentListPopup_T01Entity.USE_YN;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T01_R20", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucPartDocumentListPopup_T01_Info_Sub(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        //#region 정보 저장하기 - ucPartDocumentListPopup_T01_Info_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity, DataTable pDataTable)
        //public bool ucPartDocumentListPopup_T01_Info_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity, DataTable pDataTable)
        //{
        //    bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
        //    int pCount = 0;
        //    _pDBManager.BeginTransaction();

        //    try
        //    {
        //        if (pDataTable != null)
        //        {
        //            pCount = pDataTable.Rows.Count;

        //            for (int a = 0; a < pCount; a++)
        //            {
        //                IDataParameter[] pDataParameters = null;

        //                switch (_pDBManager.DBManagerType.ToString())
        //                {
        //                    case "MySql":
        //                        pDataParameters = new IDataParameter[]
        //                        {
        //                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
        //                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
        //                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
        //                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
        //                                new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 15),
        //                                new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
        //                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
        //                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
        //                        };
        //                        break;

        //                    case "SQLServer":
        //                        pDataParameters = new IDataParameter[]
        //                        {
        //                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
        //                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
        //                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
        //                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
        //                                new SqlParameter("@v_document_id", SqlDbType.NVarChar, 15),
        //                                new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
        //                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
        //                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
        //                        };
        //                        break;

        //                }

        //                pDataParameters[0].Value = pDataTable.Rows[a]["CRUD"].ToString().ToUpper();
        //                pDataParameters[1].Value = pucPartDocumentListPopup_T01Entity.USER_CODE;

        //                pDataParameters[2].Value = pucPartDocumentListPopup_T01Entity.PART_CODE;
        //                pDataParameters[3].Value = pucPartDocumentListPopup_T01Entity.PART_REVISION_NO;
        //                pDataParameters[4].Value = pDataTable.Rows[a]["DOCUMENT_ID"].ToString();
        //                pDataParameters[5].Value = pDataTable.Rows[a]["DOCUMENT_TYPE"].ToString();
        //                pDataParameters[6].Value = pDataTable.Rows[a]["REMARK"].ToString();
        //                pDataParameters[7].Value = pDataTable.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : pDataTable.Rows[a]["USE_YN"].ToString().ToUpper();

        //                DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T01_I10", pDataParameters);

        //                if (pDataTableB.Rows[0][0].ToString() != "00")
        //                {
        //                    pErrorYN = true;
        //                }

        //                pucPartDocumentListPopup_T01Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
        //                pucPartDocumentListPopup_T01Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

        //            }
        //        }
        //    }
        //    catch (ExceptionManager pExceptionManager)
        //    {
        //        pErrorYN = true;

        //        throw pExceptionManager;
        //    }
        //    catch (Exception pException)
        //    {
        //        pErrorYN = true;

        //        throw new ExceptionManager
        //        (
        //            this,
        //            "ucPartDocumentListPopup_T01_Info_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity, DataTable pDataTable)",
        //            pException
        //        );
        //    }
        //    finally
        //    {
        //        if (pErrorYN)
        //            _pDBManager.RollbackTransaction();  // 저장실패
        //        else
        //            _pDBManager.CommitTransaction();
        //    }

        //    return pErrorYN;
        //}

        //#endregion

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucPartDocumentListPopup_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity = new ucPartDocumentListPopup_T01Entity();
                pucPartDocumentListPopup_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucPartDocumentListPopup_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion

        #region 정보 저장하기 - Document_Info_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pucPartDocumentListPopup_T01Entity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Document_Info_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();

            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        IDataParameter[] pDataParameters = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParameters = new IDataParameter[]
                                {

                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_seq", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_file_name_1", MySqlDbType.VarChar, 500),
                                new MySqlParameter("@v_file_name_2", MySqlDbType.VarChar, 150),
                                new MySqlParameter("@v_extension", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000)

                                };
                                break;

                            case "SQLServer":
                                pDataParameters = new IDataParameter[]
                                {

                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_document_id", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_seq", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_file_name_1", SqlDbType.NVarChar, 500),
                                new SqlParameter("@v_file_name_2", SqlDbType.NVarChar, 150),
                                new SqlParameter("@v_extension", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000)

                                };
                                break;
                        }


                        pDataParameters[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();

                        pDataParameters[1].Value = pucPartDocumentListPopup_T01Entity.USER_CODE;
                        pDataParameters[2].Value = CoFAS_ConvertManager.StringEmpty2DbNull(dt.Rows[a]["DOCUMENT_ID"].ToString().ToUpper());
                        pDataParameters[3].Value = dt.Rows[a]["DOCUMENT_TYPE"].ToString();
                        pDataParameters[4].Value = dt.Rows[a]["PART_CODE"].ToString();
                        pDataParameters[5].Value = CoFAS_ConvertManager.StringEmpty2DbNull(dt.Rows[a]["SEQ"].ToString());
                        pDataParameters[6].Value = dt.Rows[a]["FILE_NAME_1"].ToString();
                        pDataParameters[7].Value = dt.Rows[a]["DOCUMENT_ID"].ToString().ToUpper() + dt.Rows[a]["EXTENSION"].ToString();//dt.Rows[a]["FILE_NAME_2"].ToString();
                        pDataParameters[8].Value = dt.Rows[a]["EXTENSION"].ToString();
                        pDataParameters[9].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper();
                        pDataParameters[10].Value = dt.Rows[a]["REMARK"].ToString();


                        //pDataParameters[4].Value = CoFAS_ConvertManager.StringEmpty2DbNull(dt.Rows[a]["SEQ"].ToString());
                        //pDataParameters[5].Value = dt.Rows[a]["DOCUMENT_NAME"].ToString();
                        //pDataParameters[6].Value = dt.Rows[a]["DOCUMENT_VER"].ToString();
                        //pDataParameters[7].Value = dt.Rows[a]["DOCUMENT_FILE_NAME"].ToString();
                        //pDataParameters[8].Value = dt.Rows[a]["CONTRACT_ID"].ToString();
                        //pDataParameters[9].Value = dt.Rows[a]["REMARK"].ToString();
                        //pDataParameters[10].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper();                   

                        DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T01_I10", pDataParameters);

                        if (pDataTable.Rows[0][0].ToString() != "00")
                        {
                            pErrorYN = true;
                        }
                        else
                        {
                            pucPartDocumentListPopup_T01Entity.CRUD = dt.Rows[a]["CRUD"].ToString().ToUpper();


                            //pucPartDocumentListPopup_T01Entity.DOCUMENT_BEFROE_FILE_NAME = dt.Rows[a]["FILE_NAME_1"].ToString(); //dt.Rows[a]["DOCUMENT_BEFROE_FILE_NAME"].ToString();
                            if (pucPartDocumentListPopup_T01Entity.CRUD == "U")
                            {
                                pucPartDocumentListPopup_T01Entity.FILE_NAME_2 = dt.Rows[a]["PART_CODE"].ToString() + dt.Rows[a]["SEQ"].ToString() + dt.Rows[a]["EXTENSION"].ToString();
                            }

                            else
                            {
                                pucPartDocumentListPopup_T01Entity.FILE_NAME_2 = dt.Rows[a]["PART_CODE"].ToString() + pDataTable.Rows[0]["rtn_seq"].ToString() + dt.Rows[a]["EXTENSION"].ToString();
                            }

                            pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL = dt.Rows[a]["DIRECTORY"].ToString() + "\\" + dt.Rows[a]["FILE_NAME_1"].ToString();
                            //pucPartDocumentListPopup_T01Entity.
                            pErrorYN = File_Save(pucPartDocumentListPopup_T01Entity) == 0 ? false : true;
                        }

                        pucPartDocumentListPopup_T01Entity.ERR_NO = pDataTable.Rows[0]["ERR_NO"].ToString();
                        pucPartDocumentListPopup_T01Entity.ERR_MSG = pDataTable.Rows[0]["ERR_MSG"].ToString();
                        pucPartDocumentListPopup_T01Entity.RTN_KEY = pDataTable.Rows[0]["RTN_KEY"].ToString();
                        pucPartDocumentListPopup_T01Entity.RTN_SEQ = pDataTable.Rows[0]["RTN_SEQ"].ToString();
                        pucPartDocumentListPopup_T01Entity.RTN_OTHERS = pDataTable.Rows[0]["RTN_OTHERS"].ToString();
                    }



                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Document_Info_Save(UcPartDocumentListPopup_T01Entity pUcPartDocumentListPopup_T01Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN == true)
                    _pDBManager.RollbackTransaction();
                else
                    _pDBManager.CommitTransaction();

            }

            return pErrorYN;
        }

        #endregion

        #region OPENBUTTON으로 파일,파일명 삭제 - Document_File_Delete(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Document_File_Delete(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {                                

                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_document_id", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_document_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_seq", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_file_name_1", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_file_name_2", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_extension", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_document_id", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_document_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_seq", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_file_name_1", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_file_name_2", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_extension", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000)
                        };
                        break;
                }

                
                pDataParameters[0].Value = pucPartDocumentListPopup_T01Entity.CRUD;
                pDataParameters[1].Value = pucPartDocumentListPopup_T01Entity.USER_CODE;
                pDataParameters[2].Value = pucPartDocumentListPopup_T01Entity.DOCUMENT_ID;
                pDataParameters[3].Value = pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE;
                pDataParameters[4].Value = pucPartDocumentListPopup_T01Entity.PART_CODE;
                pDataParameters[5].Value = pucPartDocumentListPopup_T01Entity.SEQ;
                pDataParameters[6].Value = pucPartDocumentListPopup_T01Entity.FILE_NAME_1;
                pDataParameters[7].Value = pucPartDocumentListPopup_T01Entity.FILE_NAME_2;
                pDataParameters[8].Value = pucPartDocumentListPopup_T01Entity.EXTENSION;
                pDataParameters[9].Value = pucPartDocumentListPopup_T01Entity.USE_YN;
                pDataParameters[10].Value = pucPartDocumentListPopup_T01Entity.REMARK;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucPartDocumentListPopup_T01_I10", pDataParameters);

                if (pDataTable.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

                pucPartDocumentListPopup_T01Entity.ERR_NO = pDataTable.Rows[0]["ERR_NO"].ToString();
                pucPartDocumentListPopup_T01Entity.ERR_MSG = pDataTable.Rows[0]["ERR_MSG"].ToString();
                pucPartDocumentListPopup_T01Entity.RTN_KEY = pDataTable.Rows[0]["RTN_KEY"].ToString();
                pucPartDocumentListPopup_T01Entity.RTN_SEQ = pDataTable.Rows[0]["RTN_SEQ"].ToString();
                pucPartDocumentListPopup_T01Entity.RTN_OTHERS = pDataTable.Rows[0]["RTN_OTHERS"].ToString();

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Document_File_Delete(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region ○ 파일 저장 - File_Save(string qFileName, string qFullFileName, string qBEFROE_FILENAME)
        private int File_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)//,  string qFileName, string qFullFileName, string qBEFROE_FILENAME)
        {
            try
            {
                if(pucPartDocumentListPopup_T01Entity.FILE_FLAG != "F")
                {
                   
                    return 0;
                }
                // return 값
                // 1 : FileName == ""
                // 2 : FTP 연결 확인
                // 0 : 정상

                string strFTP_PATH = "";

                if (pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL == "") return 1;

                //byte[] data = CoFAS_ConvertManager.GetFileData(pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL);                
                //strFTP_PATH = string.Format(@"{0}{1}/", pucPartDocumentListPopup_T01Entity.FTP_PATH, "FILE_DATA");

                if (pucPartDocumentListPopup_T01Entity.CRUD == "C" && pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL != null) // 저장, 추가 생성
                {
                    byte[] data = CoFAS_ConvertManager.GetFileData(pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL);
                    strFTP_PATH = string.Format(@"{0}{1}/", pucPartDocumentListPopup_T01Entity.FTP_PATH, "FILE_DATA");

                    //if (CoFAS_FTPManager.FTPUpload_DataofByte_CheckDirectory(pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME, pDocumentInfoRegisterEntity.FTP_ID, pDocumentInfoRegisterEntity.FTP_PW, strFTP_PATH, pDocumentInfoRegisterEntity.DOCUMENT_TYPE, data)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                    if (CoFAS_FTPManager.FTPUpload_DataofStream_CheckDirectory(pucPartDocumentListPopup_T01Entity.FILE_NAME_2, pucPartDocumentListPopup_T01Entity.FTP_ID, pucPartDocumentListPopup_T01Entity.FTP_PW, strFTP_PATH, pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE, data, pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                    {
                        //CoFAS_DevExpressManager.ShowInformationMessage("저장 되었습니다.");
                        //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_SAVE);
                    }
                    else
                    {
                        //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                        //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                        return 2;
                    }
                }
                else if (pucPartDocumentListPopup_T01Entity.CRUD == "U" || pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL == null) // 업데이트
                {
                    byte[] data = CoFAS_ConvertManager.GetFileData(pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL);
                    strFTP_PATH = string.Format(@"{0}{1}/", pucPartDocumentListPopup_T01Entity.FTP_PATH, "FILE_DATA");

                    //업데이트는, 이전파일명으로 삭제하기
                    //qFileName -> _pFTP_BEFROE_FILENAME
                    //if (CoFAS_FTPManager.FTPDelete(qFileName, strFTP_PATH + _pSheetInfoRegisterEntity.WINDOW_NAME + "/", _pFTP_ID, _pFTP_PW))
                    CoFAS_FTPUtilManager qFTPUtil = new CoFAS_FTPUtilManager(strFTP_PATH + pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE + "/", pucPartDocumentListPopup_T01Entity.FTP_ID, pucPartDocumentListPopup_T01Entity.FTP_PW);

                    // if (pucPartDocumentListPopup_T01Entity.DOCUMENT_BEFROE_FILE_NAME == "") return 1;

                    if (CoFAS_FTPManager.FTPDelete(pucPartDocumentListPopup_T01Entity.FILE_NAME_2, strFTP_PATH + pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE + "/", pucPartDocumentListPopup_T01Entity.FTP_ID, pucPartDocumentListPopup_T01Entity.FTP_PW))
                    {
                        //if (CoFAS_FTPManager.FTPUpload_DataofByte_CheckDirectory_Encoding(pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME, pDocumentInfoRegisterEntity.FTP_ID, pDocumentInfoRegisterEntity.FTP_PW, strFTP_PATH, "DATA", data, pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        if (CoFAS_FTPManager.FTPUpload_DataofStream_CheckDirectory_Encoding(pucPartDocumentListPopup_T01Entity.FILE_NAME_2, pucPartDocumentListPopup_T01Entity.FTP_ID, pucPartDocumentListPopup_T01Entity.FTP_PW, strFTP_PATH, pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE, data, pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        {
                            //oFAS_DevExpressManager.ShowInformationMessage("수정 되었습니다.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_SAVE);
                        }

                        else
                        {
                            //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                            return 2;
                        }
                    }
                    //파일이 없는지 체크
                    else if (!qFTPUtil.IsFTPFileExsit(strFTP_PATH + pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE + "/" + pucPartDocumentListPopup_T01Entity.FILE_NAME_2))
                    {
                        //정상 처리

                        //if (CoFAS_FTPManager.FTPUpload_DataofByte_CheckDirectory_Encoding(pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME, pDocumentInfoRegisterEntity.FTP_ID, pDocumentInfoRegisterEntity.FTP_PW, strFTP_PATH, "DATA", data, pDocumentInfoRegisterEntity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        if (CoFAS_FTPManager.FTPUpload_DataofStream_CheckDirectory_Encoding(pucPartDocumentListPopup_T01Entity.FILE_NAME_2, pucPartDocumentListPopup_T01Entity.FTP_ID, pucPartDocumentListPopup_T01Entity.FTP_PW, strFTP_PATH, pucPartDocumentListPopup_T01Entity.DOCUMENT_TYPE, data, pucPartDocumentListPopup_T01Entity.DOCUMENT_FILE_NAME_FULL)) // _pListofManagementEntity.WINDOW_NAME + _pListofManagementEntity.RTN_KEY + _pFileName
                        {
                            //CoFAS_DevExpressManager.ShowInformationMessage("수정 되었습니다.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_SAVE);
                        }
                        else
                        {
                            //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                            //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                            return 2;
                        }
                    }
                    else
                    {
                        //CoFAS_DevExpressManager.ShowInformationMessage("FTP 연결을 확인해주세요.");
                        //CoFAS_DevExpressManager.ShowInformationMessage(_pMSG_PLZ_CONNECT_FTP);
                        return 2;
                    }

                }

            }
            //catch (ExceptionManager pExceptionManager)
            //{
            //    CoFAS_DevExpressManager.ShowErrorMessage(string.Format("{0}\n{1}", pExceptionManager.Exception.Message.ToString(), pExceptionManager.TargetSite.ToString()));
            //}
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "File_Save(ucPartDocumentListPopup_T01Entity pucPartDocumentListPopup_T01Entity)",
                    pException
                );
            }
            finally
            {
                pucPartDocumentListPopup_T01Entity.FILE_FLAG = "";

            }

            return 0;
        }
        #endregion

    }

    public class ucProductStockInfoPopupProvider : EntityManager<ucProductStockInfoPopupEntity>
    {
        #region 생성자 - ucProductStockInfoPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucProductStockInfoPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ucProductStockInfoPopupEntity pucProductStockInfoPopupEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet ucInspectRequestInfo_Return(string pCRUD, string pPART_CODE, string pPART_NAME)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pPART_CODE;
                pDataParameters[2].Value = pPART_NAME;

                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucProductStockInfoPopup_R10", pDataParameters);


                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ucProductStockInfoPopupEntity pucProductStockInfoPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ucProductStockInfoPopup_Save(ucProductStockInfoPopupEntity pucProductStockInfoPopupEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "U")
                        {
                            if (Convert.ToDecimal(dt.Rows[a]["INPUT_QTY"].ToString()) > 0)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersA = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 10)
                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 10),

                                        };
                                        break;
                                }

                                pDataParametersA[0].Value = pucProductStockInfoPopupEntity.CRUD;
                                pDataParametersA[1].Value = pucProductStockInfoPopupEntity.USER_CODE;
                                pDataParametersA[2].Value = dt.Rows[a]["INOUT_ID"].ToString().ToUpper();
                                pDataParametersA[3].Value = dt.Rows[a]["INPUT_QTY"].ToString().ToUpper();
                                pDataParametersA[4].Value = "";
                                pDataParametersA[5].Value = "Y";
                                pDataParametersA[6].Value = pucProductStockInfoPopupEntity.INOUT_CODE;

                                //pDataParametersA[0].Value = pucProductStockInfoPopupEntity.CRUD;
                                //pDataParametersA[1].Value = pucProductStockInfoPopupEntity.USER_CODE;
                                //pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                                //pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                                //pDataParametersA[4].Value = DateTime.Now.ToString("yyyyMMdd");


                                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MaterialOutRegister_T01_I10", pDataParametersA);

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                pucProductStockInfoPopupEntity.ERR_NO = pDataTableA.Rows[0]["p_err_no"].ToString();
                                pucProductStockInfoPopupEntity.ERR_MSG = pDataTableA.Rows[0]["p_err_msg"].ToString();
                                pucProductStockInfoPopupEntity.RTN_KEY = pDataTableA.Rows[0]["p_rtn_key"].ToString();
                                pucProductStockInfoPopupEntity.RTN_SEQ = pDataTableA.Rows[0]["p_rtn_seq"].ToString();
                                pucProductStockInfoPopupEntity.RTN_OTHERS = pDataTableA.Rows[0]["p_rtn_others"].ToString();

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ucProductStockInfoPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucProductStockInfoPopupEntity pucProductStockInfoPopupEntity = new ucProductStockInfoPopupEntity();

                pucProductStockInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pucProductStockInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ucContractInfoPopupProvider : EntityManager<ucContractInfoPopupEntity>
    {
        #region 생성자 - ucContractInfoPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucContractInfoPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #endregion

        #region 정보 조회하기 ucContractInfoPopup_Info_Return(ucContractInfoPopupEntity pucContractInfoPopupEntity)

        public DataTable ucContractInfoPopup_Info_Return(ucContractInfoPopupEntity pucContractInfoPopupEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_contract_number", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_contract_date_from", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_contract_date_to", MySqlDbType.VarChar, 8)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_contract_number", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_contract_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_contract_date_to", SqlDbType.NVarChar, 8)
                        };
                            break;
                }

                pDataParameters[0].Value = pucContractInfoPopupEntity.CRUD;
                pDataParameters[1].Value = pucContractInfoPopupEntity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pucContractInfoPopupEntity.CONTRACT_NUMBER;
                pDataParameters[3].Value = pucContractInfoPopupEntity.CONTRACT_DATE_FROM;
                pDataParameters[4].Value = pucContractInfoPopupEntity.CONTRACT_DATE_TO;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ucContractInfoPopup_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ucContractInfoPopup_Info_Return(ucContractInfoPopupEntity pucContractInfoPopupEntity)",
                    pException
                );
            }
        }

        #endregion
      
        #region 개체 구하기 - GetEntity(pDataRow)

        public override ucContractInfoPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucContractInfoPopupEntity pucContractInfoPopupEntity = new ucContractInfoPopupEntity();
                pucContractInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드
                return pucContractInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }

        }

        #endregion
    }

    public class ProductBOMRegisterProvider : EntityManager<ProductBOMRegisterEntity>
    {
        #region 생성자 - ProductBOMRegisterProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductBOMRegisterProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductBOMRegister_Info_Mst(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_Left(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductBOMRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegisterEntity.PART_NAME;
                pDataParameters[3].Value = pProductBOMRegisterEntity.USE_YN;
                pDataParameters[4].Value = pProductBOMRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Mst(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_Info_Main(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_Main(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductBOMRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegisterEntity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegisterEntity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Main(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_Info_BOM(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_BOM(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductBOMRegisterEntity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegisterEntity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_BOM(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 신규용 조회하기 - ProductBOMRegister_Info_Main_Sub(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_Main_Sub(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Main(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion


        #region 구성 조회하기 서브1 - ProductBOMRegister_Info_SUB01(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_SUB01(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;
                pDataParameters[1].Value = pProductBOMRegisterEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R21", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_SUB01(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브2 - ProductBOMRegister_Info_SUB02(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_SUB02(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R22", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_SUB02(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브3 - ProductBOMRegister_Info_SUB03(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_SUB03(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R23", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_SUB03(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브4 - ProductBOMRegister_Info_SUB04(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_SUB04(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R24", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_SUB04(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브5 - ProductBOMRegister_Info_SUB05(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_SUB05(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R25", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_SUB05(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성된 BOM (반제품) 조회하기 - ProductBOMRegister_Configuration_Info(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Configuration_Info(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegisterEntity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Configuration_Info(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 리비전 중복검사 - ProductBOMRegister_Info_Main(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_Info_Duplicate_chk(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)
        {
            try
            {
                bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
                int pCount = 0;

                //REVISION_NO 중복 검사
                //마스터 저장
                IDataParameter[] pDataParametersB = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersB = new IDataParameter[]
                        {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_part_code_mst             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_revision_no              ".Trim(), MySqlDbType.VarChar, 50)


                        };
                        break;

                    case "SQLServer":
                        pDataParametersB = new IDataParameter[]
                        {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_part_code_mst             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_revision_no              ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }
                pDataParametersB[0].Value = pProductBOMRegisterEntity.CRUD;
                pDataParametersB[1].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersB[2].Value = dt.Rows[0]["REVISION_NO"].ToString();

                DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_R60", pDataParametersB);
                

                return pDataTableB;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Main(ProductBOMRegisterEntity pProductBOMRegisterEntity)",
                    pException
                );
            }
        }

        #endregion
        #region 정보 저장하기 - ProductBOMRegister_Info_Save(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_Info_Save(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
               

                //마스터 저장
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    pCount = i;
                    IDataParameter[] pDataParametersA = null;

                        switch (_pDBManager.DBManagerType.ToString())
                        {
                            case "MySql":
                                pDataParametersA = new IDataParameter[]
                                {
                                        //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar,10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //new MySqlParameter("@v_old_p_part_code", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_old_lvl", MySqlDbType.Int32),
                                        //new MySqlParameter("@v_old_dsp_sort", MySqlDbType.Int32)

                                         //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                                };
                                break;

                            case "SQLServer":
                                pDataParametersA = new IDataParameter[]
                                {
                                       // new SqlParameter("@v_corp_code", SqlDbType.VarChar,10),
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),

                                        //new SqlParameter("@v_old_p_part_code", SqlDbType.VarChar,50),
                                        //new SqlParameter("@v_old_lvl", SqlDbType.Int),
                                        //new SqlParameter("@v_old_dsp_sort", SqlDbType.Int)

                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),

                                };
                                break;
                        }

                    pDataParametersA[0].Value = pProductBOMRegisterEntity.CRUD;//vCRUD;
                    pDataParametersA[1].Value = pProductBOMRegisterEntity.USER_CODE;

                    pDataParametersA[2].Value = dt.Rows[i]["PART_CODE_MST"].ToString();
                    pDataParametersA[3].Value = dt.Rows[i]["REVISION_NO"].ToString();
                    pDataParametersA[4].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_LEVEL"].ToString());
                    pDataParametersA[5].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_ID"].ToString());
                    pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                    pDataParametersA[7].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["PART_QTY"].ToString());
                    pDataParametersA[9].Value = pProductBOMRegisterEntity.USE_YN; // dt.Rows[i]["USE_YN"].ToString();

                    pDataParametersA[10].Value = dt.Rows[i]["NOWNode_ID"].ToString();
                    pDataParametersA[11].Value = dt.Rows[i]["ParentNode_ID"].ToString();

                    //pDataParametersA[2].Value = dt.Rows[i]["PART_CODE"].ToString();
                    //pDataParametersA[3].Value = dt.Rows[i]["NODE_LEVEL"];
                    //pDataParametersA[4].Value = dt.Rows[i]["NODE_ID"];
                    //pDataParametersA[5].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    //pDataParametersA[6].Value = dt.Rows[i]["PART_QTY"];
                    //pDataParametersA[7].Value = dt.Rows[i]["OLD_P_PART_CODE"];
                    //pDataParametersA[10].Value = dt.Rows[i]["OLD_NODE_LEVEL"];
                    //pDataParametersA[11].Value = dt.Rows[i]["OLD_NODE_ID"];

                    DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_I10", pDataParametersA);

            }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Save(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 삭제하기 - ProductBOMRegister_Info_Delete(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_Info_Delete(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegisterEntity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegisterEntity.USER_CODE;

                pDataParametersA[2].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersA[3].Value = dt.Rows[0]["REVISION_NO"].ToString();
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = dt.Rows[0]["NOWNode_ID"].ToString();
                pDataParametersA[11].Value = dt.Rows[0]["ParentNode_ID"].ToString();

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Delete(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 사용안하기 - ProductBOMRegister_Info_Enable(ProductBOMRegisterEntity pProductBOMRegisterEntity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_Info_Enable(ProductBOMRegisterEntity pProductBOMRegisterEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),

                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegisterEntity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegisterEntity.USER_CODE;

                pDataParametersA[2].Value = pProductBOMRegisterEntity.PART_CODE_MST;
                pDataParametersA[3].Value = pProductBOMRegisterEntity.REVISION_NO;
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = "";
                pDataParametersA[11].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Delete(ProductBOMRegisterEntity pProductBOMRegisterEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductBOMRegisterEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductBOMRegisterEntity pProductBOMRegisterEntity = new ProductBOMRegisterEntity();

                //pProductBOMRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductBOMRegisterEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ucSemiProductStockInfoPopupProvider : EntityManager<ucSemiProductStockInfoMaterialPopupEntity>
    {
        #region 생성자 - ucSemiProductStockInfoPopupProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucSemiProductStockInfoPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ucSemiProductStockInfoPopupEntity pucSemiProductStockInfoPopupEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet ucInspectRequestInfo_Return(string pCRUD, string pPART_CODE, string pPART_NAME)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pPART_CODE;
                pDataParameters[2].Value = pPART_NAME;

                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucSemiProductStockInfoPopup_R10", pDataParameters);


                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ucSemiProductStockInfoPopupEntity pucSemiProductStockInfoPopupEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ucSemiProductStockInfoPopup_Save(ucSemiProductStockInfoMaterialPopupEntity pucSemiProductStockInfoMaterialPopupEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "U")
                        {
                            if (Convert.ToDecimal(dt.Rows[a]["INPUT_QTY"].ToString()) > 0)
                            {
                                //마스터 저장
                                IDataParameter[] pDataParametersA = null;

                                switch (_pDBManager.DBManagerType.ToString())
                                {
                                    case "MySql":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 10)
                                        };
                                        break;

                                    case "SQLServer":
                                        pDataParametersA = new IDataParameter[]
                                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 10),

                                        };
                                        break;
                                }

                                pDataParametersA[0].Value = pucSemiProductStockInfoMaterialPopupEntity.CRUD;
                                pDataParametersA[1].Value = pucSemiProductStockInfoMaterialPopupEntity.USER_CODE;
                                pDataParametersA[2].Value = dt.Rows[a]["INOUT_ID"].ToString().ToUpper();
                                pDataParametersA[3].Value = dt.Rows[a]["INPUT_QTY"].ToString().ToUpper();
                                pDataParametersA[4].Value = "";
                                pDataParametersA[5].Value = "Y";
                                pDataParametersA[6].Value = pucSemiProductStockInfoMaterialPopupEntity.INOUT_CODE;

                                //pDataParametersA[0].Value = pucSemiProductStockInfoPopupEntity.CRUD;
                                //pDataParametersA[1].Value = pucSemiProductStockInfoPopupEntity.USER_CODE;
                                //pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                                //pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();
                                //pDataParametersA[4].Value = DateTime.Now.ToString("yyyyMMdd");


                                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_T01_I30", pDataParametersA);

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                                pucSemiProductStockInfoMaterialPopupEntity.ERR_NO = pDataTableA.Rows[0]["p_err_no"].ToString();
                                pucSemiProductStockInfoMaterialPopupEntity.ERR_MSG = pDataTableA.Rows[0]["p_err_msg"].ToString();
                                pucSemiProductStockInfoMaterialPopupEntity.RTN_KEY = pDataTableA.Rows[0]["p_rtn_key"].ToString();
                                pucSemiProductStockInfoMaterialPopupEntity.RTN_SEQ = pDataTableA.Rows[0]["p_rtn_seq"].ToString();
                                pucSemiProductStockInfoMaterialPopupEntity.RTN_OTHERS = pDataTableA.Rows[0]["p_rtn_others"].ToString();

                                if (pDataTableA.Rows[0][0].ToString() != "00")
                                {
                                    pErrorYN = true;
                                }
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "MaterialOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderRegisterEntity_Request, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ucSemiProductStockInfoMaterialPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ucSemiProductStockInfoMaterialPopupEntity pucSemiProductStockInfoPopupEntity = new ucSemiProductStockInfoMaterialPopupEntity();

                pucSemiProductStockInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pucSemiProductStockInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductBOMRegister_T03Provider : EntityManager<ProductBOMRegister_T03Entity>
    {
        #region 생성자 - ProductBOMRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductBOMRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductBOMRegister_T03_Info_Mst(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_Left(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T03Entity.PART_NAME;
                pDataParameters[3].Value = pProductBOMRegister_T03Entity.USE_YN;
                pDataParameters[4].Value = pProductBOMRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_Mst(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T03_Info_Main(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_Main(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T03Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T03Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_Main(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T03_Info_BOM(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_BOM(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T03Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T03Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_BOM(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 신규용 조회하기 - ProductBOMRegister_T03_Info_Main_Sub(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_Main_Sub(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_Main(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion


        #region 구성 조회하기 서브1 - ProductBOMRegister_T03_Info_SUB01(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_SUB01(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T03Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R21", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_SUB01(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브2 - ProductBOMRegister_T03_Info_SUB02(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_SUB02(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R22", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_SUB02(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브3 - ProductBOMRegister_T03_Info_SUB03(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_SUB03(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R23", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_SUB03(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브4 - ProductBOMRegister_T03_Info_SUB04(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_SUB04(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R24", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_SUB04(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브5 - ProductBOMRegister_T03_Info_SUB05(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Info_SUB05(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R25", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_SUB05(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성된 BOM (반제품) 조회하기 - ProductBOMRegister_T03_Configuration_Info(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T03Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T03_Configuration_Info(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T03Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Configuration_Info(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductBOMRegister_T03_Info_Save(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T03_Info_Save(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    pCount = i;
                    IDataParameter[] pDataParametersA = null;

                    switch (_pDBManager.DBManagerType.ToString())
                    {
                        case "MySql":
                            pDataParametersA = new IDataParameter[]
                            {
                                        //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar,10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //new MySqlParameter("@v_old_p_part_code", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_old_lvl", MySqlDbType.Int32),
                                        //new MySqlParameter("@v_old_dsp_sort", MySqlDbType.Int32)

                                         //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_process_seq", MySqlDbType.VarChar,10)
                            };
                            break;

                        case "SQLServer":
                            pDataParametersA = new IDataParameter[]
                            {
                                       // new SqlParameter("@v_corp_code", SqlDbType.VarChar,10),
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),

                                        //new SqlParameter("@v_old_p_part_code", SqlDbType.VarChar,50),
                                        //new SqlParameter("@v_old_lvl", SqlDbType.Int),
                                        //new SqlParameter("@v_old_dsp_sort", SqlDbType.Int)

                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_process_seq", SqlDbType.NVarChar,10)

                            };
                            break;
                    }

                    pDataParametersA[0].Value = pProductBOMRegister_T03Entity.CRUD;//vCRUD;
                    pDataParametersA[1].Value = pProductBOMRegister_T03Entity.USER_CODE;

                    pDataParametersA[2].Value = dt.Rows[i]["PART_CODE_MST"].ToString();
                    pDataParametersA[3].Value = dt.Rows[i]["REVISION_NO"].ToString();
                    pDataParametersA[4].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_LEVEL"].ToString());
                    pDataParametersA[5].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_ID"].ToString());
                    pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                    pDataParametersA[7].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["PART_QTY"].ToString());
                    pDataParametersA[9].Value = pProductBOMRegister_T03Entity.USE_YN; // dt.Rows[i]["USE_YN"].ToString();

                    pDataParametersA[10].Value = dt.Rows[i]["NOWNode_ID"].ToString();
                    pDataParametersA[11].Value = dt.Rows[i]["ParentNode_ID"].ToString();
                    pDataParametersA[12].Value = dt.Rows[i]["PROCESS_SEQ"].ToString();

                    //pDataParametersA[2].Value = dt.Rows[i]["PART_CODE"].ToString();
                    //pDataParametersA[3].Value = dt.Rows[i]["NODE_LEVEL"];
                    //pDataParametersA[4].Value = dt.Rows[i]["NODE_ID"];
                    //pDataParametersA[5].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    //pDataParametersA[6].Value = dt.Rows[i]["PART_QTY"];
                    //pDataParametersA[7].Value = dt.Rows[i]["OLD_P_PART_CODE"];
                    //pDataParametersA[10].Value = dt.Rows[i]["OLD_NODE_LEVEL"];
                    //pDataParametersA[11].Value = dt.Rows[i]["OLD_NODE_ID"];

                    DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_I10", pDataParametersA);

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_Save(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 삭제하기 - ProductBOMRegister_T03_Info_Delete(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T03_Info_Delete(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_process_seq", MySqlDbType.VarChar,10)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_process_seq", SqlDbType.NVarChar,10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T03Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T03Entity.USER_CODE;

                pDataParametersA[2].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersA[3].Value = dt.Rows[0]["REVISION_NO"].ToString();
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = dt.Rows[0]["NOWNode_ID"].ToString();
                pDataParametersA[11].Value = dt.Rows[0]["ParentNode_ID"].ToString();
                pDataParametersA[12].Value = dt.Rows[0]["PROCESS_SEQ"].ToString();

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_Delete(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 사용안하기 - ProductBOMRegister_T03_Info_Enable(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T03_Info_Enable(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),

                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T03Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T03Entity.USER_CODE;

                pDataParametersA[2].Value = pProductBOMRegister_T03Entity.PART_CODE_MST;
                pDataParametersA[3].Value = pProductBOMRegister_T03Entity.REVISION_NO;
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = "";
                pDataParametersA[11].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T03_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T03_Info_Delete(ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductBOMRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductBOMRegister_T03Entity pProductBOMRegister_T03Entity = new ProductBOMRegister_T03Entity();

                //pProductBOMRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductBOMRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }
    public class ProductBOMRegister_T04Provider : EntityManager<ProductBOMRegister_T04Entity>
    {
        #region 생성자 - ProductBOMRegister_T04Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductBOMRegister_T04Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductBOMRegister_T04_Info_Mst(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_Left(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T04Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T04Entity.PART_NAME;
                pDataParameters[3].Value = pProductBOMRegister_T04Entity.USE_YN;
                pDataParameters[4].Value = pProductBOMRegister_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_Mst(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T04_Info_Main(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_Main(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T04Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T04Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T04Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_Main(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T04_Info_BOM(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_BOM(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T04Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T04Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_BOM(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 신규용 조회하기 - ProductBOMRegister_T04_Info_Main_Sub(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_Main_Sub(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_Main(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion


        #region 구성 조회하기 서브1 - ProductBOMRegister_T04_Info_SUB01(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_SUB01(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R21", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_SUB01(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브2 - ProductBOMRegister_T04_Info_SUB02(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_SUB02(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R22", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_SUB02(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브3 - ProductBOMRegister_T04_Info_SUB03(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_SUB03(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R23", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_SUB03(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브4 - ProductBOMRegister_T04_Info_SUB04(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_SUB04(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R24", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_SUB04(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브5 - ProductBOMRegister_T04_Info_SUB05(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Info_SUB05(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R25", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_SUB05(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성된 BOM (반제품) 조회하기 - ProductBOMRegister_T04_Configuration_Info(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T04_Configuration_Info(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T04Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Configuration_Info(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductBOMRegister_T04_Info_Save(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T04_Info_Save(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    pCount = i;
                    IDataParameter[] pDataParametersA = null;

                    switch (_pDBManager.DBManagerType.ToString())
                    {
                        case "MySql":
                            pDataParametersA = new IDataParameter[]
                            {
                                        //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar,10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //new MySqlParameter("@v_old_p_part_code", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_old_lvl", MySqlDbType.Int32),
                                        //new MySqlParameter("@v_old_dsp_sort", MySqlDbType.Int32)

                                         //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_process_seq", MySqlDbType.VarChar,10)
                            };
                            break;

                        case "SQLServer":
                            pDataParametersA = new IDataParameter[]
                            {
                                       // new SqlParameter("@v_corp_code", SqlDbType.VarChar,10),
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),

                                        //new SqlParameter("@v_old_p_part_code", SqlDbType.VarChar,50),
                                        //new SqlParameter("@v_old_lvl", SqlDbType.Int),
                                        //new SqlParameter("@v_old_dsp_sort", SqlDbType.Int)

                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_process_seq", SqlDbType.NVarChar,10)

                            };
                            break;
                    }

                    pDataParametersA[0].Value = pProductBOMRegister_T04Entity.CRUD;//vCRUD;
                    pDataParametersA[1].Value = pProductBOMRegister_T04Entity.USER_CODE;

                    pDataParametersA[2].Value = dt.Rows[i]["PART_CODE_MST"].ToString();
                    pDataParametersA[3].Value = dt.Rows[i]["REVISION_NO"].ToString();
                    pDataParametersA[4].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_LEVEL"].ToString());
                    pDataParametersA[5].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_ID"].ToString());
                    pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                    pDataParametersA[7].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["PART_QTY"].ToString());
                    pDataParametersA[9].Value = pProductBOMRegister_T04Entity.USE_YN; // dt.Rows[i]["USE_YN"].ToString();

                    pDataParametersA[10].Value = dt.Rows[i]["NOWNode_ID"].ToString();
                    pDataParametersA[11].Value = dt.Rows[i]["ParentNode_ID"].ToString();
                    pDataParametersA[12].Value = dt.Rows[i]["PROCESS_SEQ"].ToString();

                    //pDataParametersA[2].Value = dt.Rows[i]["PART_CODE"].ToString();
                    //pDataParametersA[3].Value = dt.Rows[i]["NODE_LEVEL"];
                    //pDataParametersA[4].Value = dt.Rows[i]["NODE_ID"];
                    //pDataParametersA[5].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    //pDataParametersA[6].Value = dt.Rows[i]["PART_QTY"];
                    //pDataParametersA[7].Value = dt.Rows[i]["OLD_P_PART_CODE"];
                    //pDataParametersA[10].Value = dt.Rows[i]["OLD_NODE_LEVEL"];
                    //pDataParametersA[11].Value = dt.Rows[i]["OLD_NODE_ID"];

                    DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_I10", pDataParametersA);

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_Save(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 삭제하기 - ProductBOMRegister_T04_Info_Delete(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T04_Info_Delete(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_process_seq", MySqlDbType.VarChar,10)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_process_seq", SqlDbType.NVarChar,10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T04Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T04Entity.USER_CODE;

                pDataParametersA[2].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersA[3].Value = dt.Rows[0]["REVISION_NO"].ToString();
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = dt.Rows[0]["NOWNode_ID"].ToString();
                pDataParametersA[11].Value = dt.Rows[0]["ParentNode_ID"].ToString();
                pDataParametersA[12].Value = dt.Rows[0]["PROCESS_SEQ"].ToString();

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_Delete(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 사용안하기 - ProductBOMRegister_T04_Info_Enable(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T04_Info_Enable(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),

                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T04Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T04Entity.USER_CODE;

                pDataParametersA[2].Value = pProductBOMRegister_T04Entity.PART_CODE_MST;
                pDataParametersA[3].Value = pProductBOMRegister_T04Entity.REVISION_NO;
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = "";
                pDataParametersA[11].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T04_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T04_Info_Delete(ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductBOMRegister_T04Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductBOMRegister_T04Entity pProductBOMRegister_T04Entity = new ProductBOMRegister_T04Entity();

                //pProductBOMRegister_T04Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductBOMRegister_T04Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductBOMRegister_T50Provider : EntityManager<ProductBOMRegister_T50Entity>
    {
        #region 생성자 - ProductBOMRegister_T50Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductBOMRegister_T50Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductBOMRegister_T50_Info_Mst(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_Left(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T50Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T50Entity.PART_NAME;
                pDataParameters[3].Value = pProductBOMRegister_T50Entity.USE_YN;
                pDataParameters[4].Value = pProductBOMRegister_T50Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Mst(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T50_Info_Main(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_Main(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T50Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T50Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T50Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Main(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T50_Info_BOM(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_BOM(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T50Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T50Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T50Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_BOM(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 신규용 조회하기 - ProductBOMRegister_T50_Info_Main_Sub(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_Main_Sub(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Main(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion


        #region 구성 조회하기 서브1 - ProductBOMRegister_T50_Info_SUB01(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_SUB01(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T50Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R21", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_SUB01(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브2 - ProductBOMRegister_T50_Info_SUB02(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_SUB02(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R22", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_SUB02(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브3 - ProductBOMRegister_T50_Info_SUB03(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_SUB03(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R23", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_SUB03(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브4 - ProductBOMRegister_T50_Info_SUB04(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_SUB04(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R24", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_SUB04(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브5 - ProductBOMRegister_T50_Info_SUB05(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_SUB05(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R25", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_SUB05(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성된 BOM (반제품) 조회하기 - ProductBOMRegister_T50_Configuration_Info(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Configuration_Info(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T50Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Configuration_Info(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 리비전 중복검사 - ProductBOMRegister_T50_Info_Main(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T50Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T50_Info_Duplicate_chk(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)
        {
            try
            {
                bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
                int pCount = 0;

                //REVISION_NO 중복 검사
                //마스터 저장
                IDataParameter[] pDataParametersB = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersB = new IDataParameter[]
                        {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_part_code_mst             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_revision_no              ".Trim(), MySqlDbType.VarChar, 50)


                        };
                        break;

                    case "SQLServer":
                        pDataParametersB = new IDataParameter[]
                        {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_part_code_mst             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_revision_no              ".Trim(), SqlDbType.VarChar, 50)

                        };
                        break;
                }
                pDataParametersB[0].Value = pProductBOMRegister_T50Entity.CRUD;
                pDataParametersB[1].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersB[2].Value = dt.Rows[0]["REVISION_NO"].ToString();

                DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_R60", pDataParametersB);


                return pDataTableB;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Main(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)",
                    pException
                );
            }
        }

        #endregion
        #region 정보 저장하기 - ProductBOMRegister_T50_Info_Save(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T50_Info_Save(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {


                //마스터 저장
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    pCount = i;
                    IDataParameter[] pDataParametersA = null;

                    switch (_pDBManager.DBManagerType.ToString())
                    {
                        case "MySql":
                            pDataParametersA = new IDataParameter[]
                            {
                                        //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar,10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //new MySqlParameter("@v_old_p_part_code", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_old_lvl", MySqlDbType.Int32),
                                        //new MySqlParameter("@v_old_dsp_sort", MySqlDbType.Int32)

                                         //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                            };
                            break;

                        case "SQLServer":
                            pDataParametersA = new IDataParameter[]
                            {
                                       // new SqlParameter("@v_corp_code", SqlDbType.VarChar,10),
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),

                                        //new SqlParameter("@v_old_p_part_code", SqlDbType.VarChar,50),
                                        //new SqlParameter("@v_old_lvl", SqlDbType.Int),
                                        //new SqlParameter("@v_old_dsp_sort", SqlDbType.Int)

                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),

                            };
                            break;
                    }

                    pDataParametersA[0].Value = pProductBOMRegister_T50Entity.CRUD;//vCRUD;
                    pDataParametersA[1].Value = pProductBOMRegister_T50Entity.USER_CODE;

                    pDataParametersA[2].Value = dt.Rows[i]["PART_CODE_MST"].ToString();
                    pDataParametersA[3].Value = dt.Rows[i]["REVISION_NO"].ToString();
                    pDataParametersA[4].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_LEVEL"].ToString());
                    pDataParametersA[5].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_ID"].ToString());
                    pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                    pDataParametersA[7].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["PART_QTY"].ToString());
                    pDataParametersA[9].Value = pProductBOMRegister_T50Entity.USE_YN; // dt.Rows[i]["USE_YN"].ToString();

                    pDataParametersA[10].Value = dt.Rows[i]["NOWNode_ID"].ToString();
                    pDataParametersA[11].Value = dt.Rows[i]["ParentNode_ID"].ToString();

                    //pDataParametersA[2].Value = dt.Rows[i]["PART_CODE"].ToString();
                    //pDataParametersA[3].Value = dt.Rows[i]["NODE_LEVEL"];
                    //pDataParametersA[4].Value = dt.Rows[i]["NODE_ID"];
                    //pDataParametersA[5].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    //pDataParametersA[6].Value = dt.Rows[i]["PART_QTY"];
                    //pDataParametersA[7].Value = dt.Rows[i]["OLD_P_PART_CODE"];
                    //pDataParametersA[10].Value = dt.Rows[i]["OLD_NODE_LEVEL"];
                    //pDataParametersA[11].Value = dt.Rows[i]["OLD_NODE_ID"];

                    DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_I10", pDataParametersA);

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Save(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 삭제하기 - ProductBOMRegister_T50_Info_Delete(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T50_Info_Delete(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T50Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T50Entity.USER_CODE;

                pDataParametersA[2].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersA[3].Value = dt.Rows[0]["REVISION_NO"].ToString();
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = dt.Rows[0]["NOWNode_ID"].ToString();
                pDataParametersA[11].Value = dt.Rows[0]["ParentNode_ID"].ToString();

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Delete(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 사용안하기 - ProductBOMRegister_T50_Info_Enable(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T50_Info_Enable(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),

                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T50Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T50Entity.USER_CODE;

                pDataParametersA[2].Value = pProductBOMRegister_T50Entity.PART_CODE_MST;
                pDataParametersA[3].Value = pProductBOMRegister_T50Entity.REVISION_NO;
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = "";
                pDataParametersA[11].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T50_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T50_Info_Delete(ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductBOMRegister_T50Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductBOMRegister_T50Entity pProductBOMRegister_T50Entity = new ProductBOMRegister_T50Entity();

                //pProductBOMRegister_T50Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductBOMRegister_T50Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductBOMRegister_T01Provider : EntityManager<ProductBOMRegister_T01Entity>
    {
        #region 생성자 - ProductBOMRegister_T01Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductBOMRegister_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 좌측 조회하기 - ProductBOMRegister_T01_Info_Left(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T01_Info_Left(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_high", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_middle", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_low", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_high", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_middle", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_low", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T01Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T01Entity.PART_NAME;
                pDataParameters[3].Value = pProductBOMRegister_T01Entity.VEND_PART_CODE;

                pDataParameters[4].Value = pProductBOMRegister_T01Entity.PART_HIGH;
                pDataParameters[5].Value = pProductBOMRegister_T01Entity.PART_MIDDLE;
                pDataParameters[6].Value = pProductBOMRegister_T01Entity.PART_LOW;

                pDataParameters[7].Value = pProductBOMRegister_T01Entity.USE_YN;
                pDataParameters[8].Value = pProductBOMRegister_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T01_Info_left(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region BOM 마스터 조회하기 - ProductBOMRegister_T01_Info_Mst(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T01_Info_Mst(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T01Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T01Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T01Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T01_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T01_Info_Mst(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region BOM 상세 조회하기 - ProductBOMRegister_T01_Info_Detail(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T01_Info_Detail(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T01Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T01Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T01Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T01Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T01_R21", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_Info_Detail(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductBOMRegister_T01_Info_Save(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pProductBOMRegister_T01Entity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T01_Info_Save(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    pCount = i;
                    IDataParameter[] pDataParametersA = null;

                    switch (_pDBManager.DBManagerType.ToString())
                    {
                        case "MySql":
                            pDataParametersA = new IDataParameter[]
                            {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),

                                         //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                            };
                            break;

                        case "SQLServer":
                            pDataParametersA = new IDataParameter[]
                            {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),

                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),

                            };
                            break;
                    }

                    pDataParametersA[0].Value = pProductBOMRegister_T01Entity.CRUD;//vCRUD;
                    pDataParametersA[1].Value = pProductBOMRegister_T01Entity.USER_CODE;

                    pDataParametersA[2].Value = dt.Rows[i]["PART_CODE_MST"].ToString();
                    pDataParametersA[3].Value = dt.Rows[i]["REVISION_NO"].ToString();
                    pDataParametersA[4].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_LEVEL"].ToString());
                    pDataParametersA[5].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_ID"].ToString());
                    pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                    pDataParametersA[7].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["PART_QTY"].ToString());
                    pDataParametersA[9].Value = pProductBOMRegister_T01Entity.USE_YN; // dt.Rows[i]["USE_YN"].ToString();

                    pDataParametersA[10].Value = "";
                    pDataParametersA[11].Value = "";

                    DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T01_I10", pDataParametersA);

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T01_Info_Save(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 삭제하기 - ProductBOMRegister_T01_Info_Delete(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pProductBOMRegister_T01Entity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T01_Info_Delete(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T01Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T01Entity.USER_CODE;

                pDataParametersA[2].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersA[3].Value = dt.Rows[0]["REVISION_NO"].ToString();
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = "";
                pDataParametersA[11].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T01_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T01_Info_Delete(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 사용안하기 - ProductBOMRegister_T01_Info_Enable(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pProductBOMRegister_T01Entity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T01_Info_Enable(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),

                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T01Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T01Entity.USER_CODE;

                pDataParametersA[2].Value = pProductBOMRegister_T01Entity.PART_CODE_MST;
                pDataParametersA[3].Value = pProductBOMRegister_T01Entity.REVISION_NO;
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T01_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T01_Info_Enable(ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductBOMRegister_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductBOMRegister_T01Entity pProductBOMRegister_T01Entity = new ProductBOMRegister_T01Entity();

                //pProductBOMRegisterEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductBOMRegister_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductBOMRegister_T02Provider : EntityManager<ProductBOMRegister_T02Entity>
    {
        #region 생성자 - ProductBOMRegister_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductBOMRegister_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductBOMRegister_T02_Info_Mst(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_Left(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T02Entity.PART_NAME;
                pDataParameters[3].Value = pProductBOMRegister_T02Entity.USE_YN;
                pDataParameters[4].Value = pProductBOMRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_Mst(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T02_Info_Main(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_Main(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T02Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T02Entity.USE_YN;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_Main(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 조회하기 - ProductBOMRegister_T02_Info_BOM(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_BOM(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_revision_no", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_revision_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T02Entity.PART_CODE;
                pDataParameters[2].Value = pProductBOMRegister_T02Entity.REVISION_NO;
                pDataParameters[3].Value = pProductBOMRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_BOM(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 트리리스트 BOM 신규용 조회하기 - ProductBOMRegister_T02_Info_Main_Sub(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_Main_Sub(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_Main(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion


        #region 구성 조회하기 서브1 - ProductBOMRegister_T02_Info_SUB01(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_SUB01(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;
                pDataParameters[1].Value = pProductBOMRegister_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R21", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_SUB01(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브2 - ProductBOMRegister_T02_Info_SUB02(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_SUB02(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R22", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_SUB02(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브3 - ProductBOMRegister_T02_Info_SUB03(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_SUB03(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R23", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_SUB03(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브4 - ProductBOMRegister_T02_Info_SUB04(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_SUB04(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R24", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_SUB04(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성 조회하기 서브5 - ProductBOMRegister_T02_Info_SUB05(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Info_SUB05(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.CRUD;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R25", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_SUB05(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 구성된 BOM (반제품) 조회하기 - ProductBOMRegister_T02_Configuration_Info(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductBOMRegister_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductBOMRegister_T02_Configuration_Info(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductBOMRegister_T02Entity.PART_CODE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_T02_R50", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Configuration_Info(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductBOMRegister_T02_Info_Save(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T02_Info_Save(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    pCount = i;
                    IDataParameter[] pDataParametersA = null;

                    switch (_pDBManager.DBManagerType.ToString())
                    {
                        case "MySql":
                            pDataParametersA = new IDataParameter[]
                            {
                                        //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar,10),
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //new MySqlParameter("@v_old_p_part_code", MySqlDbType.VarChar,50),
                                        //new MySqlParameter("@v_old_lvl", MySqlDbType.Int32),
                                        //new MySqlParameter("@v_old_dsp_sort", MySqlDbType.Int32)

                                         //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),
                            };
                            break;

                        case "SQLServer":
                            pDataParametersA = new IDataParameter[]
                            {
                                       // new SqlParameter("@v_corp_code", SqlDbType.VarChar,10),
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),
                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),

                                        //new SqlParameter("@v_old_p_part_code", SqlDbType.VarChar,50),
                                        //new SqlParameter("@v_old_lvl", SqlDbType.Int),
                                        //new SqlParameter("@v_old_dsp_sort", SqlDbType.Int)

                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),

                            };
                            break;
                    }

                    pDataParametersA[0].Value = pProductBOMRegister_T02Entity.CRUD;//vCRUD;
                    pDataParametersA[1].Value = pProductBOMRegister_T02Entity.USER_CODE;

                    pDataParametersA[2].Value = dt.Rows[i]["PART_CODE_MST"].ToString();
                    pDataParametersA[3].Value = dt.Rows[i]["REVISION_NO"].ToString();
                    pDataParametersA[4].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_LEVEL"].ToString());
                    pDataParametersA[5].Value = CoFAS_ConvertManager.obj2int(dt.Rows[i]["NODE_ID"].ToString());
                    pDataParametersA[6].Value = dt.Rows[i]["PART_CODE"].ToString();
                    pDataParametersA[7].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    pDataParametersA[8].Value = Convert.ToDecimal(dt.Rows[i]["PART_QTY"].ToString());
                    pDataParametersA[9].Value = pProductBOMRegister_T02Entity.USE_YN; // dt.Rows[i]["USE_YN"].ToString();

                    pDataParametersA[10].Value = dt.Rows[i]["NOWNode_ID"].ToString();
                    pDataParametersA[11].Value = dt.Rows[i]["ParentNode_ID"].ToString();

                    //pDataParametersA[2].Value = dt.Rows[i]["PART_CODE"].ToString();
                    //pDataParametersA[3].Value = dt.Rows[i]["NODE_LEVEL"];
                    //pDataParametersA[4].Value = dt.Rows[i]["NODE_ID"];
                    //pDataParametersA[5].Value = dt.Rows[i]["P_PART_CODE"].ToString();
                    //pDataParametersA[6].Value = dt.Rows[i]["PART_QTY"];
                    //pDataParametersA[7].Value = dt.Rows[i]["OLD_P_PART_CODE"];
                    //pDataParametersA[10].Value = dt.Rows[i]["OLD_NODE_LEVEL"];
                    //pDataParametersA[11].Value = dt.Rows[i]["OLD_NODE_ID"];

                    DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_I10", pDataParametersA);

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_Save(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 삭제하기 - ProductBOMRegister_T02_Info_Delete(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T02_Info_Delete(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new MySqlParameter("@v_part_code2", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code2", MySqlDbType.VarChar,50),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1),
                                        //2018-11-30 김정호 트리구조 개선 추가
                                        new SqlParameter("@v_part_code2", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_p_part_code2", SqlDbType.NVarChar,50),
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T02Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T02Entity.USER_CODE;

                pDataParametersA[2].Value = dt.Rows[0]["PART_CODE_MST"].ToString();
                pDataParametersA[3].Value = dt.Rows[0]["REVISION_NO"].ToString();
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";
                pDataParametersA[10].Value = dt.Rows[0]["NOWNode_ID"].ToString();
                pDataParametersA[11].Value = dt.Rows[0]["ParentNode_ID"].ToString();

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_Delete(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 정보 사용안하기 - ProductBOMRegister_T02_Info_Enable(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <returns></returns>
        public bool ProductBOMRegister_T02_Info_Enable(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar,20),

                                        new MySqlParameter("@v_part_code_mst", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_revision_no", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_lvl", MySqlDbType.Int32),
                                        new MySqlParameter("@v_dsp_sort", MySqlDbType.Int32),

                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_p_part_code", MySqlDbType.VarChar,50),
                                        new MySqlParameter("@v_part_qty", MySqlDbType.Decimal),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar,1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                        new SqlParameter("@v_crud", SqlDbType.VarChar,1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar,20),

                                        new SqlParameter("@v_part_code_mst", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_revision_no", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_lvl", SqlDbType.Int),
                                        new SqlParameter("@v_dsp_sort", SqlDbType.Int),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar,50),

                                        new SqlParameter("@v_p_part_code", SqlDbType.NVarChar,50),
                                        new SqlParameter("@v_part_qty", SqlDbType.Decimal),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar,1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductBOMRegister_T02Entity.CRUD;//vCRUD;
                pDataParametersA[1].Value = pProductBOMRegister_T02Entity.USER_CODE;

                pDataParametersA[2].Value = pProductBOMRegister_T02Entity.PART_CODE_MST;
                pDataParametersA[3].Value = pProductBOMRegister_T02Entity.REVISION_NO;
                pDataParametersA[4].Value = 0;
                pDataParametersA[5].Value = 0;
                pDataParametersA[6].Value = "";
                pDataParametersA[7].Value = "";
                pDataParametersA[8].Value = 0.00;
                pDataParametersA[9].Value = "";

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductBOMRegister_I10", pDataParametersA);
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductBOMRegister_T02_Info_Delete(ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductBOMRegister_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductBOMRegister_T02Entity pProductBOMRegister_T02Entity = new ProductBOMRegister_T02Entity();

                //pProductBOMRegister_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductBOMRegister_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductNotOutStatusProvider : EntityManager<ProductNotOutStatusEntity>
    {
        #region 생성자 - ProductNotOutStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductNotOutStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductNotOutStatusEntity pProductNotOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductNotOutStatusEntity pProductNotOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductNotOutStatusEntity.CRUD;
                pDataParameters[1].Value = pProductNotOutStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pProductNotOutStatusEntity.DATE_TO;
                pDataParameters[3].Value = pProductNotOutStatusEntity.PART_CODE;
                pDataParameters[4].Value = pProductNotOutStatusEntity.PART_NAME;
                pDataParameters[5].Value = pProductNotOutStatusEntity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductNotOutStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductNotOutStatusEntity pProductNotOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductNotOutStatusEntity pProductNotOutStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductNotOutStatusEntity pProductNotOutStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductNotOutStatusEntity.CRUD;
                pDataParametersA[1].Value = pProductNotOutStatusEntity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductNotOutStatus_I10", pDataParametersA);

                pProductNotOutStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductNotOutStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductNotOutStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductNotOutStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductNotOutStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductNotOutStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductNotOutStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductNotOutStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductNotOutStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductNotOutStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductNotOutStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductNotOutStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductNotOutStatusEntity pProductNotOutStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductNotOutStatus_Info_Filename(ProductNotOutStatusEntity pProductNotOutStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductNotOutStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductNotOutStatus_Info_Filename(ProductNotOutStatusEntity pProductNotOutStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductNotOutStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pProductNotOutStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductNotOutStatus_Info_Filename(ProductNotOutStatusEntity pProductNotOutStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductNotOutStatusEntity pProductNotOutStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductNotOutStatusEntity pProductNotOutStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductNotOutStatusEntity.LANGUAGE_TYPE;

                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductNotOutStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductNotOutStatusEntity pProductNotOutStatusEntity = new ProductNotOutStatusEntity();

                pProductNotOutStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductNotOutStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }


    public class ProductOutOrderStatusProvider : EntityManager<ProductOutOrderStatusEntity>
    {
        #region 생성자 - ProductOutOrderStatusProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutOrderStatusProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductOutOrderStatusEntity pProductOutOrderStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductOutOrderStatusEntity pProductOutOrderStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductOutOrderStatusEntity.CRUD;
                pDataParameters[1].Value = pProductOutOrderStatusEntity.DATE_FROM;
                pDataParameters[2].Value = pProductOutOrderStatusEntity.DATE_TO;
                pDataParameters[3].Value = pProductOutOrderStatusEntity.PART_CODE;
                pDataParameters[4].Value = pProductOutOrderStatusEntity.PART_NAME;
                pDataParameters[5].Value = pProductOutOrderStatusEntity.VEND_NAME;
                pDataParameters[6].Value = pProductOutOrderStatusEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutOrderStatus_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductOutOrderStatusEntity pProductOutOrderStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductOutOrderStatusEntity pProductOutOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductOutOrderStatusEntity pProductOutOrderStatusEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductOutOrderStatusEntity.CRUD;
                pDataParametersA[1].Value = pProductOutOrderStatusEntity.USER_CODE;
                pDataParametersA[2].Value = pProductOutOrderStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutOrderStatus_I10", pDataParametersA);

                pProductOutOrderStatusEntity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductOutOrderStatusEntity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductOutOrderStatusEntity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductOutOrderStatusEntity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductOutOrderStatusEntity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductOutOrderStatusEntity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductOutOrderStatusEntity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductOutOrderStatusEntity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductOutOrderStatusEntity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductOutOrderStatusEntity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductOutOrderStatusEntity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductOutOrderStatusEntity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductOutOrderStatusEntity pProductOutOrderStatusEntity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductOutOrderStatus_Info_Filename(ProductOutOrderStatusEntity pProductOutOrderStatusEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutOrderStatusEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutOrderStatus_Info_Filename(ProductOutOrderStatusEntity pProductOutOrderStatusEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductOutOrderStatusEntity.WINDOW_NAME;
                pDataParameters[1].Value = pProductOutOrderStatusEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductOutOrderStatus_Info_Filename(ProductOutOrderStatusEntity pProductOutOrderStatusEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductOutOrderStatusEntity pProductOutOrderStatusEntity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductOutOrderStatusEntity pProductOutOrderStatusEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[] 
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutOrderStatusEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutOrderStatusEntity pProductOutOrderStatusEntity = new ProductOutOrderStatusEntity();

                pProductOutOrderStatusEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutOrderStatusEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductStockStatus_T02Provider : EntityManager<ProductStockStatus_T02Entity>
    {
        #region 생성자 - ProductStockStatus_T02Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductStockStatus_T02Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductStockStatus_T02Entity pProductStockStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductStockStatus_T02Entity pProductStockStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50)

                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T02Entity.CRUD;
                pDataParameters[1].Value = pProductStockStatus_T02Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductStockStatus_T02Entity.PART_NAME;
                pDataParameters[3].Value = pProductStockStatus_T02Entity.PART_CODE;
                pDataParameters[4].Value = pProductStockStatus_T02Entity.PART_TYPE;
                pDataParameters[5].Value = pProductStockStatus_T02Entity.VEND_PART_CODE;

                //pDataParameters[2].Value = pProductStockStatus_T02Entity.DATE_FROM;
                //pDataParameters[3].Value = pProductStockStatus_T02Entity.DATE_TO;
                //pDataParameters[4].Value = pProductStockStatus_T02Entity.PART_NAME;
                //pDataParameters[5].Value = pProductStockStatus_T02Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T02_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T02_Info_Mst(ProductStockStatus_T02Entity pProductStockStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductStockStatus_T02Entity pProductStockStatus_T02Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductStockStatus_T02Entity pProductStockStatus_T02Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductStockStatus_T02Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductStockStatus_T02Entity.CRUD;
                pDataParametersA[2].Value = pProductStockStatus_T02Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T02_I10", pDataParametersA);

                pProductStockStatus_T02Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductStockStatus_T02Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductStockStatus_T02Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductStockStatus_T02Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductStockStatus_T02Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductStockStatus_T02Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductStockStatus_T02Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductStockStatus_T02Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductStockStatus_T02Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductStockStatus_T02Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductStockStatus_T02Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductStockStatus_T02Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductStockStatus_T02Entity pProductStockStatus_T02Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductStockStatus_T02_Info_Filename(ProductStockStatus_T02Entity pProductStockStatus_T02Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductStockStatus_T02Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductStockStatus_T02_Info_Filename(ProductStockStatus_T02Entity pProductStockStatus_T02Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T02Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductStockStatus_T02Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T02_Info_Filename(ProductStockStatus_T02Entity pProductStockStatus_T02Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductStockStatus_T02Entity pProductStockStatus_T02Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductStockStatus_T02Entity pProductStockStatus_T02Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductStockStatus_T02Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductStockStatus_T02Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductStockStatus_T02Entity pProductStockStatus_T02Entity = new ProductStockStatus_T02Entity();

                pProductStockStatus_T02Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductStockStatus_T02Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductStockStatus_T04Provider : EntityManager<ProductStockStatus_T04Entity>
    {
        #region 생성자 - ProductStockStatus_T04Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductStockStatus_T04Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductStockStatus_T04Entity pProductStockStatus_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductStockStatus_T04Entity pProductStockStatus_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_Type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50)

                        //new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                        //new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                        //new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                        //new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50)
                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_Type", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_part_code", SqlDbType.VarChar, 50)

                        //new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                        //new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                        //new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                        //new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T04Entity.CRUD;
                pDataParameters[1].Value = pProductStockStatus_T04Entity.LANGUAGE_TYPE;
                pDataParameters[2].Value = pProductStockStatus_T04Entity.PART_NAME;
                pDataParameters[3].Value = pProductStockStatus_T04Entity.PART_CODE;
                pDataParameters[4].Value = pProductStockStatus_T04Entity.PART_TYPE;
                pDataParameters[5].Value = pProductStockStatus_T04Entity.VEND_PART_CODE;

                //pDataParameters[2].Value = pProductStockStatus_T04Entity.DATE_FROM;
                //pDataParameters[3].Value = pProductStockStatus_T04Entity.DATE_TO;
                //pDataParameters[4].Value = pProductStockStatus_T04Entity.PART_NAME;
                //pDataParameters[5].Value = pProductStockStatus_T04Entity.VEND_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T04_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T04_Info_Mst(ProductStockStatus_T04Entity pProductStockStatus_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - Sample_Info_Save(ProductStockStatus_T04Entity pProductStockStatus_T04Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool Sample_Info_Save(ProductStockStatus_T04Entity pProductStockStatus_T04Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;

            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductStockStatus_T04Entity.CORP_CODE;
                pDataParametersA[1].Value = pProductStockStatus_T04Entity.CRUD;
                pDataParametersA[2].Value = pProductStockStatus_T04Entity.USER_CODE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductStockStatus_T04_I10", pDataParametersA);

                pProductStockStatus_T04Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductStockStatus_T04Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductStockStatus_T04Entity.RTN_KEY = pDataTableA.Rows[0]["RTN_KEY"].ToString();
                pProductStockStatus_T04Entity.RTN_SEQ = pDataTableA.Rows[0]["RTN_SEQ"].ToString();
                pProductStockStatus_T04Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    //if (dt != null)
                    //{
                    //    pCount = dt.Rows.Count;

                    //    for (int a = 0; a < pCount; a++)
                    //    {
                    //        IDataParameter[] pDataParametersB = null;

                    //        switch (_pDBManager.DBManagerType.ToString())
                    //        {
                    //            case "MySql":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                    //                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                    //                    new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20)
                    //                };
                    //                break;

                    //            case "SQLServer":
                    //                pDataParametersB = new IDataParameter[]
                    //                {
                    //                    new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                    //                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                    //                    new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20)
                    //                };
                    //                break;
                    //        }

                    //        pDataParametersB[0].Value = pProductStockStatus_T04Entity.CORP_CODE;
                    //        pDataParametersB[1].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                    //        pDataParametersB[2].Value = pProductStockStatus_T04Entity.USER_CODE;

                    //        DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_GridInfoRegister_I20", pDataParametersB);

                    //        if (pDataTableB.Rows[0][0].ToString() != "00")
                    //        {
                    //            pErrorYN = true;
                    //        }

                    //        pProductStockStatus_T04Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                    //        pProductStockStatus_T04Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();
                    //        pProductStockStatus_T04Entity.RTN_KEY = pDataTableB.Rows[0]["RTN_KEY"].ToString();
                    //        pProductStockStatus_T04Entity.RTN_SEQ = pDataTableB.Rows[0]["RTN_SEQ"].ToString();
                    //        pProductStockStatus_T04Entity.RTN_OTHERS = pDataTableB.Rows[0]["RTN_OTHERS"].ToString();
                    //    }
                    //}
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Save(ProductStockStatus_T04Entity pProductStockStatus_T04Entity, DataTable dt)",
                    pException
                );
            }

            return pErrorYN;
        }

        #endregion

        #region 파일명 조회하기 - ProductStockStatus_T04_Info_Filename(ProductStockStatus_T04Entity pProductStockStatus_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductStockStatus_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductStockStatus_T04_Info_Filename(ProductStockStatus_T04Entity pProductStockStatus_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;
                }

                pDataParameters[0].Value = pProductStockStatus_T04Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductStockStatus_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductStockStatus_T04_Info_Filename(ProductStockStatus_T04Entity pProductStockStatus_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(ProductStockStatus_T04Entity pProductStockStatus_T04Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductStockStatus_T04Entity pProductStockStatus_T04Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductStockStatus_T04Entity.LANGUAGE_TYPE;


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductStockStatus_T04Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductStockStatus_T04Entity pProductStockStatus_T04Entity = new ProductStockStatus_T04Entity();

                pProductStockStatus_T04Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductStockStatus_T04Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductOrderRegister_RequestProvider : EntityManager<ProductOrderRegister_RequestEntity>
    {
        public ProductOrderRegister_RequestProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }

        #region 개체 구하기 - GetEntity(pDataRow)

        public override ProductOrderRegister_RequestEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity = new ProductOrderRegister_RequestEntity();

                pProductOrderRegister_RequestEntity.CORP_CODE = pDataRow["CORP_CODE"] is DBNull ? string.Empty : pDataRow["CORP_CODE"] as string;  // 회사코드

                return pProductOrderRegister_RequestEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

        public DataTable ProductOrderRegister_Request_R10(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud        ".Trim(), MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from   ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to     ".Trim(), MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_ORDER_ID    ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_USE_YN      ".Trim(), MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_vend_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_code   ".Trim(), MySqlDbType.VarChar, 20),
                            new MySqlParameter("@v_part_name   ".Trim(), MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_vend_part_code   ".Trim(), MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type   ".Trim(), MySqlDbType.VarChar, 50),


                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {

                            new SqlParameter("@v_crud        ".Trim(), SqlDbType.VarChar, 1),
                            new SqlParameter("@v_date_from   ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to     ".Trim(), SqlDbType.VarChar, 8),
                            new SqlParameter("@v_ORDER_ID    ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_USE_YN      ".Trim(), SqlDbType.VarChar, 10),
                            new SqlParameter("@v_vend_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_vend_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_part_code   ".Trim(), SqlDbType.VarChar, 20),
                            new SqlParameter("@v_part_name   ".Trim(), SqlDbType.VarChar, 100),
                            new SqlParameter("@v_vend_part_code   ".Trim(), SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type   ".Trim(), SqlDbType.VarChar, 50),


                        };
                        break;
                }

                pDataParameters[0].Value = pProductOrderRegister_RequestEntity.CRUD;
                pDataParameters[1].Value = pProductOrderRegister_RequestEntity.DATE_FROM;
                pDataParameters[2].Value = pProductOrderRegister_RequestEntity.DATE_TO;
                pDataParameters[3].Value = pProductOrderRegister_RequestEntity.ORDER_ID;
                pDataParameters[4].Value = pProductOrderRegister_RequestEntity.USE_YN;
                pDataParameters[5].Value = pProductOrderRegister_RequestEntity.VEND_CODE;
                pDataParameters[6].Value = pProductOrderRegister_RequestEntity.VEND_NAME;
                pDataParameters[7].Value = pProductOrderRegister_RequestEntity.PART_CODE;
                pDataParameters[8].Value = pProductOrderRegister_RequestEntity.PART_NAME;
                pDataParameters[9].Value = pProductOrderRegister_RequestEntity.VEND_PART_CODE;
                pDataParameters[10].Value = pProductOrderRegister_RequestEntity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOrderRegister_Request_R10", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductOrderRegister_Request_R10(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)",
                    pException
                );
            }
        }
        public DataTable ProductOrderRegister_Request_R20(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 15)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 15)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductOrderRegister_RequestEntity.ORDER_ID;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOrderRegister_Request_R20", pDataParameters);

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductOrderRegister_Request_R20(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)",
                    pException
                );
            }
        }

        #region 엑셀 시트 조회하기 - Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sheet_Info_sheet(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)


                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)
                };
                        break;

                }

                pDataParameters[0].Value = pProductOrderRegister_RequestEntity.CRUD;
                pDataParameters[1].Value = pProductOrderRegister_RequestEntity.WINDOW_NAME;
                pDataParameters[2].Value = pProductOrderRegister_RequestEntity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_SheetInfoRegister_R20", pDataParameters);


                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_sheet(SheetInfoRegisterEntity pSheetInfoRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 바인딩 데이터 테이블 불러오기 - Sheet_Info_Sheet_Data(SheetInfoRegisterEntity pSheetInfoRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataSet Sheet_Info_Sheet_Data(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            //new MySqlParameter("@v_corp_code", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_order_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_user_name", MySqlDbType.VarChar, 50),

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            //new SqlParameter("@v_corp_code", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_user_name", SqlDbType.NVarChar, 50)
                        };
                        break;

                }

                pDataParameters[0].Value = pProductOrderRegister_RequestEntity.VEND_CODE;
                pDataParameters[1].Value = pProductOrderRegister_RequestEntity.ORDER_ID;
                pDataParameters[2].Value = pProductOrderRegister_RequestEntity.LANGUAGE_TYPE;
                pDataParameters[3].Value = pProductOrderRegister_RequestEntity.USER_NAME;


                DataSet pDataTable = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_SheetInfoRegister_R31", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sheet_Info_Sheet_Data(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)",
                    pException
                );
            }
        }
        #endregion


        #region 파일명 조회하기 - Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Filename(ProductOrderRegister_RequestEntity pSampleRegisterEntity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pSampleRegisterEntity.WINDOW_NAME;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Filename(SampleRegisterEntity pSampleRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region XML파일 다운로드 - Templete_Download(MenuRegisterEntity pMenuRegisterEntity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductOrderRegister_RequestEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)

                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)

                        };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";


                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOrderRegister_Request_Info_Save(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {

                                new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_order_date            ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_order_seq             ".Trim(), MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_vend_code             ".Trim(), MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_order_qty             ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_request_date          ".Trim(), MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_request_location      ".Trim(), MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_unit_code             ".Trim(), MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_unitcost_currency_code".Trim(), MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost              ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost                  ".Trim(), MySqlDbType.Decimal),
                                new MySqlParameter("@v_remark                ".Trim(), MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn                ".Trim(), MySqlDbType.VarChar, 1),

                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {

                                new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                new SqlParameter("@v_order_date            ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_order_seq             ".Trim(), SqlDbType.VarChar, 6),
                                new SqlParameter("@v_vend_code             ".Trim(), SqlDbType.VarChar, 10),
                                new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_order_qty             ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_request_date          ".Trim(), SqlDbType.VarChar, 8),
                                new SqlParameter("@v_request_location      ".Trim(), SqlDbType.VarChar, 100),
                                new SqlParameter("@v_unit_code             ".Trim(), SqlDbType.VarChar, 20),
                                new SqlParameter("@v_unitcost_currency_code".Trim(), SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost              ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_cost                  ".Trim(), SqlDbType.Decimal),
                                new SqlParameter("@v_remark                ".Trim(), SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn                ".Trim(), SqlDbType.VarChar, 1),

                        };
                        break;
                }
                pDataParametersA[0].Value = pProductOrderRegister_RequestEntity.CRUD;
                pDataParametersA[1].Value = pProductOrderRegister_RequestEntity.USER_CODE;
                pDataParametersA[2].Value = pProductOrderRegister_RequestEntity.ORDER_ID;
                pDataParametersA[3].Value = pProductOrderRegister_RequestEntity.ORDER_DATE.Replace("-", "").ToString();
                pDataParametersA[4].Value = pProductOrderRegister_RequestEntity.ORDER_SEQ;
                pDataParametersA[5].Value = pProductOrderRegister_RequestEntity.VEND_CODE;
                pDataParametersA[6].Value = pProductOrderRegister_RequestEntity.PART_CODE;
                pDataParametersA[7].Value = Convert.ToDecimal(pProductOrderRegister_RequestEntity.ORDER_QTY);
                pDataParametersA[8].Value = pProductOrderRegister_RequestEntity.REQUEST_DATE.Replace("-", "").ToString();
                pDataParametersA[9].Value = pProductOrderRegister_RequestEntity.REQUEST_LOCATION;
                pDataParametersA[10].Value = pProductOrderRegister_RequestEntity.UNIT_CODE;
                pDataParametersA[11].Value = pProductOrderRegister_RequestEntity.UNITCODT_CURRENCY_CODE;
                pDataParametersA[12].Value = Convert.ToDecimal(pProductOrderRegister_RequestEntity.UNITCOST);
                pDataParametersA[13].Value = Convert.ToDecimal(pProductOrderRegister_RequestEntity.COST);
                pDataParametersA[14].Value = pProductOrderRegister_RequestEntity.REMARK;
                pDataParametersA[15].Value = pProductOrderRegister_RequestEntity.USE_YN;


                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOrderRegister_Request_I10", pDataParametersA);

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                pProductOrderRegister_RequestEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pProductOrderRegister_RequestEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pProductOrderRegister_RequestEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pProductOrderRegister_RequestEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pProductOrderRegister_RequestEntity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pProductOrderRegister_RequestEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion



        #region 정보 저장하기 - ProductOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pMaterialOrderStatusEntity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOrderRegister_Request_Info_Check_Save(ProductOrderRegister_RequestEntity pProductOrderRegister_RequestEntity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                if (dt != null)
                {
                    pCount = dt.Rows.Count;

                    for (int a = 0; a < pCount; a++)
                    {
                        //체크된것만 저장
                        if (dt.Rows[a]["CRUD"].ToString() == "Y")
                        {
                            //마스터 저장
                            IDataParameter[] pDataParametersA = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new MySqlParameter("@v_crud                  ".Trim(), MySqlDbType.VarChar, 1),
                                            new MySqlParameter("@v_user_code             ".Trim(), MySqlDbType.VarChar, 50),
                                            new MySqlParameter("@v_order_id              ".Trim(), MySqlDbType.VarChar, 15),
                                            new MySqlParameter("@v_part_code             ".Trim(), MySqlDbType.VarChar, 50),


                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersA = new IDataParameter[]
                                    {

                                            new SqlParameter("@v_crud                  ".Trim(), SqlDbType.VarChar, 1),
                                            new SqlParameter("@v_user_code             ".Trim(), SqlDbType.VarChar, 50),
                                            new SqlParameter("@v_order_id              ".Trim(), SqlDbType.VarChar, 15),
                                            new SqlParameter("@v_part_code             ".Trim(), SqlDbType.VarChar, 50),

                                    };
                                    break;
                            }
                            pDataParametersA[0].Value = pProductOrderRegister_RequestEntity.CRUD;
                            pDataParametersA[1].Value = pProductOrderRegister_RequestEntity.USER_CODE;
                            pDataParametersA[2].Value = dt.Rows[a]["ORDER_ID"].ToString().ToUpper();
                            pDataParametersA[3].Value = dt.Rows[a]["PART_CODE"].ToString().ToUpper();


                            DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOrderRegister_Request_I20", pDataParametersA);

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                            pProductOrderRegister_RequestEntity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                            pProductOrderRegister_RequestEntity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                            pProductOrderRegister_RequestEntity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                            pProductOrderRegister_RequestEntity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                            pProductOrderRegister_RequestEntity.RTN_OTHERS = pDataTableA.Rows[0]["rtn_others"].ToString();

                            if (pDataTableA.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }
                        }
                    }
                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOrderRegister_Request_Info_Save(MaterialOrderStatusEntity pProductOrderRegister_RequestEntity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction

            }

            return pErrorYN;
        }

        #endregion
    }

    public class ucProductOrderInfoPopupProvider : EntityManager<VendCodeInfoPopupEntity>
    {
        #region 생성자 - CommonCodeReturnProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ucProductOrderInfoPopupProvider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 코드 정보 조회하기 - ucProductOrderInfoPopup_Return(string pWINDOW_NAME, string pDEV_GRID_NAME)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pCORP_CD">회사코드</param>
        /// <param name="pWINDOW_NAME">화면 아이디</param>
        /// <param name="pDEV_GRID_NAME">그리드 아이디</param>
        /// <returns>조회 목록</returns>
        public DataSet ucProductOrderInfoPopup_Return(string pCRUD, string pFROM_DATE, string pTO_DATE, string pPART_NAME, string pVEND_NAME)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar,1),
                            new MySqlParameter("@v_order_date", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_to_date", MySqlDbType.VarChar,20),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar,50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar,50),


                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar,1),
                            new SqlParameter("@v_order_date", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_to_date", SqlDbType.NVarChar,20),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar,50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar,50)

                        };
                        break;
                }

                pDataParameters[0].Value = pCRUD;
                pDataParameters[1].Value = pFROM_DATE;
                pDataParameters[2].Value = pTO_DATE;
                pDataParameters[3].Value = pPART_NAME;
                pDataParameters[4].Value = pVEND_NAME;

                //USP_ucProductOrderInfoPopup_R10 -> USP_ucMaterialucProductOrderInfoPopup_R10
                DataSet pDataTableSet = _pDBManager.GetDataSet(CommandType.StoredProcedure, "USP_ucProductOrderInfoPopup_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTableSet;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "DevGrid_Info(string pWINDOW_NAME, string pDEV_GRID_NAME)",
                    pException
                );
            }
        }
        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override VendCodeInfoPopupEntity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                VendCodeInfoPopupEntity pVendCodeInfoPopupEntity = new VendCodeInfoPopupEntity();

                pVendCodeInfoPopupEntity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pVendCodeInfoPopupEntity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

    }

    public class ProductInformationRegister_T04Provider : EntityManager<ProductInformationRegister_T04Entity>
    {
        #region 생성자 - ProductInformationRegister_T04Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInformationRegister_T04Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInformationRegister_T04_Info_Mst(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductInformationRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T04_Info_Mst(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                            new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_type_detail", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                            new SqlParameter("@v_part_type", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_part_type_detail", SqlDbType.NVarChar, 150),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T04Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T04Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T04Entity.PART_NAME;
                pDataParameters[4].Value = pProductInformationRegister_T04Entity.PART_TYPE;
                pDataParameters[5].Value = pProductInformationRegister_T04Entity.PART_TYPE_DETAIL;
                pDataParameters[6].Value = pProductInformationRegister_T04Entity.USE_YN;
                pDataParameters[7].Value = pProductInformationRegister_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T04_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T04_Info_Mst(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 상세 조회하기 - ProductInformationRegister_T04_Info_Sub(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pGridInfoRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInformationRegister_T04_Info_Sub(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pProductInformationRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductInformationRegister_T04Entity.PART_CODE;
                pDataParameters[2].Value = pProductInformationRegister_T04Entity.PART_REVISION_NO;
                pDataParameters[3].Value = pProductInformationRegister_T04Entity.LANGUAGE_TYPE;
                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_R20", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T04_Info_Sub(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductInformationRegister_T04_Info_Save(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity, DataTable dt)

        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductInformationRegister_T04_Info_Save(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity, DataTable dt)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction(); //Transaction 시작
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_type", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_type_detail", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_expiration_date", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_vend_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_standard", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_manufacturer", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_cost", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_safe_stock", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_part_start_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_part_end_date", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_sale_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_purc_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_outt_yn", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_image_name", MySqlDbType.VarChar, 100),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 10),
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_type", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_type_detail", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_expiration_date", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_vend_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_unit", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_standard", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_manufacturer", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_cost", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_safe_stock", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_part_start_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_end_date", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_sale_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_purc_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_outt_yn", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_part_pdf_name", SqlDbType.NVarChar, 100),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 10)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInformationRegister_T04Entity.CRUD;
                pDataParametersA[1].Value = pProductInformationRegister_T04Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInformationRegister_T04Entity.PART_TYPE;
                pDataParametersA[3].Value = pProductInformationRegister_T04Entity.PART_TYPE_DETAIL;
                pDataParametersA[4].Value = pProductInformationRegister_T04Entity.PART_EXPIRATION_DATE;
                pDataParametersA[5].Value = pProductInformationRegister_T04Entity.PART_NAME;
                pDataParametersA[6].Value = pProductInformationRegister_T04Entity.PART_CODE;
                pDataParametersA[7].Value = pProductInformationRegister_T04Entity.PART_REVISION_NO;
                pDataParametersA[8].Value = pProductInformationRegister_T04Entity.VEND_PART_CODE;
                pDataParametersA[9].Value = pProductInformationRegister_T04Entity.PART_UNIT;
                pDataParametersA[10].Value = pProductInformationRegister_T04Entity.PART_STANDARD;
                pDataParametersA[11].Value = pProductInformationRegister_T04Entity.PART_MANUFACTURER;
                pDataParametersA[12].Value = pProductInformationRegister_T04Entity.PART_COST;
                pDataParametersA[13].Value = pProductInformationRegister_T04Entity.PART_SAFE_STOCK;
                pDataParametersA[14].Value = pProductInformationRegister_T04Entity.PART_START_DATE;
                pDataParametersA[15].Value = pProductInformationRegister_T04Entity.PART_END_DATE;
                pDataParametersA[16].Value = pProductInformationRegister_T04Entity.SALE_YN;
                pDataParametersA[17].Value = pProductInformationRegister_T04Entity.PURC_YN;
                pDataParametersA[18].Value = pProductInformationRegister_T04Entity.OUTT_YN;
                pDataParametersA[19].Value = pProductInformationRegister_T04Entity.REMARK;
                pDataParametersA[20].Value = pProductInformationRegister_T04Entity.PART_PDF_NAME;
                pDataParametersA[21].Value = pProductInformationRegister_T04Entity.USE_YN;
                pDataParametersA[22].Value = pProductInformationRegister_T04Entity.PART_UNITCOST_CURRENCY_CODE;



                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_T04_I10", pDataParametersA);

                pProductInformationRegister_T04Entity.ERR_NO = pDataTableA.Rows[0]["ERR_NO"].ToString();
                pProductInformationRegister_T04Entity.ERR_MSG = pDataTableA.Rows[0]["ERR_MSG"].ToString();
                pProductInformationRegister_T04Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductInformationRegister_T04Entity.RTN_SEQ = pDataTableA.Rows[0]["P_RTN_SEQ"].ToString();
                pProductInformationRegister_T04Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {
                    if (dt != null)
                    {
                        pCount = dt.Rows.Count;

                        for (int a = 0; a < pCount; a++)
                        {
                            IDataParameter[] pDataParametersB = null;

                            switch (_pDBManager.DBManagerType.ToString())
                            {
                                case "MySql":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                        new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_revision_no", MySqlDbType.VarChar, 10),
                                        new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 20),
                                        new MySqlParameter("@v_part_unitcost_seq", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_currency_code", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost", MySqlDbType.VarChar, 50),
                                        new MySqlParameter("@v_part_unitcost_start_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_part_unitcost_end_date", MySqlDbType.VarChar, 8),
                                        new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                        new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                                    };
                                    break;

                                case "SQLServer":
                                    pDataParametersB = new IDataParameter[]
                                    {
                                        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                        new SqlParameter("@v_user_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_revision_no", SqlDbType.NVarChar, 10),
                                        new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_seq", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_currency_code", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost", SqlDbType.NVarChar, 50),
                                        new SqlParameter("@v_part_unitcost_start_date", SqlDbType.NVarChar, 8),
                                        new SqlParameter("@v_part_unitcost_end_date", SqlDbType.NVarChar,8),
                                        new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                        new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                                    };
                                    break;

                            }

                            if (pProductInformationRegister_T04Entity.PART_CODE == "" && dt.Rows[a]["CRUD"].ToString().ToUpper() == "C")
                            {

                                pProductInformationRegister_T04Entity.PART_CODE = pProductInformationRegister_T04Entity.RTN_KEY;

                            }

                            pDataParametersB[0].Value = dt.Rows[a]["CRUD"].ToString().ToUpper();
                            pDataParametersB[1].Value = pProductInformationRegister_T04Entity.USER_CODE;

                            pDataParametersB[2].Value = pProductInformationRegister_T04Entity.PART_CODE;
                            pDataParametersB[3].Value = pProductInformationRegister_T04Entity.PART_REVISION_NO;
                            pDataParametersB[4].Value = dt.Rows[a]["VEND_CODE"].ToString();
                            pDataParametersB[5].Value = dt.Rows[a]["PART_UNITCOST_SEQ"].ToString();
                            pDataParametersB[6].Value = dt.Rows[a]["PART_UNITCOST_CURRENCY_CODE"].ToString();
                            pDataParametersB[7].Value = dt.Rows[a]["PART_UNITCOST"].ToString();
                            pDataParametersB[8].Value = dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString(); //dt.Rows[a]["PART_UNITCOST_START_DATE"].ToString();
                            pDataParametersB[9].Value = dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString().Length > 8 ? DateTime.Parse(dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString()).ToString("yyyyMMdd") : dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();  //dt.Rows[a]["PART_UNITCOST_END_DATE"].ToString();
                            pDataParametersB[10].Value = dt.Rows[a]["REMARK"].ToString();
                            pDataParametersB[11].Value = dt.Rows[a]["USE_YN"].ToString().ToUpper() == "" ? "Y" : dt.Rows[a]["USE_YN"].ToString().ToUpper();

                            DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInformation_I20", pDataParametersB);

                            if (pDataTableB.Rows[0][0].ToString() != "00")
                            {
                                pErrorYN = true;
                            }

                            pProductInformationRegister_T04Entity.ERR_NO = pDataTableB.Rows[0]["ERR_NO"].ToString();
                            pProductInformationRegister_T04Entity.ERR_MSG = pDataTableB.Rows[0]["ERR_MSG"].ToString();

                            // 메인그리드 위치 지정문제로 서브에선 사용하지 않음.
                            //pProductInformationRegister_T04Entity.RTN_KEY = pDataTableB.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductInformationRegister_T04Entity.RTN_SEQ = pDataTableB.Rows[0]["P_RTN_SEQ"].ToString();
                            //pProductInformationRegister_T04Entity.RTN_OTHERS = pDataTableB.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                    }
                }
                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductInformationRegister_T04_Info_Save(ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }


            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInformationRegister_T04Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInformationRegister_T04Entity pProductInformationRegister_T04Entity = new ProductInformationRegister_T04Entity();

                //pProductInformationRegister_T04Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInformationRegister_T04Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductInRegister_T03Provider : EntityManager<ProductInRegister_T03Entity>
    {
        #region 생성자 - ProductInRegister_T03Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductInRegister_T03Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductInRegister_T03_Info_Save(ProductInRegister_T03Entity pProductInRegister_T03Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductInRegister_T03_Info(ProductInRegister_T03Entity pProductInRegister_T03Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 20)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.VarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.VarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.VarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 20)

                        };
                        break;
                }

                pDataParameters[0].Value = pProductInRegister_T03Entity.CRUD;
                pDataParameters[1].Value = pProductInRegister_T03Entity.DATE_FROM;
                pDataParameters[2].Value = pProductInRegister_T03Entity.DATE_TO;
                pDataParameters[3].Value = pProductInRegister_T03Entity.PART_CODE;
                pDataParameters[4].Value = pProductInRegister_T03Entity.PART_NAME;
                pDataParameters[5].Value = pProductInRegister_T03Entity.VEND_CODE;
                pDataParameters[6].Value = pProductInRegister_T03Entity.VEND_NAME;
                pDataParameters[7].Value = pProductInRegister_T03Entity.REFERENCE_ID;
                pDataParameters[8].Value = pProductInRegister_T03Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductInRegister_T03Entity.USE_YN;
                pDataParameters[10].Value = pProductInRegister_T03Entity.LANGUAGE_TYPE;


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_R10", pDataParameters);
                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductInRegister_T03_Info_Save(ProductInRegister_T03Entity pProductInRegister_T03Entity)",
                    pException
                );
            }
        }

        #endregion

        public bool ProductInRegister_T03_Info_Save(ProductInRegister_T03Entity pProductInRegister_T03Entity)
        {
            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            int pCount = 0;
            _pDBManager.BeginTransaction();
            try
            {
                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_seq", MySqlDbType.VarChar, 6),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.Decimal),
                                new MySqlParameter("@v_part_unit", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_cost", MySqlDbType.Decimal),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_expiration_date", MySqlDbType.VarChar, 50)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_id", SqlDbType.VarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.VarChar, 8),
                                new SqlParameter("@v_inout_seq", SqlDbType.VarChar, 6),
                                new SqlParameter("@v_inout_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.VarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.Decimal),
                                new SqlParameter("@v_part_unit", SqlDbType.VarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.Decimal),
                                new SqlParameter("@v_cost", SqlDbType.Decimal),
                                new SqlParameter("@v_reference_id", SqlDbType.VarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.VarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.VarChar, 1),
                                new SqlParameter("@v_expiration_date", SqlDbType.VarChar, 50)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductInRegister_T03Entity.CRUD;
                pDataParametersA[1].Value = pProductInRegister_T03Entity.USER_CODE;
                pDataParametersA[2].Value = pProductInRegister_T03Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductInRegister_T03Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductInRegister_T03Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductInRegister_T03Entity.INOUT_SEQ;
                pDataParametersA[6].Value = pProductInRegister_T03Entity.INOUT_CODE;
                pDataParametersA[7].Value = pProductInRegister_T03Entity.PART_CODE;
                pDataParametersA[8].Value = pProductInRegister_T03Entity.VEND_CODE;
                pDataParametersA[9].Value = Convert.ToDecimal(pProductInRegister_T03Entity.INOUT_QTY);
                pDataParametersA[10].Value = pProductInRegister_T03Entity.PART_UNIT;
                pDataParametersA[11].Value = Convert.ToDecimal(pProductInRegister_T03Entity.UNITCOST);
                pDataParametersA[12].Value = Convert.ToDecimal(pProductInRegister_T03Entity.COST);
                pDataParametersA[13].Value = pProductInRegister_T03Entity.REFERENCE_ID;
                pDataParametersA[14].Value = pProductInRegister_T03Entity.REMARK;
                pDataParametersA[15].Value = pProductInRegister_T03Entity.USE_YN;
                pDataParametersA[16].Value = pProductInRegister_T03Entity.EXPIRATION_DATE;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductInRegister_I10", pDataParametersA);

                pProductInRegister_T03Entity.ERR_NO = pDataTableA.Rows[0]["err_no"].ToString();
                pProductInRegister_T03Entity.ERR_MSG = pDataTableA.Rows[0]["err_msg"].ToString();
                pProductInRegister_T03Entity.RTN_KEY = pDataTableA.Rows[0]["rtn_key"].ToString();
                pProductInRegister_T03Entity.RTN_SEQ = pDataTableA.Rows[0]["rtn_seq"].ToString();
                pProductInRegister_T03Entity.RTN_AQ = pDataTableA.Rows[0]["rtn_aq"].ToString();
                pProductInRegister_T03Entity.RTN_SQ = pDataTableA.Rows[0]["rtn_sq"].ToString();
                pProductInRegister_T03Entity.RTN_OTHERS = pDataTableA.Rows[0]["RTN_OTHERS"].ToString();

                if (pDataTableA.Rows[0][0].ToString() != "00")
                {
                    pErrorYN = true;
                }
                else
                {

                }
            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }

            return pErrorYN;
        }

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductInRegister_T03Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductInRegister_T03Entity pProductInRegister_T03Entity = new ProductInRegister_T03Entity();

                pProductInRegister_T03Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductInRegister_T03Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductOutRegister_T04Provider : EntityManager<ProductOutRegister_T04Entity>
    {
        #region 생성자 - ProductOutRegister_T04Provider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductOutRegister_T04Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - ProductOutRegister_T04_Info_Mst(ProductOutRegister_T04Entity pProductOutRegister_T04Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductOutRegister_T04Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductOutRegister_T04_Info_Mst(ProductOutRegister_T04Entity pProductOutRegister_T04Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_vend_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductOutRegister_T04Entity.CRUD;
                pDataParameters[1].Value = pProductOutRegister_T04Entity.DATE_FROM;
                pDataParameters[2].Value = pProductOutRegister_T04Entity.DATE_TO;
                pDataParameters[3].Value = pProductOutRegister_T04Entity.PART_CODE;
                pDataParameters[4].Value = pProductOutRegister_T04Entity.PART_NAME;
                pDataParameters[5].Value = pProductOutRegister_T04Entity.VEND_NAME;
                pDataParameters[6].Value = pProductOutRegister_T04Entity.REFERENCE_ID;
                pDataParameters[7].Value = pProductOutRegister_T04Entity.INOUT_ID;
                pDataParameters[8].Value = pProductOutRegister_T04Entity.INOUT_CODE;
                pDataParameters[9].Value = pProductOutRegister_T04Entity.USE_YN;
                pDataParameters[10].Value = pProductOutRegister_T04Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "MaterialOutRegister_Info_Mst(MaterialOutRegisterEntity pMaterialOutRegisterEntity)",
                    pException
                );
            }
        }

        #endregion

        #region 정보 저장하기 - ProductOutRegister_T04_Info_Save(ProductOutRegister_T04Entity pMaterialOrderStatusEntity, DataTable dt)       
        /// <summary>
        /// 
        /// </summary>
        /// <param name="pGridInfoRegisterEntity"></param>
        /// <param name="dt"></param>
        /// <returns></returns>
        public bool ProductOutRegister_T04_Info_Save(ProductOutRegister_T04Entity pProductOutRegister_T04Entity)
        {
            string check = "Y";
            int in_qty = 0;
            int request_qty = 0;

            bool pErrorYN = false; // 정상 저장 TRUE / 저장 오류 FALSE
            _pDBManager.BeginTransaction();
            try
            {
                request_qty = Convert.ToInt32(pProductOutRegister_T04Entity.INOUT_QTY);

                while (check == "Y")
                {
                    // 유통기한 조회
                    IDataParameter[] pDataParametersB = null;

                    switch (_pDBManager.DBManagerType.ToString())
                    {
                        case "MySql":
                            pDataParametersB = new IDataParameter[]
                            {
                                    new MySqlParameter("@v_crud", MySqlDbType.VarChar, 20)
                            };
                            break;

                        case "SQLServer":
                            pDataParametersB = new IDataParameter[]
                            {
                                    new SqlParameter("@v_crud", SqlDbType.NVarChar, 20)
                            };
                            break;
                    }

                    pDataParametersB[0].Value = pProductOutRegister_T04Entity.INOUT_ID;

                    DataTable pDataTableB = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_R20", pDataParametersB);

                    if (pDataTableB != null && pDataTableB.Rows.Count > 0)
                    {
                        in_qty = Convert.ToInt32(pDataTableB.Rows[0]["INOUT_QTY"].ToString());
                        
                        if (request_qty >= in_qty)
                        {
                            //request_qty = request_qty - in_qty;

                            //// 유통 최신 입고 내역 삭제(N)
                            //IDataParameter[] pDataParametersC = null;

                            //switch (_pDBManager.DBManagerType.ToString())0
                            //{
                            //    case "MySql":
                            //        pDataParametersB = new IDataParameter[]
                            //        {
                            //        new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            //        new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 20)
                            //        };
                            //        break;

                            //    case "SQLServer":
                            //        pDataParametersB = new IDataParameter[]
                            //        {
                            //        new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            //        new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 20)
                            //        };
                            //        break;
                            //}

                            //pDataParametersC[0].Value = "U";
                            //pDataParametersC[1].Value = pProductOutRegister_T04Entity.INOUT_ID;

                            //DataTable pDataTableC = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_I20", pDataParametersC);
                            
                            //pProductOutRegister_T04Entity.ERR_NO = pDataTableC.Rows[0]["P_ERR_NO"].ToString();
                            //pProductOutRegister_T04Entity.ERR_MSG = pDataTableC.Rows[0]["P_ERR_MSG"].ToString();
                            //pProductOutRegister_T04Entity.RTN_KEY = pDataTableC.Rows[0]["P_RTN_KEY"].ToString();
                            //pProductOutRegister_T04Entity.RTN_OTHERS = pDataTableC.Rows[0]["P_RTN_OTHERS"].ToString();
                        }
                        else
                        {

                        }
                    }
                }


                //마스터 저장
                IDataParameter[] pDataParametersA = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParametersA = new IDataParameter[]
                        {
                                new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_user_code", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_inout_type", MySqlDbType.VarChar, 1),
                                new MySqlParameter("@v_inout_id", MySqlDbType.VarChar, 15),
                                new MySqlParameter("@v_inout_date", MySqlDbType.VarChar, 8),
                                new MySqlParameter("@v_inout_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_vend_code", MySqlDbType.VarChar, 10),
                                new MySqlParameter("@v_inout_qty", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_unitcost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_cost", MySqlDbType.VarChar, 50),
                                new MySqlParameter("@v_reference_id", MySqlDbType.VarChar, 20),
                                new MySqlParameter("@v_remark", MySqlDbType.VarChar, 1000),
                                new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1)
                        };
                        break;

                    case "SQLServer":
                        pDataParametersA = new IDataParameter[]
                        {
                                new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_user_code", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_inout_type", SqlDbType.NVarChar, 1),
                                new SqlParameter("@v_inout_id", SqlDbType.NVarChar, 15),
                                new SqlParameter("@v_inout_date", SqlDbType.NVarChar, 8),
                                new SqlParameter("@v_inout_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 10),
                                new SqlParameter("@v_inout_qty", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_unitcost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_cost", SqlDbType.NVarChar, 50),
                                new SqlParameter("@v_reference_id", SqlDbType.NVarChar, 20),
                                new SqlParameter("@v_remark", SqlDbType.NVarChar, 1000),
                                new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1)
                        };
                        break;
                }

                pDataParametersA[0].Value = pProductOutRegister_T04Entity.CRUD;
                pDataParametersA[1].Value = pProductOutRegister_T04Entity.USER_CODE;
                pDataParametersA[2].Value = pProductOutRegister_T04Entity.INOUT_TYPE;
                pDataParametersA[3].Value = pProductOutRegister_T04Entity.INOUT_ID;
                pDataParametersA[4].Value = pProductOutRegister_T04Entity.INOUT_DATE;
                pDataParametersA[5].Value = pProductOutRegister_T04Entity.INOUT_CODE;
                pDataParametersA[6].Value = pProductOutRegister_T04Entity.PART_CODE;
                pDataParametersA[7].Value = pProductOutRegister_T04Entity.VEND_CODE;
                pDataParametersA[8].Value = pProductOutRegister_T04Entity.INOUT_QTY;
                pDataParametersA[9].Value = pProductOutRegister_T04Entity.UNITCOST;
                pDataParametersA[10].Value = pProductOutRegister_T04Entity.COST;
                pDataParametersA[11].Value = pProductOutRegister_T04Entity.REFERENCE_ID;
                pDataParametersA[12].Value = pProductOutRegister_T04Entity.REMARK;
                pDataParametersA[13].Value = pProductOutRegister_T04Entity.USE_YN;

                DataTable pDataTableA = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_ProductOutRegister_I10", pDataParametersA);

                pProductOutRegister_T04Entity.ERR_NO = pDataTableA.Rows[0]["P_ERR_NO"].ToString();
                pProductOutRegister_T04Entity.ERR_MSG = pDataTableA.Rows[0]["P_ERR_MSG"].ToString();
                pProductOutRegister_T04Entity.RTN_KEY = pDataTableA.Rows[0]["P_RTN_KEY"].ToString();
                pProductOutRegister_T04Entity.RTN_OTHERS = pDataTableA.Rows[0]["P_RTN_OTHERS"].ToString();

            }
            catch (ExceptionManager pExceptionManager)
            {
                pErrorYN = true;

                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                pErrorYN = true;

                throw new ExceptionManager
                (
                    this,
                    "ProductOutRegister_T04_Info_Save(ProductOutRegister_T04Entity pProductOutRegister_T04Entity, DataTable dt)",
                    pException
                );
            }
            finally
            {
                if (pErrorYN)
                    _pDBManager.RollbackTransaction();  // 저장 실패 Rollback Transaction 
                else
                    _pDBManager.CommitTransaction();  // 저장 성공  Commit Transaction
            }
            return pErrorYN;
        }

        #endregion

        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductOutRegister_T04Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductOutRegister_T04Entity pProductOutRegister_T04Entity = new ProductOutRegister_T04Entity();

                //pProductOutRegister_T04Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductOutRegister_T04Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion
    }

    public class ProductRecepiStatus_T01Provider : EntityManager<ProductRecepiStatus_T01Entity>
    {

        #region 생성자 - ProductMonitoringProvider(pDBManager)
        /// <summary>
        /// 생성자
        /// </summary>
        /// <param name="pDBManager">DB 관리자</param>
        public ProductRecepiStatus_T01Provider(DBManager pDBManager)
        {
            _pDBManager = pDBManager;
        }
        #endregion

        #region 마스터 조회하기 - Sample_Info_Mst(ProductRecepiStatus_T01Entity pProductRecepiStatus_Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pSampleRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable Sample_Info_Mst(ProductRecepiStatus_T01Entity pProductRecepiStatus_Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_crud", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_part_code", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_part_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_date_from", MySqlDbType.VarChar, 8),
                            new MySqlParameter("@v_date_to", MySqlDbType.VarChar,8),
                            new MySqlParameter("@v_production_order_id",MySqlDbType.VarChar,50)
                        };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_crud", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_date_from", SqlDbType.NVarChar, 8),
                            new SqlParameter("@v_date_to", SqlDbType.NVarChar,8),
                            new SqlParameter("@v_order_id", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_part_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_code", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_vend_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.NVarChar, 50)
                        };
                        break;
                }

                pDataParameters[0].Value = pProductRecepiStatus_Entity.CRUD;
                pDataParameters[1].Value = pProductRecepiStatus_Entity.PART_CODE;
                pDataParameters[2].Value = pProductRecepiStatus_Entity.PART_NAME;
                pDataParameters[3].Value = pProductRecepiStatus_Entity.DATE_FROM;
                pDataParameters[4].Value = pProductRecepiStatus_Entity.DATE_TO;
                pDataParameters[5].Value = pProductRecepiStatus_Entity.PRODUCTION_ORDER_ID;               


                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_RecipeStatus_T01_R10", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Sample_Info_Mst(ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion

        #region 파일명 조회하기 - ProductRecepiStatus_T01_Info_Filename(ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pProductRecepiStatus_T01Entity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public DataTable ProductRecepiStatus_T01_Info_Filename(ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
        
                            new MySqlParameter("@v_window_name", MySqlDbType.VarChar, 50),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_window_name", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)

                };
                        break;
                }

                pDataParameters[0].Value = pProductRecepiStatus_T01Entity.WINDOW_NAME;
                pDataParameters[1].Value = pProductRecepiStatus_T01Entity.LANGUAGE_TYPE;

                DataTable pDataTable = _pDBManager.GetDataTable(CommandType.StoredProcedure, "USP_MenuRegister_R40", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pDataTable;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "ProductRecepiStatus_T01_Info_Filename(ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity)",
                    pException
                );
            }
        }

        #endregion
        #region XML파일 다운로드 - Templete_Download(ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity, string pMENU_NO, string pDSP_SORT)

        /// <summary>
        /// 조회하기
        /// </summary>
        /// <param name="pMenuRegisterEntity">엔티티 정보</param>
        /// <returns>조회 목록</returns>
        public object Templete_Download(ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity, string pMENU_NO, string pDSP_SORT)
        {
            try
            {
                IDataParameter[] pDataParameters = null;

                switch (_pDBManager.DBManagerType.ToString())
                {
                    case "MySql":
                        pDataParameters = new IDataParameter[]
                        {
                            new MySqlParameter("@v_menu_no", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_dsp_sort", MySqlDbType.VarChar, 10),
                            new MySqlParameter("@v_use_yn", MySqlDbType.VarChar, 1),
                            new MySqlParameter("@v_language_type", MySqlDbType.VarChar, 50)



                };
                        break;

                    case "SQLServer":
                        pDataParameters = new IDataParameter[]
                        {
                            new SqlParameter("@v_menu_no", SqlDbType.NVarChar, 50),
                            new SqlParameter("@v_dsp_sort", SqlDbType.NVarChar, 10),
                            new SqlParameter("@v_use_yn", SqlDbType.NVarChar, 1),
                            new SqlParameter("@v_language_type", SqlDbType.VarChar, 50)


                };
                        break;
                }

                pDataParameters[0].Value = pMENU_NO;
                pDataParameters[1].Value = pDSP_SORT;
                pDataParameters[2].Value = "Y";
                pDataParameters[3].Value = pProductRecepiStatus_T01Entity.LANGUAGE_TYPE;

                object pObject = _pDBManager.GetScalar(CommandType.StoredProcedure, "USP_MenuRegister_R30", pDataParameters);

                //if (pDataTable != null)
                //{
                //    GetEntity(pDataTable.Rows[0]);
                //}

                return pObject;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "Templete_Download(SampleRegisterEntity pSampleRegisterEntity, string pMENU_NO, string pDSP_SORT, string pCUR_FILE)",
                    pException
                );
            }
        }

        #endregion
        #region 개체 구하기 - GetEntity(pDataRow)
        /// <summary>
        /// 개체 구하기
        /// </summary>
        /// <param name = "pDataRow" > 데이타 로우</param>
        /// <returns>메뉴 설정 개체</returns>
        public override ProductRecepiStatus_T01Entity GetEntity(DataRow pDataRow)
        {
            try
            {
                if (pDataRow == null)
                {
                    return null;
                }

                ProductRecepiStatus_T01Entity pProductRecepiStatus_T01Entity = new ProductRecepiStatus_T01Entity();

                pProductRecepiStatus_T01Entity.CORP_CODE = pDataRow["corp_code"] is DBNull ? string.Empty : pDataRow["corp_code"] as string;  // 회사코드

                return pProductRecepiStatus_T01Entity;
            }
            catch (ExceptionManager pExceptionManager)
            {
                throw pExceptionManager;
            }
            catch (Exception pException)
            {
                throw new ExceptionManager
                (
                    this,
                    "GetEntity(pDataRow)",
                    pException
                );
            }
        }

        #endregion

    }

}
